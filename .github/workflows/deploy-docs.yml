name: Build & Deploy MkDocs to OVH

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      OVH_HOST: ${{ secrets.OVH_HOST }}
      OVH_USER: ${{ secrets.OVH_USER }}
      OVH_SSH_KEY_PATH: ${{ secrets.OVH_SSH_KEY_PATH }}
      PRODUCT_DIR: "site-product/*"
      SYSTEM_DIR: "site-system/*"
      PRODUCT_TARGET: "/var/www/dhanman-docs-site"
      SYSTEM_TARGET: "/var/www/dhanman-tech-docs-site"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install MkDocs and plugins
        run: |
          pip install mkdocs mkdocs-material plantuml-markdown

      - name: Build MkDocs Product Documentation
        run: |
          MKDOCS_CONFIG_FILE=mkdocs-product.yml mkdocs build --site-dir site-product

      - name: Build MkDocs System Documentation
        run: |
          MKDOCS_CONFIG_FILE=mkdocs-system.yml mkdocs build --site-dir site-system

      - name: Deploy Product Documentation to OVH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.OVH_HOST }}
          username: ${{ env.OVH_USER }}
          key: ${{ secrets.OVH_SSH_KEY }}
          port: 22
          source: "${{ env.PRODUCT_DIR }}"
          target: "${{ env.PRODUCT_TARGET }}"
          strip_components: 1
          timeout: 30s
          command_timeout: 10m
          debug: false

      - name: Deploy System Documentation to OVH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.OVH_HOST }}
          username: ${{ env.OVH_USER }}
          key: ${{ secrets.OVH_SSH_KEY }}
          port: 22
          source: "${{ env.SYSTEM_DIR }}"
          target: "${{ env.SYSTEM_TARGET }}"
          strip_components: 1
          timeout: 30s
          command_timeout: 10m
          debug: false
