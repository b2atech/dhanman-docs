@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/v2.7.0/C4_Container.puml
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v16.0/dist
!include AWSPuml/AWSCommon.puml

' Uncomment the following line to create simplified view
!include AWSPuml/AWSSimplified.puml
!include AWSPuml/General/Users.puml
!include AWSPuml/ApplicationIntegration/APIGateway.puml
!include AWSPuml/SecurityIdentityCompliance/Cognito.puml
!include AWSPuml/Compute/Lambda.puml
!include AWSPuml/Database/DynamoDB.puml
!$AWS_DARK = false

SHOW_PERSON_OUTLINE()
AddElementTag("backendContainer", $fontColor=$ELEMENT_FONT_COLOR, $bgColor="#335DA5", $shape=EightSidedShape(), $legendText="backend container\neight sided")
AddRelTag("async", $textColor=$ARROW_FONT_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DashedLine())
AddRelTag("sync/async", $textColor=$ARROW_FONT_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DottedLine())

title Container diagram for DhanMan Accounting System

Person(customer, Customer, "A user of the system, with a company")

System_Boundary(c1, "Microfrontend"){
    
    Container(web_app, "Web Application", "React, MUI", "Delivers the dynamic content")

}
System_Boundary(c2, "API Gateway"){
    APIGateway(gateway, "API Gateway", "API Gateway")
}
System_Boundary(c9, "Authention-uthorization"){
    APIGateway(authention, "Authention", "Authention")
}
System_Boundary(c3, "Accounting APIs"){
    APIGateway(purchase, "Purchase API", ".NET CORE")
    APIGateway(sales, "Sales API", "Sales Gateway")
    APIGateway(money, "Money API", "Money Gateway")
    APIGateway(common, "Common API", "Common Gateway")
}
System_Boundary(c4, "Storage"){
    ContainerDb(purchaseDB, "Purchase DB", "PostgreSQL")
    ContainerDb(salesDB, "Sales DB", "PostgreSQL")
    ContainerDb(moneyDB, "Purchase DB", "PostgreSQL")
    ContainerDb(commoneDB, "Common DB", "PostgreSQL")
}

System_Boundary(c5, "Document API"){
     APIGateway(documents, "Documents API", "Documents")
}

System_Boundary(c7, "Document Storage"){
      ContainerDb(documentsDB, "Documents DB", "Object Store")
}

System_Boundary(c6, "Crosscutting"){
     'APIGateway(documentsDB, "Documents DB", "Object Store")
}

' System_Boundary(c5, "Internet Banking") {
'     Container(web_app, "Web Application", "Java, Spring MVC", "Delivers the static content and the Internet banking SPA")
'     Container(spa, "Single-Page App", "JavaScript, Angular", "Provides all the Internet banking functionality to customers via their web browser")
'     Container(mobile_app, "Mobile App", "C#, Xamarin", "Provides a limited subset of the Internet banking functionality to customers via their mobile device")
'     ContainerDb(database, "Database", "SQL Database", "Stores user registration information, hashed auth credentials, access logs, etc.")
'     Container(backend_api, "API Application", "Java, Docker Container", "Provides Internet banking functionality via API", $tags="backendContainer")
' }

System_Ext(auth_0, "Authentication Proviter", "Auth0: Secure access for everyone. But not just anyone.")

System_Ext(email_system, "E-Mail System", "The internal Microsoft Exchange system")
System_Ext(banking_system, "Mainframe Banking System", "Stores all of the core banking information about customers, accounts, transactions, etc.")

Rel(customer, web_app, "Uses", "HTTPS")

Rel(web_app, gateway, "Uses", "async, JSON/HTTPS", $tags="async")
Rel(gateway, purchase, "Uses", "async, JSON/HTTPS", $tags="async")
Rel(gateway, sales, "Uses", "async, JSON/HTTPS", $tags="async")
Rel(gateway, money, "Uses", "async, JSON/HTTPS", $tags="async")
Rel(gateway, documents, "Uses", "async, JSON/HTTPS", $tags="async")

Rel(gateway, common, "Uses", "async, JSON/HTTPS", $tags="async")

Rel(purchase, purchaseDB, "Uses", "EF")
Rel(sales, salesDB, "Uses", "EF")
Rel(money, moneyDB, "Uses", "EF")
Rel(common, commoneDB, "Uses", "EF")

Rel(web_app, authention, "Uses", "EF")

Rel(authention, auth_0, "Uses", "HTTPS")

Rel(documents, documentsDB, "HTTPS", "")

'Rel(documents, documentsDB, "Uses", "")


' Rel(customer, spa, "Uses", "HTTPS")
' Rel(customer, mobile_app, "Uses")

' Rel_Neighbor(web_app, spa, "Delivers")
' Rel(spa, backend_api, "Uses", "async, JSON/HTTPS", $tags="async")
' Rel(mobile_app, backend_api, "Uses", "async, JSON/HTTPS", $tags="async")
' Rel_Back_Neighbor(database, backend_api, "Reads from and writes to", "sync, JDBC")

' Rel_Back(customer, email_system, "Sends e-mails to")
' Rel_Back(email_system, backend_api, "Sends e-mails using", "sync, SMTP")
' Rel_Neighbor(backend_api, banking_system, "Uses", "sync/async, XML/HTTPS", $tags="sync/async")

'SHOW_LEGEND()
@enduml
