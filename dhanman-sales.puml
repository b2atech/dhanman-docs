@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/v2.7.0/C4_Container.puml
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v16.0/dist
!include AWSPuml/AWSCommon.puml

' Uncomment the following line to create simplified view
!include AWSPuml/AWSSimplified.puml
!include AWSPuml/General/Users.puml
!include AWSPuml/ApplicationIntegration/APIGateway.puml
!include AWSPuml/SecurityIdentityCompliance/Cognito.puml
!include AWSPuml/Compute/Lambda.puml
!include AWSPuml/Database/DynamoDB.puml
!$AWS_DARK = false

SHOW_PERSON_OUTLINE()
AddElementTag("backendContainer", $fontColor=$ELEMENT_FONT_COLOR, $bgColor="#335DA5", $shape=EightSidedShape(), $legendText="backend container\neight sided")
AddRelTag("async", $textColor=$ARROW_FONT_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DashedLine())
AddRelTag("sync/async", $textColor=$ARROW_FONT_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DottedLine())

title Container diagram for Backend sales Project one endpoint flow

Person(customer, Customer, "A user of the system, with a company")

System_Boundary(c1, "Api.Controllers"){
    Container(web_app, "Invoice Controller", "C#", "")
}
System_Boundary(cm, "Middlewares"){
    Container(ex_middleware, "Exception Handler Middleware", "C#", "")
}
System_Boundary(cm, "Middlewares"){
    Container(ex_middleware, "Exception Handler Middleware", "C#", "")
}
System_Boundary(c_mediator, "Mediator"){
    APIGateway(mediator, "Mediator", "Send")
}
System_Boundary(c_mediator, "Mediator"){
    APIGateway(mediator, "Mediator", "Send")
}
System_Boundary(c_query, "Query"){
    APIGateway(query, "Query", "Send")
}
System_Boundary(c_queryHandler, "Query Handler"){
    APIGateway(queryHandler, "Query Handler", "Send")
}
System_Boundary(c_UnitOfWorkBehaviour, "Unit Of Work Behaviour"){
    APIGateway(unitOfWorkBehaviour, "Unit Of Work Behaviour", "Send")
}


Rel(customer, ex_middleware, "Uses", "HTTPS")

Rel(ex_middleware, web_app,  "Uses", "async, JSON/HTTPS", $tags="async")
Rel(web_app, query,  "Uses", "async, JSON/HTTPS", $tags="async")
Rel(query, mediator,  "Uses", "async, JSON/HTTPS", $tags="async")
Rel(mediator, queryHandler,  "Uses", "async, JSON/HTTPS", $tags="async")
Rel( queryHandler, unitOfWorkBehaviour, "Uses", "async, JSON/HTTPS", $tags="async")

@enduml
*