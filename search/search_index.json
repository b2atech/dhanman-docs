{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to DhanMan Documentation","text":"<p>DhanMan is an advanced financial management software designed to streamline accounting and operational workflows for organizations of all types, from apartment complexes to small businesses. This platform integrates key features such as invoicing, payment tracking, payroll, and financial analytics into a user-friendly system that makes managing finances simpler and more efficient.</p>"},{"location":"#key-features","title":"Key Features:","text":"<ul> <li>Accounting Simplified: Manage income, expenses, invoices, and bills with ease.</li> <li>Customizable for Apartment Complexes: Setup buildings, units, and residents while defining payment strategies tailored to your needs.</li> <li>Comprehensive Expense Tracking: Monitor utility bills, payroll, and maintenance costs.</li> <li>Powerful Analytics: Generate profit-loss statements, monitor receivables, and identify trends in your financial data.</li> </ul>"},{"location":"#what-youll-find-here","title":"What You\u2019ll Find Here:","text":"<p>This documentation provides detailed information to help you get started and use DhanMan effectively. Explore the sections to learn about: - Authentication: Secure login and user management. - Permissions: Configure user roles and access levels. - Accounting Entries: Manage day-to-day financial operations. - Financial Reports: Analyze financial health with insightful reports. - Payroll: Handle salaries and employee details seamlessly. - Coding Conventions and Guides: For developers extending DhanMan's capabilities.</p>"},{"location":"#getting-started","title":"Getting Started:","text":"<p>To begin, navigate through the sidebar for detailed guides and step-by-step instructions. Whether you're an administrator setting up your organization, a resident managing payments, or a developer customizing features, this documentation has you covered.</p> <p>For more details, visit our official website or contact our support team.</p>"},{"location":"authentication-authorization/","title":"Request -&gt;Authentication-&gt;Authorization","text":""},{"location":"authentication-authorization/#overview","title":"Overview","text":"<p>This document outlines the flow of a request from when it enters the system, how authentication and authorization are handled, and how the <code>IUserContextService</code>, <code>PermissionHandler</code>, and <code>PermissionService</code> work together.</p>"},{"location":"authentication-authorization/#summary","title":"Summary","text":"<ol> <li>Incoming Request: A request with a JWT token arrives at the API.</li> <li>Authentication: The JWT token is validated, and user claims are populated.</li> <li>Dependency Injection: <code>IUserContextService</code> is injected to provide user context.</li> <li>Controller Handling: The request is routed to a controller derived from <code>ApiController</code>.</li> <li>Authorization: The <code>[Authorize]</code> attribute triggers the <code>PermissionHandler</code>.</li> <li>Permission Checking:<ul> <li><code>PermissionHandler</code> uses <code>IServiceScopeFactory</code> to create a new scope and resolve <code>IPermissionService</code>.</li> <li><code>PermissionService</code> checks the database and cache for the required permissions.</li> </ul> </li> <li>Action Execution: If authorization succeeds, the controller action is executed.</li> </ol>"},{"location":"authentication-authorization/#detailed-steps","title":"Detailed Steps","text":""},{"location":"authentication-authorization/#1-incoming-request-with-token","title":"1. Incoming Request with Token","text":"<p>When a client makes a request to the API, it includes a JWT token in the <code>Authorization</code> header.</p> <pre><code>GET /api/orders HTTP/1.1\nHost: api.example.com\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n</code></pre>"},{"location":"authentication-authorization/#2-authentication","title":"2. Authentication","text":"<p>The middleware in <code>Startup.cs</code> or <code>Program.cs</code> is configured to validate JWT tokens.</p> <pre><code>public void ConfigureServices(IServiceCollection services)\n{\n    services.AddAuthentication(options =&gt;\n    {\n        options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\n        options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\n    })\n    .AddJwtBearer(options =&gt;\n    {\n        options.Authority = \"https://your-auth-server.com\";\n        options.Audience = \"your-audience\";\n        // Other JWT validation parameters\n    });\n\n    services.AddAuthorization();\n    services.AddHttpContextAccessor();\n    services.AddScoped&lt;IUserContextService, UserContextService&gt;();\n    services.AddScoped&lt;IPermissionService, PermissionService&gt;();\n    services.AddScoped&lt;IAuthorizationHandler, PermissionHandler&gt;();\n\n    services.AddDbContext&lt;PermissionDbContext&gt;(options =&gt;\n        options.UseNpgsql(Configuration.GetConnectionString(\"PermissionDbConnection\"))\n               .UseSnakeCaseNamingConvention());\n\n    // Other service registrations\n}\n</code></pre> <p>When the request arrives, the <code>AddJwtBearer</code> middleware validates the token. If the token is valid, the user is authenticated and the user's claims are populated in <code>HttpContext.User</code>.</p>"},{"location":"authentication-authorization/#3-dependency-injection","title":"3. Dependency Injection","text":"<p>Services like <code>IUserContextService</code> are injected into controllers and other services as needed. This is configured in the <code>ConfigureServices</code> method as shown above.</p>"},{"location":"authentication-authorization/#4-controller-handling","title":"4. Controller Handling","text":"<p>The request is routed to the appropriate controller. All controllers inherit from <code>ApiController</code>, which ensures they have access to common functionality like <code>IUserContextService</code>.</p> <pre><code>[Authorize]\npublic abstract class ApiController : ControllerBase\n{\n    protected IMediator Mediator { get; }\n    protected IUserContextService UserContextService { get; }\n\n    protected ApiController(IMediator mediator, IUserContextService userContextService)\n    {\n        Mediator = mediator;\n        UserContextService = userContextService;\n    }\n}\n</code></pre>"},{"location":"authentication-authorization/#5-authorization","title":"5. Authorization","text":"<p>The <code>[Authorize]</code> attribute on <code>ApiController</code> triggers the authorization process.</p>"},{"location":"authentication-authorization/#6-permission-checking","title":"6. Permission Checking","text":"<ol> <li> <p>PermissionHandler:</p> <ul> <li>The <code>PermissionHandler</code> is an <code>AuthorizationHandler</code> that checks if the user has the required permissions.</li> </ul> </li> </ol> <pre><code>    public class PermissionHandler : AuthorizationHandler&lt;PermissionRequirement&gt;\n    {\n        private readonly IServiceScopeFactory _serviceScopeFactory;\n        private readonly IHttpContextAccessor _httpContextAccessor;\n        private readonly ILogger&lt;PermissionHandler&gt; _logger;\n\n        public PermissionHandler(IServiceScopeFactory serviceScopeFactory, IHttpContextAccessor httpContextAccessor, ILogger&lt;PermissionHandler&gt; logger)\n        {\n            _serviceScopeFactory = serviceScopeFactory;\n            _httpContextAccessor = httpContextAccessor;\n            _logger = logger;\n        }\n\n        protected override async Task HandleRequirementAsync(AuthorizationHandlerContext context, PermissionRequirement requirement)\n        {\n            _logger.LogDebug(\"Starting authorization check for permission: {Permission}\", requirement.Permission);\n\n            var userIdClaim = _httpContextAccessor.HttpContext.User?.FindFirst(\"dhanman_id\");\n            if (userIdClaim != null &amp;&amp; Guid.TryParse(userIdClaim.Value, out var userId))\n            {\n                _logger.LogInformation(\"User {UserId} found, checking permissions.\", userId);\n\n                if (await HasPermissionIterativelyAsync(userId, requirement))\n                {\n                    context.Succeed(requirement);\n                    _logger.LogInformation(\"Authorization succeeded for user {UserId} on permission {Permission}.\", userId, requirement.Permission);\n                    return;\n                }\n            }\n            else\n            {\n                _logger.LogWarning(\"User ID claim 'dhanman_id' not found or invalid.\");\n            }\n\n            _logger.LogWarning(\"Authorization failed for user {UserId} on permission {Permission}.\", userIdClaim?.Value, requirement.Permission);\n            context.Fail();\n        }\n\n        private async Task&lt;bool&gt; HasPermissionIterativelyAsync(Guid userId, PermissionRequirement requirement)\n        {\n            _logger.LogDebug(\"Checking permissions iteratively for user {UserId}.\", userId);\n\n            var permissionsToCheck = new Stack&lt;PermissionRequirement&gt;();\n            permissionsToCheck.Push(requirement);\n\n            while (permissionsToCheck.Count &gt; 0)\n            {\n                var currentPermission = permissionsToCheck.Pop();\n\n                using (var scope = _serviceScopeFactory.CreateScope())\n                {\n                    var permissionService = scope.ServiceProvider.GetRequiredService&lt;IPermissionService&gt;();\n\n                    // Check if the user has the current permission\n                    if (await permissionService.HasPermissionAsync(userId, currentPermission.Permission))\n                    {\n                        _logger.LogDebug(\"Permission {Permission} granted for user {UserId}.\", currentPermission.Permission, userId);\n                        return true;\n                    }\n                }\n\n                // Add child permissions to the stack for checking\n                foreach (var childPermission in currentPermission.ChildPermissions)\n                {\n                    permissionsToCheck.Push(childPermission);\n                }\n            }\n\n            _logger.LogDebug(\"Permission {Permission} denied for user {UserId}.\", requirement.Permission, userId);\n            return false;\n        }\n    }\n</code></pre> <ol> <li> <p>PermissionService:</p> <ul> <li>The <code>PermissionService</code> checks if the user has the necessary permissions by querying the database.</li> </ul> </li> </ol> <pre><code>    public class PermissionService : IPermissionService\n    {\n        private readonly PermissionDbContext _context;\n        private readonly IMemoryCache _cache;\n        private readonly ILogger&lt;PermissionService&gt; _logger;\n\n        public PermissionService(PermissionDbContext context, IMemoryCache cache, ILogger&lt;PermissionService&gt; logger)\n        {\n            _context = context;\n            _cache = cache;\n            _logger = logger;\n        }\n\n        public async Task&lt;bool&gt; HasPermissionAsync(Guid userId, string permission)\n        {\n            var cacheKey = $\"{userId}_{permission}\";\n            _logger.LogDebug(\"Checking permissions for user {UserId} on permission {Permission}\", userId, permission);\n\n            if (_cache.TryGetValue(cacheKey, out bool hasPermissionfromCache))\n            {\n                _logger.LogInformation(\"Permission {Permission} for user {UserId} found in cache.\", permission, userId);\n                return hasPermissionfromCache;\n            }\n\n            _logger.LogDebug(\"Permission {Permission} for user {UserId} not found in cache. Checking database.\", permission, userId);\n\n            bool hasPermission = await _context.UserPermissions\n                .AnyAsync(up =&gt; up.UserId == userId &amp;&amp; up.Permission.Name == permission);\n\n            var cacheEntryOptions = new MemoryCacheEntryOptions()\n                .SetSlidingExpiration(TimeSpan.FromMinutes(60));\n\n            _cache.Set(cacheKey, hasPermission, cacheEntryOptions);\n\n            _logger.LogInformation(\"Permission {Permission} for user {UserId} retrieved from database and cached: {HasPermission}\", permission, userId, hasPermission);\n\n            return hasPermission;\n        }\n    }\n</code></pre>"},{"location":"authentication-authorization/#7-action-execution","title":"7. Action Execution","text":"<p>If the authorization succeeds, the controller action is executed. If it fails, the request is denied with a <code>403 Forbidden</code> response.</p>"},{"location":"common/","title":"Common Permissions","text":""},{"location":"common/#accounts-permissions","title":"Accounts Permissions","text":"<ul> <li>Accounts.Read</li> <li><code>Accounts.Read.AccountGroups</code></li> <li><code>Accounts.Read.AccountCategories</code></li> <li><code>Accounts.Read.SalesAccounts</code></li> <li><code>Accounts.Read.PurchaseAccounts</code></li> <li><code>Accounts.Read.BankAccounts</code></li> <li><code>Accounts.Read.CashAccounts</code></li> <li><code>Accounts.Read.BankAndCashAccounts</code></li> <li><code>Accounts.Read.ChartOfAccounts</code></li> <li><code>Accounts.Read.ChildAccounts</code></li> <li>Accounts.Write</li> <li><code>Accounts.Write.AccountGroups</code></li> <li><code>Accounts.Write.AccountCategories</code></li> <li><code>Accounts.Write.ChartOfAccounts</code></li> </ul>"},{"location":"common/#address-permissions","title":"Address Permissions","text":"<ul> <li>Address.Read</li> <li><code>Address.Read.Countries</code></li> <li><code>Address.Read.States</code></li> <li><code>Address.Read.Cities</code></li> <li><code>Address.Read.Addresses</code></li> </ul>"},{"location":"common/#company-permissions","title":"Company Permissions","text":"<ul> <li>Company.Read</li> <li><code>Company.Read.Companies</code></li> <li><code>Company.Read.CompanyNames</code></li> <li><code>Company.Read.Company</code></li> <li><code>Company.Read.CompaniesByOrganization</code></li> <li><code>Company.Read.DefaultCompanyByUser</code></li> <li>Company.Write</li> <li><code>Company.Write.Companies</code></li> </ul>"},{"location":"common/#company-preferences-permissions","title":"Company Preferences Permissions","text":"<ul> <li>CompanyPreferences.Read</li> <li><code>CompanyPreferences.Read.CompanyPreferences</code></li> <li>CompanyPreferences.Write</li> <li><code>CompanyPreferences.Write.CompanyPreferences</code></li> </ul>"},{"location":"common/#currency-permissions","title":"Currency Permissions","text":"<ul> <li>Currency.Read</li> <li><code>Currency.Read.Currencies</code></li> </ul>"},{"location":"common/#customers-permissions","title":"Customers Permissions","text":"<ul> <li>Customers.Write</li> <li><code>Customers.Write.Customers</code></li> </ul>"},{"location":"common/#general-ledgers-permissions","title":"General Ledgers Permissions","text":"<ul> <li>GeneralLedgers.Read</li> <li><code>GeneralLedgers.Read.GeneralLedgers</code></li> <li>GeneralLedgers.Write</li> <li><code>GeneralLedgers.Write.GeneralLedgers</code></li> </ul>"},{"location":"common/#journal-voucher-permissions","title":"Journal Voucher Permissions","text":"<ul> <li>JournalVoucher.Write</li> <li><code>JournalVoucher.Write.JournalVouchers</code></li> </ul>"},{"location":"common/#notification-permissions","title":"Notification Permissions","text":"<ul> <li>Notification.Read</li> <li><code>Notification.Read.Notifications</code></li> <li>Notification.Write</li> <li><code>Notification.Write.Notifications</code></li> </ul>"},{"location":"common/#organization-permissions","title":"Organization Permissions","text":"<ul> <li>Organization.Read</li> <li><code>Organization.Read.OrganizationAccounts</code></li> <li><code>Organization.Read.OrganizationAccountsByCompany</code></li> </ul>"},{"location":"common/#payments-permissions","title":"Payments Permissions","text":"<ul> <li>Payments.Write</li> <li><code>Payments.Write.Payments</code></li> </ul>"},{"location":"common/#permissions-management","title":"Permissions Management","text":"<ul> <li>Permissions.Read</li> <li><code>Permissions.Read.Permissions</code></li> </ul>"},{"location":"common/#public-user-permissions","title":"Public User Permissions","text":"<ul> <li>PublicUser.Read</li> <li><code>PublicUser.Read.PublicUsers</code></li> </ul>"},{"location":"common/#roles-permissions","title":"Roles Permissions","text":"<ul> <li>Roles.Read</li> <li><code>Roles.Read.Roles</code></li> </ul>"},{"location":"common/#transaction-permissions","title":"Transaction Permissions","text":"<ul> <li>Transaction.Write</li> <li><code>Transaction.Write.Transactions</code></li> </ul>"},{"location":"common/#users-permissions","title":"Users Permissions","text":"<ul> <li>Users.Read</li> <li><code>Users.Read.Users</code></li> <li><code>Users.Read.UserNames</code></li> <li>Users.Write</li> <li><code>Users.Write.Users</code></li> </ul>"},{"location":"common/#vendors-permissions","title":"Vendors Permissions","text":"<ul> <li>Vendors.Write</li> <li><code>Vendors.Write.Vendors</code></li> </ul>"},{"location":"common/#warehouse-permissions","title":"Warehouse Permissions","text":"<ul> <li>Warehouse.Read</li> <li><code>Warehouse.Read.Warehouses</code></li> <li><code>Warehouse.Read.WarehouseNames</code></li> <li>Warehouse.Write</li> <li><code>Warehouse.Write.Warehouses</code></li> </ul>"},{"location":"common/#permissions-hierarchy","title":"Permissions Hierarchy","text":""},{"location":"common/#commonadmin","title":"Common.Admin","text":"<ul> <li>**Permissions.Admin<ul> <li>Permissions.Read</li> <li><code>Permissions.Read.Permissions</code></li> </ul> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> </ul>"},{"location":"common/#accountsadmin","title":"Accounts.Admin","text":"<ul> <li>Accounts.Read<ul> <li><code>Accounts.Read.AccountGroups</code></li> <li><code>Accounts.Read.AccountCategories</code></li> <li><code>Accounts.Read.SalesAccounts</code></li> <li><code>Accounts.Read.PurchaseAccounts</code></li> <li><code>Accounts.Read.BankAccounts</code></li> <li><code>Accounts.Read.CashAccounts</code></li> <li><code>Accounts.Read.BankAndCashAccounts</code></li> <li><code>Accounts.Read.ChartOfAccounts</code></li> <li><code>Accounts.Read.ChildAccounts</code></li> </ul> </li> <li>Accounts.Write<ul> <li><code>Accounts.Write.AccountGroups</code></li> <li><code>Accounts.Write.AccountCategories</code></li> <li><code>Accounts.Write.ChartOfAccounts</code></li> </ul> </li> </ul>"},{"location":"common/#addressadmin","title":"Address.Admin","text":"<ul> <li>Address.Read<ul> <li><code>Address.Read.Countries</code></li> <li><code>Address.Read.States</code></li> <li><code>Address.Read.Cities</code></li> <li><code>Address.Read.Addresses</code></li> </ul> </li> </ul>"},{"location":"common/#companyadmin","title":"Company.Admin","text":"<ul> <li>Company.Read</li> <li><code>Company.Read.Companies</code></li> <li><code>Company.Read.CompanyNames</code></li> <li><code>Company.Read.Company</code></li> <li><code>Company.Read.CompaniesByOrganization</code></li> <li><code>Company.Read.DefaultCompanyByUser</code></li> <li>Company.Write</li> <li><code>Company.Write.Companies</code></li> </ul>"},{"location":"common/#companypreferencesadmin","title":"CompanyPreferences.Admin","text":"<ul> <li>CompanyPreferences.Read</li> <li><code>CompanyPreferences.Read.CompanyPreferences</code></li> <li>CompanyPreferences.Write</li> <li><code>CompanyPreferences.Write.CompanyPreferences</code></li> </ul>"},{"location":"common/#currencyadmin","title":"Currency.Admin","text":"<ul> <li>Currency.Read</li> <li><code>Currency.Read.Currencies</code></li> </ul>"},{"location":"common/#customersadmin","title":"Customers.Admin","text":"<ul> <li>Customers.Write</li> <li><code>Customers.Write.Customers</code></li> </ul>"},{"location":"common/#generalledgersadmin","title":"GeneralLedgers.Admin","text":"<ul> <li>GeneralLedgers.Read</li> <li><code>GeneralLedgers.Read.GeneralLedgers</code></li> <li>GeneralLedgers.Write</li> <li><code>GeneralLedgers.Write.GeneralLedgers</code></li> </ul>"},{"location":"common/#journalvoucheradmin","title":"JournalVoucher.Admin","text":"<ul> <li>JournalVoucher.Write</li> <li><code>JournalVoucher.Write.JournalVouchers</code></li> </ul>"},{"location":"common/#notificationadmin","title":"Notification.Admin","text":"<ul> <li>Notification.Read</li> <li><code>Notification.Read.Notifications</code></li> <li>Notification.Write</li> <li><code>Notification.Write.Notifications</code></li> </ul>"},{"location":"common/#organizationadmin","title":"Organization.Admin**","text":"<ul> <li>Organization.Read</li> <li><code>Organization.Read.OrganizationAccounts</code></li> <li><code>Organization.Read.OrganizationAccountsByCompany</code></li> </ul>"},{"location":"common/#paymentsadmin","title":"Payments.Admin","text":"<ul> <li>Payments.Write</li> <li><code>Payments.Write.Payments</code></li> </ul>"},{"location":"common/#publicuseradmin","title":"PublicUser.Admin","text":"<ul> <li>PublicUser.Read</li> <li><code>PublicUser.Read.PublicUsers</code></li> </ul>"},{"location":"common/#rolesadmin","title":"Roles.Admin","text":"<ul> <li>Roles.Read</li> <li><code>Roles.Read.Roles</code></li> </ul>"},{"location":"common/#transactionadmin","title":"Transaction.Admin","text":"<ul> <li>Transaction.Write</li> <li><code>Transaction.Write.Transactions</code></li> </ul>"},{"location":"common/#usersadmin","title":"Users.Admin","text":"<ul> <li>Users.Read</li> <li><code>Users.Read.Users</code></li> <li><code>Users.Read.UserNames</code></li> <li>Users.Write</li> <li><code>Users.Write.Users</code></li> </ul>"},{"location":"common/#vendorsadmin","title":"Vendors.Admin","text":"<ul> <li>Vendors.Write</li> <li><code>Vendors.Write.Vendors</code></li> </ul>"},{"location":"common/#warehouseadmin","title":"Warehouse.Admin","text":"<ul> <li>Warehouse.Read</li> <li><code>Warehouse.Read.Warehouses</code></li> <li><code>Warehouse.Read.WarehouseNames</code></li> </ul>"},{"location":"common/#warehousewrite","title":"Warehouse.Write","text":"<ul> <li><code>Warehouse.Write.Warehouses</code></li> </ul>"},{"location":"accounting/introduction/","title":"Accounting Documentation for Apartment Management System","text":"<p>This document outlines the Chart of Accounts, Accounting Entries, and the distinction between Profit and Loss (P&amp;L) and Balance Sheet accounts for an apartment management system.</p>"},{"location":"accounting/introduction/#1-chart-of-accounts","title":"1. Chart of Accounts","text":""},{"location":"accounting/introduction/#asset-accounts","title":"Asset Accounts","text":"<ul> <li>1010 Cash: Tracks cash on hand.</li> <li>1020 Bank Account: Tracks money in the bank.</li> <li>1030 Accounts Receivable: Tracks rent owed by tenants.</li> <li>1040 Prepaid Expenses: Tracks prepaid expenses (e.g., insurance).</li> </ul>"},{"location":"accounting/introduction/#liability-accounts","title":"Liability Accounts","text":"<ul> <li>2010 Accounts Payable: Tracks bills owed to vendors.</li> <li>2020 Security Deposits: Tracks security deposits from tenants.</li> <li>2030 Unearned Rent: Tracks rent received in advance.</li> </ul>"},{"location":"accounting/introduction/#equity-accounts","title":"Equity Accounts","text":"<ul> <li>3010 Owner\u2019s Equity: Tracks the owner\u2019s investment in the business.</li> <li>3020 Retained Earnings: Tracks profits reinvested in the business.</li> </ul>"},{"location":"accounting/introduction/#revenue-accounts","title":"Revenue Accounts","text":"<ul> <li>4010 Rent Income: Tracks rental income from tenants.</li> <li>4020 Late Fees: Tracks late fees charged to tenants.</li> </ul>"},{"location":"accounting/introduction/#expense-accounts","title":"Expense Accounts","text":"<ul> <li>5010 Utilities Expense: Tracks utility bills (e.g., water, electricity).</li> <li>5020 Maintenance Expense: Tracks maintenance costs.</li> <li>5030 Property Taxes: Tracks property taxes.</li> <li>5040 Insurance Expense: Tracks insurance costs.</li> </ul>"},{"location":"accounting/introduction/#2-accounting-entries","title":"2. Accounting Entries","text":""},{"location":"accounting/introduction/#21-when-rent-invoice-is-raised","title":"2.1. When Rent Invoice is Raised","text":"<ul> <li>Debit: Accounts Receivable (Asset increases).</li> <li>Credit: Rent Income (Revenue increases).</li> </ul> <p>Journal Entry: - Debit : Accounts Receivable (1030) -  1,000 - Credit:RentIncome(4010)\u22121,000</p>"},{"location":"accounting/introduction/#22-when-rent-is-paid-by-tenant","title":"2.2. When Rent is Paid by Tenant","text":"<ul> <li>Debit: Cash/Bank Account (Asset increases).</li> <li>Credit: Accounts Receivable (Asset decreases).</li> </ul> <p>Journal Entry: - Debit: Cash (1010) -  1,000 - Credit: AccountsReceivable(1030)\u22121,000</p>"},{"location":"accounting/introduction/#23-when-a-bill-is-raised-eg-maintenance","title":"2.3. When a Bill is Raised (e.g., Maintenance)","text":"<ul> <li>Debit: Maintenance Expense (Expense increases).</li> <li>Credit: Accounts Payable (Liability increases).</li> </ul> <p>Journal Entry: - Debit: Maintenance Expense (5020) - 200 - Credit: AccountsPayable(2010)\u2212200Credit:AccountsPayable(2010)\u2212200</p>"},{"location":"accounting/introduction/#24-when-a-bill-is-paid","title":"2.4. When a Bill is Paid","text":"<ul> <li>Debit: Accounts Payable (Liability decreases).</li> <li>Credit: Cash/Bank Account (Asset decreases).</li> </ul> <p>Journal Entry: - Debit: Accounts Payable (2010) -  200 - Credit: Cash(1010)\u2212200</p>"},{"location":"accounting/introduction/#25-when-security-deposit-is-received","title":"2.5. When Security Deposit is Received","text":"<ul> <li>Debit: Cash/Bank Account (Asset increases).</li> <li>Credit: Security Deposits (Liability increases).</li> </ul> <p>Journal Entry: - Debit: Cash (1010) -  500 - Credit: SecurityDeposits(2020)\u2212500</p>"},{"location":"accounting/introduction/#26-when-security-deposit-is-refunded","title":"2.6. When Security Deposit is Refunded","text":"<ul> <li>Debit: Security Deposits (Liability decreases).</li> <li>Credit: Cash/Bank Account (Asset decreases).</li> </ul> <p>Journal Entry: - Debit: Security Deposits (2020) -  500 - Credit:Cash(1010)\u2212500</p>"},{"location":"accounting/introduction/#3-profit-and-loss-pl-vs-balance-sheet-accounts","title":"3. Profit and Loss (P&amp;L) vs. Balance Sheet Accounts","text":""},{"location":"accounting/introduction/#profit-and-loss-statement-pl-accounts","title":"Profit and Loss Statement (P&amp;L) Accounts","text":"<ul> <li>Revenue Accounts:</li> <li>4010 Rent Income</li> <li>4020 Late Fees</li> <li>Expense Accounts:</li> <li>5010 Utilities Expense</li> <li>5020 Maintenance Expense</li> <li>5030 Property Taxes</li> <li>5040 Insurance Expense</li> </ul>"},{"location":"accounting/introduction/#balance-sheet-accounts","title":"Balance Sheet Accounts","text":"<ul> <li>Asset Accounts:</li> <li>1010 Cash</li> <li>1020 Bank Account</li> <li>1030 Accounts Receivable</li> <li>1040 Prepaid Expenses</li> <li>Liability Accounts:</li> <li>2010 Accounts Payable</li> <li>2020 Security Deposits</li> <li>2030 Unearned Rent</li> <li>Equity Accounts:</li> <li>3010 Owner\u2019s Equity</li> <li>3020 Retained Earnings</li> </ul>"},{"location":"accounting/introduction/#4-example-transactions","title":"4. Example Transactions","text":""},{"location":"accounting/introduction/#transaction-1-rent-invoice-raised","title":"Transaction 1: Rent Invoice Raised","text":"<ul> <li>Tenant A is invoiced $1,000 for rent.</li> <li>Debit: Accounts Receivable (1030) -  1,000 </li> <li>Credit:RentIncome(4010)\u22121,000</li> </ul>"},{"location":"accounting/introduction/#transaction-2-rent-payment-received","title":"Transaction 2: Rent Payment Received","text":"<ul> <li>Tenant A pays the $1,000 rent.</li> <li>Debit: Cash (1010) -  1,000</li> <li>Credit: AccountsReceivable(1030)\u22121,000</li> </ul>"},{"location":"accounting/introduction/#transaction-3-maintenance-bill-received","title":"Transaction 3: Maintenance Bill Received","text":"<ul> <li> <p>A maintenance bill of $200 is received.</p> </li> <li> <p>Debit: Maintenance Expense (5020) -  200</p> </li> <li>Credit: AccountsPayable(2010)\u2212200</li> </ul>"},{"location":"accounting/introduction/#transaction-4-maintenance-bill-paid","title":"Transaction 4: Maintenance Bill Paid","text":"<ul> <li>The $200 maintenance bill is paid.</li> <li>Debit: Accounts Payable (2010) -  200</li> <li>Credit: Cash(1010)\u2212200</li> </ul>"},{"location":"accounting/introduction/#5-visual-representation","title":"5. Visual Representation","text":""},{"location":"accounting/introduction/#profit-and-loss-statement-pl","title":"Profit and Loss Statement (P&amp;L)","text":"<p>Revenue: Rent Income, Late Fees Expenses: Utilities, Maintenance, Taxes, Insurance Net Profit/Loss \u2192 Transferred to Retained Earnings on Balance Sheet</p>"},{"location":"accounting/introduction/#balance-sheet","title":"Balance Sheet","text":"<p>Assets: Cash, Bank, Accounts Receivable, Prepaid Expenses Liabilities: Accounts Payable, Security Deposits, Unearned Rent Equity: Owner\u2019s Equity, Retained Earnings</p>"},{"location":"accounting/introduction/#6-next-steps","title":"6. Next Steps","text":"<ul> <li>Design the database schema to store these accounts.</li> <li>Implement the accounting logic in the C# backend.</li> <li>Create React forms to input and display financial data.</li> </ul>"},{"location":"accounting_entries/credit_debit_notes/","title":"Customer Credit Note","text":"<p>A customer credit note is issued when a customer is given a credit, reducing the amount they owe.</p> <p>Accounts Affected:</p> <ul> <li>Accounts Receivable (Asset): Decrease (Credit)</li> <li>Account: <code>11200 Accounts Receivable</code></li> <li>Sales Revenue (Revenue): Decrease (Debit)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>CGST Payable (Liability): Decrease (Debit)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>SGST Payable (Liability): Decrease (Debit)</li> <li>Account: <code>23020 CGST Payable</code></li> <li>IGST Payable (Liability): Decrease (Debit)</li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"accounting_entries/credit_debit_notes/#customer-debit-note","title":"Customer Debit Note","text":"<p>A customer debit note is issued when a customer is debited, increasing the amount they owe.</p> <p>Accounts Affected:</p> <ul> <li>Accounts Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11200 Accounts Receivable</code></li> <li>Sales Revenue (Revenue): Increase (Credit)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>CGST Payable (Liability): Increase (Credit)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>SGST Payable (Liability): Increase (Credit)</li> <li>Account: <code>23020 CGST Payable</code></li> <li>IGST Payable (Liability): Increase (Credit)</li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"accounting_entries/credit_debit_notes/#vendor-credit-note","title":"Vendor Credit Note","text":"<p>A vendor credit note is issued when a vendor is given a credit, reducing the amount you owe to the vendor.</p> <p>Accounts Affected:</p> <ul> <li>Accounts Payable (Liability): Decrease (Debit)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Purchase Expense (Expense): Decrease (Credit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>CGST Receivable (Asset): Decrease (Credit)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>SGST Receivable (Asset): Decrease (Credit)</li> <li>Account: <code>11420 CGST Receivable</code></li> <li>IGST Receivable (Asset): Decrease (Credit)</li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/credit_debit_notes/#vendor-debit-note","title":"Vendor Debit Note","text":"<p>A vendor debit note is issued when a vendor is debited, increasing the amount you owe to the vendor.</p> <p>Accounts Affected:</p> <ul> <li>Accounts Payable (Liability): Increase (Credit)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Purchase Expense (Expense): Increase (Debit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>CGST Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>SGST Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11420 CGST Receivable</code></li> <li>IGST Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/entries_others/","title":"Other Accounting Transactions and Affected Accounts","text":""},{"location":"accounting_entries/entries_others/#payroll-transactions","title":"Payroll Transactions","text":"<p>Payroll transactions are recorded when employee salaries and wages are paid.</p> <p>Accounts Affected:</p> <ul> <li>Salaries and Wages (Expense): Increase (Debit)</li> <li>Account: <code>51710 Salaries and Wages</code></li> <li>Payroll Taxes (Expense): Increase (Debit)</li> <li>Account: <code>51810 Payroll Taxes</code></li> <li>Employee Benefits (Expense): Increase (Debit)</li> <li>Account: <code>51910 Employee Benefits</code></li> <li>Cash and Cash Equivalents (Asset): Decrease (Credit)</li> <li>Account: <code>11110 Petty Cash</code> or <code>11120 Bank Accounts</code></li> </ul>"},{"location":"accounting_entries/entries_others/#loan-disbursement","title":"Loan Disbursement","text":"<p>A loan disbursement is recorded when a company borrows money.</p> <p>Accounts Affected:</p> <ul> <li>Cash and Cash Equivalents (Asset): Increase (Debit)</li> <li>Account: <code>11120 Bank Accounts</code></li> <li>Loans Payable (Liability): Increase (Credit)</li> <li>Account: <code>22010 Short-Term Loans</code> or <code>26010 Long-Term Loans</code></li> </ul>"},{"location":"accounting_entries/entries_others/#loan-repayment","title":"Loan Repayment","text":"<p>A loan repayment is recorded when a company repays a loan.</p> <p>Accounts Affected:</p> <ul> <li>Loans Payable (Liability): Decrease (Debit)</li> <li>Account: <code>22010 Short-Term Loans</code> or <code>26010 Long-Term Loans</code></li> <li>Cash and Cash Equivalents (Asset): Decrease (Credit)</li> <li>Account: <code>11120 Bank Accounts</code></li> <li>Interest Expense (Expense): Increase (Debit)</li> <li>Account: <code>53010 Interest Expense</code></li> </ul>"},{"location":"accounting_entries/entries_others/#fixed-asset-purchase","title":"Fixed Asset Purchase","text":"<p>A fixed asset purchase is recorded when the company buys property, plant, or equipment.</p> <p>Accounts Affected:</p> <ul> <li>Property, Plant, and Equipment (Asset): Increase (Debit)</li> <li>Account: <code>12010 Property, Plant, and Equipment</code></li> <li>Cash and Cash Equivalents (Asset): Decrease (Credit)</li> <li>Account: <code>11110 Petty Cash</code> or <code>11120 Bank Accounts</code></li> <li>Accounts Payable (Liability): Increase (Credit, if bought on credit)</li> <li>Account: <code>21010 Trade Payables</code></li> </ul>"},{"location":"accounting_entries/entries_others/#depreciation","title":"Depreciation","text":"<p>Depreciation is recorded to allocate the cost of fixed assets over their useful lives.</p> <p>Accounts Affected:</p> <ul> <li>Accumulated Depreciation (Contra Asset): Increase (Credit)</li> <li>Account: <code>12010 Property, Plant, and Equipment</code> (or a specific account for accumulated depreciation)</li> <li>Depreciation Expense (Expense): Increase (Debit)</li> <li>Account: <code>51710 Depreciation Expense</code></li> </ul>"},{"location":"accounting_entries/entries_others/#amortization","title":"Amortization","text":"<p>Amortization is recorded to allocate the cost of intangible assets over their useful lives.</p> <p>Accounts Affected:</p> <ul> <li>Accumulated Amortization (Contra Asset): Increase (Credit)</li> <li>Account: <code>12020 Intangible Assets</code> (or a specific account for accumulated amortization)</li> <li>Amortization Expense (Expense): Increase (Debit)</li> <li>Account: <code>51720 Amortization Expense</code></li> </ul>"},{"location":"accounting_entries/entries_others/#prepaid-expense-adjustment","title":"Prepaid Expense Adjustment","text":"<p>Adjustments are made to recognize prepaid expenses over time.</p> <p>Accounts Affected:</p> <ul> <li>Prepaid Expenses (Asset): Decrease (Credit)</li> <li>Account: <code>11400 Prepaid Expenses</code></li> <li>Expense Account (Expense): Increase (Debit)</li> <li>Account: <code>51010 Selling Expenses</code>, <code>51110 Marketing Expenses</code>, or other relevant expense accounts</li> </ul>"},{"location":"accounting_entries/entries_others/#accrued-expense-adjustment","title":"Accrued Expense Adjustment","text":"<p>Adjustments are made to record expenses that have been incurred but not yet paid.</p> <p>Accounts Affected:</p> <ul> <li>Accrued Liabilities (Liability): Increase (Credit)</li> <li>Account: <code>24010 Accrued Liabilities</code></li> <li>Expense Account (Expense): Increase (Debit)</li> <li>Account: <code>51010 Selling Expenses</code>, <code>51110 Marketing Expenses</code>, <code>51210 Administrative Expenses</code>, or other relevant expense accounts</li> </ul>"},{"location":"accounting_entries/entries_others/#unearned-revenue-adjustment","title":"Unearned Revenue Adjustment","text":"<p>Adjustments are made to recognize revenue from unearned revenue over time.</p> <p>Accounts Affected:</p> <ul> <li>Unearned Revenue (Liability): Decrease (Debit)</li> <li>Account: <code>25010 Unearned Revenue</code></li> <li>Revenue Account (Revenue): Increase (Credit)</li> <li>Account: <code>40010 Domestic Sales</code>, <code>40110 Export Sales</code>, <code>41010 Service Revenue</code>, or other relevant revenue accounts</li> </ul>"},{"location":"accounting_entries/entries_others/#bad-debt-write-off","title":"Bad Debt Write-off","text":"<p>Bad debts are written off when it is determined that certain receivables will not be collected.</p> <p>Accounts Affected:</p> <ul> <li>Allowance for Doubtful Accounts (Contra Asset): Increase (Credit)</li> <li>Account: <code>11200 Accounts Receivable</code> (or a specific account for allowance)</li> <li>Bad Debt Expense (Expense): Increase (Debit)</li> <li>Account: <code>53110 Other Expenses</code> (or a specific account for bad debt)</li> </ul>"},{"location":"accounting_entries/entries_others/#intercompany-transactions","title":"Intercompany Transactions","text":"<p>Intercompany transactions are recorded for transfers between different entities within the same organization.</p> <p>Accounts Affected:</p> <ul> <li>Intercompany Receivable (Asset): Increase (Debit)</li> <li>Account: (specific intercompany receivable account)</li> <li>Intercompany Payable (Liability): Increase (Credit)</li> <li>Account: (specific intercompany payable account)</li> </ul>"},{"location":"accounting_entries/entries_samples/","title":"Accounting Transactions and Affected Accounts","text":""},{"location":"accounting_entries/entries_samples/#customer-credit-note","title":"Customer Credit Note","text":"<p>A customer credit note is issued when a customer is given a credit, reducing the amount they owe.</p> <p>Accounts Affected:</p> <ul> <li>Accounts Receivable (Asset)</li> <li>Account: <code>11200 Accounts Receivable</code></li> <li>Sales Revenue (Revenue)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>Tax Payable (Liability)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>Account: <code>23020 CGST Payable</code></li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"accounting_entries/entries_samples/#customer-debit-note","title":"Customer Debit Note","text":"<p>A customer debit note is issued when a customer is debited, increasing the amount they owe.</p> <p>Accounts Affected:</p> <ul> <li>Accounts Receivable (Asset)</li> <li>Account: <code>11200 Accounts Receivable</code></li> <li>Sales Revenue (Revenue)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>Tax Payable (Liability)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>Account: <code>23020 CGST Payable</code></li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"accounting_entries/entries_samples/#vendor-credit-note","title":"Vendor Credit Note","text":"<p>A vendor credit note is issued when a vendor is given a credit, reducing the amount you owe to the vendor.</p> <p>Accounts Affected:</p> <ul> <li>Accounts Payable (Liability)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Purchase Expense (Expense)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Tax Receivable (Asset)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>Account: <code>11420 CGST Receivable</code></li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/entries_samples/#vendor-debit-note","title":"Vendor Debit Note","text":"<p>A vendor debit note is issued when a vendor is debited, increasing the amount you owe to the vendor.</p> <p>Accounts Affected:</p> <ul> <li>Accounts Payable (Liability)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Purchase Expense (Expense)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Tax Receivable (Asset)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>Account: <code>11420 CGST Receivable</code></li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/entries_samples/#sales-returns","title":"Sales Returns","text":"<p>Sales returns occur when customers return previously sold goods.</p> <p>Accounts Affected:</p> <ul> <li>Sales Revenue (Revenue)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>Accounts Receivable (Asset)</li> <li>Account: <code>11200 Accounts Receivable</code></li> <li>Inventory (Asset)</li> <li>Account: <code>11300 Inventory</code></li> <li>Cost of Goods Sold (Expense)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Tax Payable (Liability)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>Account: <code>23020 CGST Payable</code></li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"accounting_entries/entries_samples/#purchase-returns","title":"Purchase Returns","text":"<p>Purchase returns occur when you return goods to a vendor that were previously purchased.</p> <p>Accounts Affected:</p> <ul> <li>Purchase Expense (Expense)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Accounts Payable (Liability)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Inventory (Asset)</li> <li>Account: <code>11300 Inventory</code></li> <li>Tax Receivable (Asset)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>Account: <code>11420 CGST Receivable</code></li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/manual_journal/","title":"Manual Journal Entries","text":"<p>Manual journal entries are recorded when adjustments need to be made to the accounts outside of the regular transactions.</p>"},{"location":"accounting_entries/manual_journal/#adjusting-prepaid-expenses","title":"Adjusting Prepaid Expenses","text":"<p>If an expense needs to be recognized from prepaid expenses.</p> <p>Accounts Affected: - Prepaid Expenses (Asset): Decrease (Credit)   - Account: <code>11400 Prepaid Expenses</code> - Expense Account (Expense): Increase (Debit)   - Account: <code>51010 Selling Expenses</code>, <code>51110 Marketing Expenses</code>, or other relevant expense accounts</p>"},{"location":"accounting_entries/manual_journal/#recognizing-depreciation","title":"Recognizing Depreciation","text":"<p>If depreciation needs to be recorded for fixed assets.</p> <p>Accounts Affected: - Accumulated Depreciation (Contra Asset): Increase (Credit)   - Account: <code>12010 Property, Plant, and Equipment</code> (or a specific account for accumulated depreciation) - Depreciation Expense (Expense): Increase (Debit)   - Account: <code>51710 Depreciation Expense</code></p>"},{"location":"accounting_entries/manual_journal/#adjusting-for-bad-debt","title":"Adjusting for Bad Debt","text":"<p>If an allowance for doubtful accounts needs to be made.</p> <p>Accounts Affected: - Bad Debt Expense (Expense): Increase (Debit)   - Account: <code>53110 Other Expenses</code> (or a specific account for bad debt) - Allowance for Doubtful Accounts (Contra Asset): Increase (Credit)   - Account: <code>11200 Accounts Receivable</code> (or a specific account for allowance)</p>"},{"location":"accounting_entries/manual_journal/#recording-accrued-liabilities","title":"Recording Accrued Liabilities","text":"<p>If liabilities need to be accrued at the end of a period.</p> <p>Accounts Affected: - Accrued Liabilities (Liability): Increase (Credit)   - Account: <code>24010 Accrued Liabilities</code> - Expense Account (Expense): Increase (Debit)   - Account: <code>51010 Selling Expenses</code>, <code>51110 Marketing Expenses</code>, <code>51210 Administrative Expenses</code>, or other relevant expense accounts</p>"},{"location":"accounting_entries/manual_journal/#recording-unearned-revenue","title":"Recording Unearned Revenue","text":"<p>If unearned revenue needs to be adjusted.</p> <p>Accounts Affected: - Unearned Revenue (Liability): Decrease (Debit)   - Account: <code>25010 Unearned Revenue</code> - Revenue Account (Revenue): Increase (Credit)   - Account: <code>40010 Domestic Sales</code>, <code>40110 Export Sales</code>, <code>41010 Service Revenue</code>, or other relevant revenue accounts</p>"},{"location":"accounting_entries/manual_journal/#adjusting-for-rounding-differences","title":"Adjusting for Rounding Differences","text":"<p>If rounding differences need to be recorded.</p> <p>Accounts Affected: - Rounding Gain (Revenue): Increase (Credit)   - Account: <code>43220 Rounding Gain</code> - Rounding Loss (Expense): Increase (Debit)   - Account: <code>55020 Rounding Loss</code></p>"},{"location":"accounting_entries/manual_journal/#intercompany-transfers","title":"Intercompany Transfers","text":"<p>If funds are transferred between different company accounts within the same organization.</p> <p>Accounts Affected: - Intercompany Receivable (Asset): Increase (Debit)   - Account: (specific intercompany receivable account) - Intercompany Payable (Liability): Increase (Credit)   - Account: (specific intercompany payable account)</p>"},{"location":"accounting_entries/payroll_transactions/","title":"Payroll Transactions","text":""},{"location":"accounting_entries/payroll_transactions/#integrating-into-the-payroll-system","title":"Integrating into the Payroll System","text":""},{"location":"accounting_entries/payroll_transactions/#payroll-processing-accrued-salaries","title":"Payroll Processing (Accrued Salaries)","text":"<p>Accounts Affected:</p> <ul> <li>Salaries and Wages (Expense): Increase (Debit)</li> <li>Account: <code>51710 Salaries and Wages</code></li> <li>Payroll Taxes (Expense): Increase (Debit)</li> <li>Account: <code>51810 Payroll Taxes</code></li> <li>Employee Benefits (Expense): Increase (Debit)</li> <li>Account: <code>51910 Employee Benefits</code></li> <li>Provident Fund Payable (Liability): Increase (Credit)</li> <li>Account: <code>23040 Provident Fund Payable</code></li> <li>Income Tax Payable (Liability): Increase (Credit)</li> <li>Account: <code>23050 Income Tax Payable</code></li> <li>Salaries Payable (Liability): Increase (Credit)</li> <li>Account: <code>21020 Salaries Payable</code></li> </ul> <p>Example Journal Entry:</p> Date Account Debit Credit Increase/Decrease 2024-07-31 Salaries and Wages (Expense) 10,000.00 Increase (Debit) 2024-07-31 Payroll Taxes (Expense) 1,000.00 Increase (Debit) 2024-07-31 Employee Benefits (Expense) 500.00 Increase (Debit) 2024-07-31 Provident Fund Payable (Liability) 800.00 Increase (Credit) 2024-07-31 Income Tax Payable (Liability) 700.00 Increase (Credit) 2024-07-31 Salaries Payable (Liability) 10,000.00 Increase (Credit)"},{"location":"accounting_entries/payroll_transactions/#salary-payment","title":"Salary Payment","text":"<p>Accounts Affected:</p> <ul> <li>Salaries Payable (Liability): Decrease (Debit)</li> <li>Account: <code>21020 Salaries Payable</code></li> <li>Cash and Cash Equivalents (Asset): Decrease (Credit)</li> <li>Account: <code>11120 Bank Accounts</code></li> </ul> <p>Example Journal Entry: | Date | Account | Debit | Credit | Increase/Decrease | |------------|--------------------------------|---------|---------|-------------------| | 2024-08-01 | Salaries Payable (Liability) | 10,000.00| | Decrease (Debit) | | 2024-08-01 | Bank Accounts (Asset) | | 10,000.00| Decrease (Credit) |</p> <p>By structuring your payroll system in this way, you ensure that you have a comprehensive and flexible setup that can handle various payroll-related scenarios and provide accurate accounting entries.</p>"},{"location":"accounting_entries/payroll_transactions/#accounting-entries-for-additional-components","title":"Accounting Entries for Additional Components","text":""},{"location":"accounting_entries/payroll_transactions/#advance-payment","title":"Advance Payment","text":"<p>Accounts Affected:</p> <ul> <li>Advance to Employees (Asset): Increase (Debit)</li> <li>Account: <code>12050 Advance to Employees</code></li> <li>Cash and Cash Equivalents (Asset): Decrease (Credit)</li> <li>Account: <code>11120 Bank Accounts</code></li> </ul> <p>Example Journal Entry: | Date | Account | Debit | Credit | Increase/Decrease | |------------|--------------------------------|---------|---------|-------------------| | 2024-07-20 | Advance to Employees (Asset) | 2,000.00| | Increase (Debit) | | 2024-07-20 | Bank Accounts (Asset) | | 2,000.00| Decrease (Credit) |</p>"},{"location":"accounting_entries/payroll_transactions/#loan-disbursement","title":"Loan Disbursement","text":"<p>Accounts Affected:</p> <ul> <li>Employee Loans (Asset): Increase (Debit)</li> <li>Account: <code>12060 Employee Loans</code></li> <li>Cash and Cash Equivalents (Asset): Decrease (Credit)</li> <li>Account: <code>11120 Bank Accounts</code></li> </ul> <p>Example Journal Entry: | Date | Account | Debit | Credit | Increase/Decrease | |------------|--------------------------------|---------|---------|-------------------| | 2024-07-20 | Employee Loans (Asset) | 10,000.00| | Increase (Debit) | | 2024-07-20 | Bank Accounts (Asset) | | 10,000.00| Decrease (Credit) |</p>"},{"location":"accounting_entries/payroll_transactions/#loan-repayment-deduction","title":"Loan Repayment Deduction","text":"<p>Accounts Affected:</p> <ul> <li>Employee Loans (Asset): Decrease (Credit)</li> <li>Account: <code>12060 Employee Loans</code></li> <li>Cash and Cash Equivalents (Asset): Increase (Debit)</li> <li>Account: <code>11120 Bank Accounts</code></li> </ul> <p>Example Journal Entry: | Date | Account | Debit | Credit | Increase/Decrease | |------------|--------------------------------|---------|---------|-------------------| | 2024-08-01 | Bank Accounts (Asset) | 1,000.00| | Increase (Debit) | | 2024-08-01 | Employee Loans (Asset) | | 1,000.00| Decrease (Credit) |</p>"},{"location":"accounting_entries/payroll_transactions/#salary-payment-with-advance-deduction","title":"Salary Payment with Advance Deduction","text":"<p>Accounts Affected:</p> <ul> <li>Salaries and Wages (Expense): Increase (Debit)</li> <li>Account: <code>51710 Salaries and Wages</code></li> <li>Advance to Employees (Asset): Decrease (Credit)</li> <li>Account: <code>12050 Advance to Employees</code></li> <li>Salaries Payable (Liability): Increase (Credit)</li> <li>Account: <code>21020 Salaries Payable</code></li> </ul> <p>Example Journal Entry for Payroll Processing: | Date | Account | Debit | Credit | Increase/Decrease | |------------|--------------------------------|---------|---------|-------------------| | 2024-07-31 | Salaries and Wages (Expense) | 10,000.00| | Increase (Debit) | | 2024-07-31 | Advance to Employees (Asset) | | 2,000.00| Decrease (Credit) | | 2024-07-31 | Salaries Payable (Liability) | | 8,000.00| Increase (Credit) |</p> <p>Example Journal Entry for Salary Payment: | Date | Account | Debit | Credit | Increase/Decrease | |------------|--------------------------------|---------|---------|-------------------| | 2024-08-01 | Salaries Payable (Liability) | 8,000.00| | Decrease (Debit) | | 2024-08-01 | Bank Accounts (Asset) | | 8,000.00| Decrease (Credit) |</p>"},{"location":"accounting_entries/purchase_transactions/","title":"Purchase","text":""},{"location":"accounting_entries/purchase_transactions/#purchase-transaction","title":"Purchase Transaction","text":"<p>A purchase transaction is recorded when goods or services are bought from a vendor.</p> <p>Accounts Affected:</p> <ul> <li>Purchase Expense (Expense): Increase (Debit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Accounts Payable (Liability): Increase (Credit)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Inventory (Asset): Increase (Debit)</li> <li>Account: <code>11300 Inventory</code></li> <li>Tax Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>Account: <code>11420 CGST Receivable</code></li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/purchase_transactions/#purchase-return","title":"Purchase Return","text":"<p>Purchase returns occur when you return goods to a vendor that were previously purchased.</p> <p>Accounts Affected:</p> <ul> <li>Purchase Expense (Expense): Decrease (Credit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Accounts Payable (Liability): Decrease (Debit)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Inventory (Asset): Decrease (Credit)</li> <li>Account: <code>11300 Inventory</code></li> <li>Tax Receivable (Asset): Decrease (Credit)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>Account: <code>11420 CGST Receivable</code></li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/purchase_transactions/#purchase-discount","title":"Purchase Discount","text":"<p>Purchase discounts are reductions in the amount owed to vendors, usually offered for early payment.</p> <p>Accounts Affected:</p> <ul> <li>Purchase Expense (Expense): Decrease (Credit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Accounts Payable (Liability): Decrease (Debit)</li> <li>Account: <code>21010 Trade Payables</code></li> </ul>"},{"location":"accounting_entries/purchase_transactions/#cash-purchase","title":"Cash Purchase","text":"<p>Cash purchases occur when goods or services are bought, and payment is made immediately in cash.</p> <p>Accounts Affected:</p> <ul> <li>Purchase Expense (Expense): Increase (Debit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Cash and Cash Equivalents (Asset): Decrease (Credit)</li> <li>Account: <code>11110 Petty Cash</code> or <code>11120 Bank Accounts</code></li> <li>Inventory (Asset): Increase (Debit)</li> <li>Account: <code>11300 Inventory</code></li> <li>Tax Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>Account: <code>11420 CGST Receivable</code></li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/purchase_transactions/#credit-purchase","title":"Credit Purchase","text":"<p>Credit purchases occur when goods or services are bought, and payment is made at a later date.</p> <p>Accounts Affected:</p> <ul> <li>Purchase Expense (Expense): Increase (Debit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Accounts Payable (Liability): Increase (Credit)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Inventory (Asset): Increase (Debit)</li> <li>Account: <code>11300 Inventory</code></li> <li>Tax Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11410 SGST Receivable</code></li> <li>Account: <code>11420 CGST Receivable</code></li> <li>Account: <code>11430 IGST Receivable</code></li> </ul>"},{"location":"accounting_entries/purchase_transactions/#process-for-recording-and-paying-bills","title":"Process for Recording and Paying Bills","text":""},{"location":"accounting_entries/purchase_transactions/#step-1-create-the-bill-in-the-purchase-module","title":"Step 1: Create the Bill in the Purchase Module","text":"<p>Accounts Affected:</p> <ul> <li>Electricity Expense (Expense): Increase (Debit)</li> <li>Account: <code>51510 Electricity Expense</code></li> <li>Trade Payables (Liability): Increase (Credit)</li> <li>Account: <code>21010 Trade Payables</code></li> </ul> <p>Example Journal Entry for Bill Creation:</p> Date Account Debit Credit Increase/Decrease 2024-04-01 Electricity Expense (Expense) 500.00 Increase (Debit) 2024-04-01 Trade Payables (Liability) 500.00 Increase (Credit)"},{"location":"accounting_entries/purchase_transactions/#step-2-make-the-payment","title":"Step 2: Make the Payment","text":"<p>Accounts Affected:</p> <ul> <li>Trade Payables (Liability): Decrease (Debit)</li> <li>Account: <code>21010 Trade Payables</code></li> <li>Cash and Cash Equivalents (Asset): Decrease (Credit)</li> <li>Account: <code>11120 Bank Accounts</code></li> </ul> <p>Example Journal Entry for Payment: | Date | Account | Debit | Credit | Increase/Decrease | |------------|-----------------------------|---------|---------|-------------------| | 2024-04-10 | Trade Payables (Liability) | 500.00 | | Decrease (Debit) | | 2024-04-10 | Bank Accounts (Asset) | | 500.00 | Decrease (Credit) |</p>"},{"location":"accounting_entries/purchase_transactions/#explanation-and-best-practices","title":"Explanation and Best Practices","text":"<ol> <li> <p>Categorization:</p> <ul> <li>Liabilities: This is the parent category for all liability accounts.</li> <li>Current Liabilities: Sub-category under Liabilities for short-term obligations.</li> <li>Trade Payables: Specific account under Current Liabilities for payables to vendors and other short-term obligations.</li> </ul> </li> <li> <p>Bill Creation:</p> <ul> <li>Record the bill in the purchase module to increase the respective expense account and the trade payables account.</li> </ul> </li> <li> <p>Payment Processing:</p> <ul> <li>When making a payment, decrease the trade payables account and the cash or bank account.</li> </ul> </li> </ol> <p>By following this structure, you ensure that your accounting records are accurate, consistent, and aligned with standard accounting practices. This approach also provides clear visibility into your financial obligations and helps maintain an audit trail for all transactions.</p>"},{"location":"accounting_entries/sales_transactions/","title":"Sales","text":""},{"location":"accounting_entries/sales_transactions/#sales-transaction","title":"Sales Transaction","text":"<p>A sales transaction is recorded when goods or services are sold to a customer.</p> <p>Accounts Affected:</p> <ul> <li>Sales Revenue (Revenue): Increase (Credit)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>Accounts Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11200 Accounts Receivable</code></li> <li>Inventory (Asset): Decrease (Credit)</li> <li>Account: <code>11300 Inventory</code></li> <li>Cost of Goods Sold (Expense): Increase (Debit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Tax Payable (Liability): Increase (Credit)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>Account: <code>23020 CGST Payable</code></li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"accounting_entries/sales_transactions/#sales-return","title":"Sales Return","text":"<p>Sales returns occur when customers return previously sold goods.</p> <p>Accounts Affected:</p> <ul> <li>Sales Revenue (Revenue): Decrease (Debit)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>Accounts Receivable (Asset): Decrease (Credit)</li> <li>Account: <code>11200 Accounts Receivable</code></li> <li>Inventory (Asset): Increase (Debit)</li> <li>Account: <code>11300 Inventory</code></li> <li>Cost of Goods Sold (Expense): Decrease (Credit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Tax Payable (Liability): Decrease (Debit)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>Account: <code>23020 CGST Payable</code></li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"accounting_entries/sales_transactions/#sales-discount","title":"Sales Discount","text":"<p>Sales discounts are reductions in the amount owed by customers, usually offered for early payment.</p> <p>Accounts Affected:</p> <ul> <li>Sales Revenue (Revenue): Decrease (Debit)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>Accounts Receivable (Asset): Decrease (Credit)</li> <li>Account: <code>11200 Accounts Receivable</code></li> </ul>"},{"location":"accounting_entries/sales_transactions/#cash-sales","title":"Cash Sales","text":"<p>Cash sales occur when goods or services are sold, and payment is received immediately in cash.</p> <p>Accounts Affected:</p> <ul> <li>Sales Revenue (Revenue): Increase (Credit)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>Cash and Cash Equivalents (Asset): Increase (Debit)</li> <li>Account: <code>11110 Petty Cash</code> or <code>11120 Bank Accounts</code></li> <li>Inventory (Asset): Decrease (Credit)</li> <li>Account: <code>11300 Inventory</code></li> <li>Cost of Goods Sold (Expense): Increase (Debit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Tax Payable (Liability): Increase (Credit)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>Account: <code>23020 CGST Payable</code></li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"accounting_entries/sales_transactions/#credit-sales","title":"Credit Sales","text":"<p>Credit sales occur when goods or services are sold, and payment is received at a later date.</p> <p>Accounts Affected:</p> <ul> <li>Sales Revenue (Revenue): Increase (Credit)</li> <li>Account: <code>40010 Domestic Sales</code> or <code>40110 Export Sales</code></li> <li>Accounts Receivable (Asset): Increase (Debit)</li> <li>Account: <code>11200 Accounts Receivable</code></li> <li>Inventory (Asset): Decrease (Credit)</li> <li>Account: <code>11300 Inventory</code></li> <li>Cost of Goods Sold (Expense): Increase (Debit)</li> <li>Account: <code>50010 Direct Materials</code>, <code>50110 Direct Labor</code>, or other relevant expense accounts</li> <li>Tax Payable (Liability): Increase (Credit)</li> <li>Account: <code>23010 SGST Payable</code></li> <li>Account: <code>23020 CGST Payable</code></li> <li>Account: <code>23030 IGST Payable</code></li> </ul>"},{"location":"coding_conventions/cc_principle_backend/","title":"Clean code principle - c","text":""},{"location":"coding_conventions/cc_principle_backend/#1-naming-matters","title":"1. Naming Matters","text":"<p>A good name allows code to be used by many developers. The name shoul reflect what it does and give context. Use Camel case notation for variables i.e., first letter of first word of variable will be lower case and followed other words will be upper case. Use Pascal case notation for Methods and Classes i.e., first letters of words should be Upper case</p>"},{"location":"coding_conventions/cc_principle_backend/#meanfull-name","title":"Meanfull name","text":"<p>Bad:</p> <pre><code>int p;\n</code></pre> <p>Good:</p> <pre><code>int prices;\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#naming-classes","title":"Naming Classes","text":"<p>Bad:</p> <pre><code>Common\nMyFunctions\nUtility\nWebsiteBL\n</code></pre> <p>Good:</p> <pre><code>User\nAccount\nProductRepository\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#naming-methods","title":"Naming Methods","text":"<p>Bad:</p> <pre><code>Started\nComplete\nDoIt\nPage_Load\n</code></pre> <p>Good:</p> <pre><code>SendEmail\nExportExcel\nIsValidAccount\nGetAcccount\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#naming-booleans","title":"Naming Booleans","text":"<p>Bad:</p> <pre><code>open\nactive\nlogin\n</code></pre> <p>Good:</p> <pre><code>isOpen\nisActive\nloggedIn\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#2-formatting","title":"2. Formatting","text":"<p>Code should be readability. For examples, indent style is space and tab in project Bad</p> <pre><code>using System;\nnamespace ConsoleApp2\n{ \n    internal class Program\n    {static void Main(string[] args)\n        {\n     Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n</code></pre> <p>Good Visual Studio has a built-in feature to format your code perfectly, by simply Press CTRL + K and CTRL + D</p> <pre><code>using System;\nnamespace ConsoleApp2\n{\n    internal class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n</code></pre> <p>or by selecting Analyze and code cleanup -&gt; run code cleanup Code style options and code cleanup - Visual Studio (Windows) Applies to: Visual Studio Visual Studio for Mac Visual Studio Code You can define code style settings per-project by\u2026 learn.microsoft.com or by EditorConfig</p> <pre><code>root = true[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true# C# files\n[*.cs]\nindent_size = 4\n# New line preferences\ncsharp_new_line_before_open_brace = all\ncsharp_new_line_before_else = true\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_within_query_expression_clauses = true# Code files\n[*.{cs,csx,vb,vbx}]\nindent_size = 4# Indentation preferences\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_switch_labels = true\ncsharp_indent_labels = one_less_than_current# avoid this. unless absolutely necessary\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_event = false:suggestion# only use var when it's obvious what the variable type is\n# csharp_style_var_for_built_in_types = false:none\n# csharp_style_var_when_type_is_apparent = false:none\n# csharp_style_var_elsewhere = false:suggestion# use language keywords instead of BCL types\ndotnet_style_predefined_type_for_locals_parameters_members = true:suggestion\ndotnet_style_predefined_type_for_member_access = true:suggestion# name all constant fields using PascalCase\ndotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion\ndotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields\ndotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_styledotnet_naming_symbols.constant_fields.applicable_kinds = field\ndotnet_naming_symbols.constant_fields.required_modifiers = constdotnet_naming_style.pascal_case_style.capitalization = pascal_case# static fields should have s_ prefix\ndotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion\ndotnet_naming_rule.static_fields_should_have_prefix.symbols = static_fields\ndotnet_naming_rule.static_fields_should_have_prefix.style = static_prefix_styledotnet_naming_symbols.static_fields.applicable_kinds = field\ndotnet_naming_symbols.static_fields.required_modifiers = staticdotnet_naming_style.static_prefix_style.required_prefix = s_\ndotnet_naming_style.static_prefix_style.capitalization = camel_case# internal and private fields should be _camelCase\ndotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion\ndotnet_naming_rule.camel_case_for_private_internal_fields.symbols = private_internal_fields\ndotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case_underscore_styledotnet_naming_symbols.private_internal_fields.applicable_kinds = field\ndotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internaldotnet_naming_style.camel_case_underscore_style.required_prefix = _\ndotnet_naming_style.camel_case_underscore_style.capitalization = camel_case# Code style defaults\ndotnet_sort_system_directives_first = true\ncsharp_preserve_single_line_blocks = true\ncsharp_preserve_single_line_statements = false# Expression-level preferences\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_null_propagation = true:suggestion# Expression-bodied members\ncsharp_style_expression_bodied_methods = false:none\ncsharp_style_expression_bodied_constructors = false:none\ncsharp_style_expression_bodied_operators = false:none\ncsharp_style_expression_bodied_properties = true:none\ncsharp_style_expression_bodied_indexers = true:none\ncsharp_style_expression_bodied_accessors = true:none# Pattern matching\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion# Null checking preferences\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_conditional_delegate_call = true:suggestion# Space preferences\ncsharp_space_after_cast = false\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = do_not_ignore\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses = false\ncsharp_space_between_square_brackets = false[*.{asm,inc}]\nindent_size = 8# Xml project files\n[*.{csproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]\nindent_size = 2# Xml config files\n[*.{props,targets,config,nuspec}]\nindent_size = 2[CMakeLists.txt]\nindent_size = 2[*.cmd]\nindent_size = 2\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#3-commenting","title":"3. Commenting","text":"<p>Make proper comment where it is required. Don\u2019t make zommie comment in code</p> <pre><code>using System;\nnamespace ConsoleApp2\n{\n    internal class Program\n    {\n        /// &lt;summary&gt;\n        /// This is Main method to write console \n        /// &lt;/summary&gt;\n        /// &lt;param name=\"args\"&gt;&lt;/param&gt;\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello World!\");\n        }\n    }\n}\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#4-reuse-code","title":"4. Reuse Code","text":"<p>Don\u2019t copy-paste function through multiple classes. Rather make a shared library project and reference it in each of required projects. This way, we build reusable code.</p>"},{"location":"coding_conventions/cc_principle_backend/#5-keep-class-size-small","title":"5. Keep Class Size Small","text":"<p>According to single responsibitlity (one of SOLID priciple), make segregate classes to small blocks which has a single responsiblility functions only. This helps us to achieve loosely coupled code.</p>"},{"location":"coding_conventions/cc_principle_backend/#6-avoid-magic-stringsnumbers","title":"6. Avoid Magic Strings/Numbers","text":"<p>Magic string/number meaning do not use hardcoded strings or values in our application. This will difficult to track strings. Bad:</p> <pre><code>if(userRole == \"Admin\")\n{\n   //logic here\n}\n</code></pre> <p>Good:</p> <pre><code>const string ADMIN_ROLE = \"Admin\"\nif(userRole == ADMIN_ROLE )\n{\n   //logic here\n}\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#7-use-asyncawait","title":"7. Use Async/Await","text":"<p>Asynchronous Programming helps improve the overall efficiency while dealing with functions that can take some time to finish computing. During such function executions, the complete application may seem to be frozen to the end-user. This results in bad user experience. In such cases, we use async methods to free the main thread Read more here.</p>"},{"location":"coding_conventions/cc_principle_backend/#8-dont-use-throw-ex-in-the-catch-block","title":"8. Don\u2019t use \u2018throw ex\u2019 in the catch block","text":"<p>Don\u2019t use \u2018throw ex\u2019 exception in catching block, this will lose stack trace data. Instead use \u2018throw\u2019, this will store the stack trace as well, which is kind of helps for diagnostics purposes. And also don\u2019t ignore caught errors</p> <pre><code>public void SomeMethod()\n{\n   try\n   {\n       DoSomething();\n   }\n   catch\n   {\n\n   }\n}\n</code></pre> <p>Incase of WebAPI, use exception handle middleware</p>"},{"location":"coding_conventions/cc_principle_backend/#9-avoid-long-if-condition","title":"9. Avoid long if condition","text":"<p>Long IF/ELSE or long SWITCH (long conditional statement) with polymorphism. This is also called RIP design pattern. RIP means Replace If with Polymorphism design pattern Read more here.</p> <p>Use Ternary Operator if it is for only one else condition</p> <pre><code>public string GetValue(int value)\n{\n   return value == 10 ? \"Value is 10\" : \"Value is not 10\";\n}\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#10-use-null-coalescing-operator","title":"10. Use Null Coalescing Operator","text":"<p>For null checks you can use null checks. ?? operator is known as Null Coalescing Operator in C#. Read more here.</p> <pre><code>public Student SomeMethod(Student student)\n{\n   return student ?? new Student() { Name = \"Mukesh Murugan\" };\n}\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#11prefer-string-interpolation","title":"11.Prefer String Interpolation","text":"<p>Bad:</p> <pre><code>public string SomeMethod(Student student)\n{\n   return \"Student Name is \" + student.Name + \". Age is \" + student.Age;\n}\n</code></pre> <p>Good:</p> <pre><code>public string SomeMethod(Student student)\n{\n   return $\"Student Name is {student.Name}. Age is {student.Age}\";\n}\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#12-avoid-too-many-parameters","title":"12. Avoid too many parameters","text":"<p>If you want to send more then 3 parameter inputs to any mthoed, then wrap it object then pass Bad:</p> <pre><code>public Student SomeMethod(string name, string city, int age, string section, DateTime dateOfBirth)\n{\n   return new Student()\n   {\n       Age = age,\n       Name = name,\n       //Other parameters too\n   };\n}\n</code></pre> <p>Good:</p> <pre><code>public Student SomeMethod(Student student)\n{\n   return student;\n}\n</code></pre>"},{"location":"coding_conventions/cc_principle_backend/#13-use-design-patterns","title":"13. Use Design Patterns","text":"<p>Design Pattern is a way to solve a localised problem. Design pattern are basically patterns that can provide a resuable solution while architecting solutions.</p>"},{"location":"coding_conventions/cc_principle_backend/#14-project-structure","title":"14. Project structure","text":"<p>In order to favor scalability and loosely couple the solutions, we split them up to various layers like Application, Domain, Infrastructure, and so on. One the best example to use is DDD approach (with Clean Architecture) Here are a few other advantages as well. 1. Reusability \u2014 If you want to use the same Project for another solution, you could do so. 2. Improved Security 3. Higly Maintainable 4. Scalable 5. Inversion of controls, etc</p>"},{"location":"coding_conventions/cc_principle_backend/#15-use-expression-bodied-methods","title":"15. Use Expression Bodied Methods","text":"<p>Such methods are used in scenarios where the method body is much smaller than even the method definition itself</p> <pre><code>public string Message() =&gt; \"Hello World!\";\n</code></pre> <p>Read more about Expression Bodied Methods here.</p>"},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/","title":"Clean code principle - c","text":""},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/#1-use-default-import-to-import-react","title":"1. Use Default import to import React","text":"<p>Don't </p> <pre><code>import * as React from \"react\";\n</code></pre> <p>Do </p> <pre><code>import React, {useContext, useState} from \"react\";\n</code></pre> <p>Note: Use this option by adding in configure the tsconfig.json file as seen below:</p> <pre><code>{\n    \"compilerOptions\":\n    {\n        \"esModuleInterop\": true\n    }\n}\n</code></pre>"},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/#2-dont-use-constructor-for-class-components","title":"2. Don\u2019t use constructor for class components","text":"<pre><code>// Don't do\ntype State = {count: number}\ntype Props = {}\n\n\nclass Counter extends Component&lt;Props, State&gt; {\n    constructor(props:Props){\n    super(props);\n    this.state = {count: 0}\n    }\n}\n\n\n// Do\ntype State = {count: number}\ntype Props = {}\n\n\nclass Counter extends Component&lt;Props, State&gt; {\n    state = {count: 0}\n}\n</code></pre>"},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/#3-dont-use-public-accessor-within-classes","title":"3. Don\u2019t use public accessor within classes","text":"<p>Don't</p> <pre><code>import { Component } from \"react\"\n\nclass Friends extends Component {\n    public fetchFriends () {}\n    public render () {\n        return // jsx blob\n    }\n}\n</code></pre> <p>Do</p> <pre><code>import { Component } from \"react\"\n\nclass Friends extends Component {\n    fetchFriends () {}\n    render () {\n    return // jsx blob\n    }\n}\n</code></pre>"},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/#4-dont-use-private-accessor-within-component-class","title":"4. Don\u2019t use private accessor within Component class","text":"<p>Don't</p> <pre><code>import {Component} from \"react\"\n\nclass Friends extends Component {\n  private fetchProfileByID () {}\n\n  render () {\n    return // jsx blob\n  }\n}\n</code></pre> <p>Do</p> <pre><code>import {Component} from \"react\"class Friends extends Component {\n  _fetchProfileByID () {}\n\n  render () {\n    return // jsx blob\n  }\n}\n</code></pre> <ol> <li>Don\u2019t use enum</li> </ol> <pre><code>// Don't do this\nenum Response {\n  Successful,\n  Failed,\n  Pending\n}\n\nfunction fetchData (status: Response): void =&gt; {\n    // some code.\n}\n\n// Do this\ntype Response = Sucessful | Failed | Pending\n\nfunction fetchData (status: Response): void =&gt; {\n    // some code.\n}\n</code></pre>"},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/#6-dont-use-method-declaration-within-interfacetype-alias","title":"6. Don\u2019t use method declaration within interface/type alias","text":"<pre><code>// Don't do\ninterface Counter {\n  start(count:number) : string\n  reset(): void\n}\n\n// Do\ninterface Counter {\n  start: (count:number) =&gt; string\n  reset: () =&gt; string\n}\n</code></pre>"},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/#7-move-unrelated-code-into-a-separate-component","title":"7. Move unrelated code into a separate component","text":""},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/#8-create-separate-files-for-each-component","title":"8. Create separate files for each component","text":""},{"location":"coding_conventions/clean%20code%20principle%20-%20front%20end/#9-format-your-code","title":"9. Format your code","text":""},{"location":"devops/dump_restore_clean/","title":"\ud83d\udee0\ufe0f PostgreSQL QA Database Backup &amp; Restore Documentation","text":""},{"location":"devops/dump_restore_clean/#objective","title":"\ud83c\udfaf Objective","text":"<p>To:</p> <ol> <li>Take fresh <code>.sql</code> backups of all QA databases from Azure PostgreSQL</li> <li>Clean corresponding QA databases in OVH PostgreSQL</li> <li>Restore the Azure QA backups into OVH QA databases</li> </ol>"},{"location":"devops/dump_restore_clean/#step-1-backup-from-azure-qa-to-local-sql-files","title":"\u2601\ufe0f Step 1: Backup from Azure QA to Local <code>.sql</code> Files","text":"<p>Use the following commands in PowerShell to export all QA databases from Azure:</p> <pre><code>$env:PGPASSWORD = \"Your_Password\"\n\n# COMMON\n.\\pg_dump.exe -h az-dhanman-qa.postgres.database.azure.com -U dhanmanqa -d qa-dhanman-common -f \"C:\\Users\\SAI\\Desktop\\your_path\\qa-common-backup.sql\"\n\n# COMMUNITY\n.\\pg_dump.exe -h az-dhanman-qa.postgres.database.azure.com -U dhanmanqa -d qa-dhanman-community -f \"C:\\Users\\SAI\\Desktop\\your_path\\qa-community-backup.sql\"\n\n# SALES\n.\\pg_dump.exe -h az-dhanman-qa.postgres.database.azure.com -U dhanmanqa -d qa-dhanman-sales -f \"C:\\Users\\SAI\\Desktop\\your_path\\qa-sales-backup.sql\"\n\n# PURCHASE\n.\\pg_dump.exe -h az-dhanman-qa.postgres.database.azure.com -U dhanmanqa -d qa-dhanman-purchase -f \"C:\\Users\\SAI\\Desktop\\your_path\\qa-purchase-backup.sql\"\n\n# INVENTORY\n.\\pg_dump.exe -h az-dhanman-qa.postgres.database.azure.com -U dhanmanqa -d qa-dhanman-inventory -f \"C:\\Users\\SAI\\Desktop\\your_path\\qa-inventory-backup.sql\"\n\n# PAYROLL\n.\\pg_dump.exe -h az-dhanman-qa.postgres.database.azure.com -U dhanmanqa -d qa-dhanman-payroll -f \"C:\\Users\\SAI\\Desktop\\your_path\\qa-payroll-backup.sql\"\n\nRemove-Item Env:PGPASSWORD\n</code></pre>"},{"location":"devops/dump_restore_clean/#step-2-clean-target-ovh-qa-databases","title":"\ud83e\uddfc Step 2: Clean Target OVH QA Databases","text":"<p>Use the following SQL cleanup block to remove all objects from the <code>public</code> schema before restoring:</p> <p>Save as <code>cleanup.sql</code> and run for each OVH QA DB before restore.</p> <pre><code>DO\n$$\nDECLARE\n    obj RECORD;\nBEGIN\n    -- Drop views\n    FOR obj IN (SELECT table_name FROM information_schema.views WHERE table_schema = 'public') LOOP\n        EXECUTE format('DROP VIEW IF EXISTS public.%I CASCADE', obj.table_name);\n    END LOOP;\n\n    -- Drop materialized views\n    FOR obj IN (SELECT matviewname FROM pg_matviews WHERE schemaname = 'public') LOOP\n        EXECUTE format('DROP MATERIALIZED VIEW IF EXISTS public.%I CASCADE', obj.matviewname);\n    END LOOP;\n\n    -- Drop tables\n    FOR obj IN (SELECT tablename FROM pg_tables WHERE schemaname = 'public') LOOP\n        EXECUTE format('DROP TABLE IF EXISTS public.%I CASCADE', obj.tablename);\n    END LOOP;\n\n    -- Drop sequences\n    FOR obj IN (SELECT sequence_name FROM information_schema.sequences WHERE sequence_schema = 'public') LOOP\n        EXECUTE format('DROP SEQUENCE IF EXISTS public.%I CASCADE', obj.sequence_name);\n    END LOOP;\n\n    -- Drop all functions (including overloaded)\n    FOR obj IN (\n        SELECT p.oid::regprocedure AS full_name\n        FROM pg_proc p\n        JOIN pg_namespace n ON n.oid = p.pronamespace\n        WHERE n.nspname = 'public' AND p.prokind = 'f'\n    ) LOOP\n        EXECUTE 'DROP FUNCTION IF EXISTS ' || obj.full_name || ' CASCADE';\n    END LOOP;\n\n    -- Drop all procedures (PostgreSQL 11+)\n    FOR obj IN (\n        SELECT p.oid::regprocedure AS full_name\n        FROM pg_proc p\n        JOIN pg_namespace n ON n.oid = p.pronamespace\n        WHERE n.nspname = 'public' AND p.prokind = 'p'\n    ) LOOP\n        EXECUTE 'DROP PROCEDURE IF EXISTS ' || obj.full_name || ' CASCADE';\n    END LOOP;\n\n    -- Drop enum types\n    FOR obj IN (\n        SELECT t.typname\n        FROM pg_type t\n        JOIN pg_namespace n ON n.oid = t.typnamespace\n        WHERE n.nspname = 'public' AND t.typtype = 'e'\n    ) LOOP\n        EXECUTE format('DROP TYPE IF EXISTS public.%I CASCADE', obj.typname);\n    END LOOP;\nEND\n$$;\n</code></pre> <p>Run using:</p> <pre><code>$env:PGPASSWORD = \"Your_Password\"\n&amp; .\\psql.exe -h 51.79.156.217 -U postgres -d qa-dhanman-common -f \"C:\\path\\to\\cleanup.sql\"\nRemove-Item Env:PGPASSWORD\n</code></pre> <p>Repeat for each DB (<code>qa-dhanman-community</code>, etc.)</p>"},{"location":"devops/dump_restore_clean/#step-3-restore-into-ovh-qa-from-local-sql-files","title":"\ud83d\udd04 Step 3: Restore into OVH QA from Local <code>.sql</code> Files","text":"<pre><code>$env:PGPASSWORD = \"Your_Password\"\n\n# COMMON\n.\\psql.exe -h 51.79.156.217 -U postgres -d qa-dhanman-common -f \"C:\\Users\\SAI\\Desktop\\b2aBKqa\\qa-common-backup.sql\"\n\n# COMMUNITY\n.\\psql.exe -h 51.79.156.217 -U postgres -d qa-dhanman-community -f \"C:\\Users\\SAI\\Desktop\\b2aBKqa\\qa-community-backup.sql\"\n\n# SALES\n.\\psql.exe -h 51.79.156.217 -U postgres -d qa-dhanman-sales -f \"C:\\Users\\SAI\\Desktop\\b2aBKqa\\qa-sales-backup.sql\"\n\n# PURCHASE\n.\\psql.exe -h 51.79.156.217 -U postgres -d qa-dhanman-purchase -f \"C:\\Users\\SAI\\Desktop\\b2aBKqa\\qa-purchase-backup.sql\"\n\n# INVENTORY\n.\\psql.exe -h 51.79.156.217 -U postgres -d qa-dhanman-inventory -f \"C:\\Users\\SAI\\Desktop\\b2aBKqa\\qa-inventory-backup.sql\"\n\n# PAYROLL\n.\\psql.exe -h 51.79.156.217 -U postgres -d qa-dhanman-payroll -f \"C:\\Users\\SAI\\Desktop\\b2aBKqa\\qa-payroll-backup.sql\"\n\nRemove-Item Env:PGPASSWORD\n</code></pre>"},{"location":"devops/dump_restore_clean/#summary","title":"\u2705 Summary","text":"Step Description Step 1 Export <code>.sql</code> backups from Azure QA Step 2 Clean all objects in OVH QA DBs (<code>public</code> schema) Step 3 Restore <code>.sql</code> backups into OVH QA DBs"},{"location":"devops/qa_deployment_guide/","title":"\u2705 QA Deployment Setup for Dhanman Microservices (QA Environment)","text":"<p>This guide walks through the complete setup to deploy and serve multiple .NET microservices in the QA environment using systemd, NGINX, and HTTPS via Let's Encrypt.</p>"},{"location":"devops/qa_deployment_guide/#1-build-and-publish-the-net-app","title":"\ud83d\udce6 1. Build and Publish the .NET App","text":"<p>Use the following command to publish your app for Linux:</p> <pre><code>dotnet publish -c Release -r linux-x64 --self-contained false -o ./publish\n</code></pre> <ul> <li><code>-r linux-x64</code>: Targets Linux 64-bit</li> <li><code>--self-contained false</code>: Uses framework-dependent deployment</li> <li><code>-o ./publish</code>: Output folder</li> </ul>"},{"location":"devops/qa_deployment_guide/#2-create-folder-and-deploy-to-server","title":"\ud83d\udcc1 2. Create Folder and Deploy to Server","text":""},{"location":"devops/qa_deployment_guide/#create-folder-on-the-droplet","title":"Create folder on the droplet:","text":"<pre><code>sudo mkdir -p /var/www/qa/&lt;service-folder&gt;\n</code></pre>"},{"location":"devops/qa_deployment_guide/#upload-files-from-local","title":"Upload files from local:","text":"<pre><code>scp -r ./publish/* root@&lt;droplet-ip&gt;:/var/www/qa/&lt;service-folder&gt;\n</code></pre> <p>Replace <code>&lt;service-folder&gt;</code> with the service name, e.g., <code>dhanman-common</code>.</p>"},{"location":"devops/qa_deployment_guide/#3-create-systemd-service","title":"\u2699\ufe0f 3. Create systemd Service","text":""},{"location":"devops/qa_deployment_guide/#create-service-file","title":"Create service file:","text":"<pre><code>sudo nano /etc/systemd/system/&lt;service-name&gt;-qa.service\n</code></pre>"},{"location":"devops/qa_deployment_guide/#paste-this-content","title":"Paste this content:","text":"<pre><code>[Unit]\nDescription=&lt;Service Name&gt; - QA\nAfter=network.target\n\n[Service]\nWorkingDirectory=/var/www/qa/&lt;service-folder&gt;\nExecStart=/usr/bin/dotnet /var/www/qa/&lt;service-folder&gt;/&lt;ServiceDll&gt;.dll --urls \"http://localhost:&lt;port&gt;\"\nRestart=always\nRestartSec=10\nKillSignal=SIGINT\nSyslogIdentifier=&lt;service-name&gt;-qa\nUser=root\nEnvironment=ASPNETCORE_ENVIRONMENT=QA\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"devops/qa_deployment_guide/#reload-and-start-the-service","title":"Reload and start the service:","text":"<pre><code>sudo systemctl daemon-reload\nsudo systemctl enable &lt;service-name&gt;-qa\nsudo systemctl start &lt;service-name&gt;-qa\nsudo systemctl status &lt;service-name&gt;-qa\n</code></pre>"},{"location":"devops/qa_deployment_guide/#4-configure-nginx-reverse-proxy","title":"\ud83c\udf10 4. Configure NGINX Reverse Proxy","text":""},{"location":"devops/qa_deployment_guide/#create-nginx-config","title":"Create NGINX config:","text":"<pre><code>sudo nano /etc/nginx/sites-available/&lt;service-name&gt;\n</code></pre>"},{"location":"devops/qa_deployment_guide/#paste","title":"Paste:","text":"<pre><code>server {\n    listen 80;\n    server_name &lt;subdomain&gt;.dhanman.com;\n\n    location / {\n        proxy_pass http://localhost:&lt;port&gt;;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection keep-alive;\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\n</code></pre>"},{"location":"devops/qa_deployment_guide/#enable-and-reload","title":"Enable and reload:","text":"<pre><code>sudo ln -s /etc/nginx/sites-available/&lt;service-name&gt; /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx\n</code></pre>"},{"location":"devops/qa_deployment_guide/#5-setup-https-with-certbot","title":"\ud83d\udd10 5. Setup HTTPS with Certbot","text":"<p>Ensure the DNS record for <code>&lt;subdomain&gt;.dhanman.com</code> points to your droplet.</p>"},{"location":"devops/qa_deployment_guide/#run-certbot","title":"Run Certbot:","text":"<pre><code>sudo certbot --nginx -d &lt;subdomain&gt;.dhanman.com\n</code></pre> <p>Choose:</p> <pre><code>2: Redirect - Make all requests redirect to secure HTTPS\n</code></pre> <p>Certbot will: - Add the HTTPS block - Enable HTTP/2 - Set up auto-renewal</p>"},{"location":"devops/qa_deployment_guide/#6-verify-deployment","title":"\ud83e\uddea 6. Verify Deployment","text":"<ul> <li>\u2705 Visit: <code>https://&lt;subdomain&gt;.dhanman.com</code></li> <li>\ud83d\udd12 Confirm HTTPS lock</li> <li>\ud83c\udf00 Test auto-renew:</li> </ul> <pre><code>sudo certbot renew --dry-run\n</code></pre>"},{"location":"devops/qa_deployment_guide/#7-repeat-for-each-service","title":"\ud83d\udd01 7. Repeat for Each Service","text":"Service Name Port Folder Subdomain systemd Service File dhanman-common 5101 /var/www/qa/dhanman-common qa.common.dhanman.com dhanman-common-qa.service dhanman-sales 5100 /var/www/qa/dhanman-sales qa.sales.dhanman.com dhanman-sales-qa.service dhanman-payroll 5102 /var/www/qa/dhanman-payroll qa.payroll.dhanman.com dhanman-payroll-qa.service ... ... ... ... ... <p>Repeat all above steps for each service with its own: - Folder - Port - Subdomain - systemd and NGINX config</p>"},{"location":"devops/qa_deployment_guide/#8-port-mapping-by-environment","title":"\ud83d\udd22 8. Port Mapping by Environment","text":"<p>Here\u2019s a reference table to manage ports across Dev, QA, and Prod environments:</p> Service Name Dev Port QA Port Prod Port dhanman-common 5001 5101 5201 dhanman-sales 5000 5100 5200 dhanman-payroll 5002 5102 5202 dhanman-purchase 5003 5103 5203 dhanman-inventory 5004 5104 5204 dhanman-myhome 5005 5105 5205 <p>Make sure to update <code>--urls</code> in systemd and <code>proxy_pass</code> in NGINX accordingly for each environment.</p>"},{"location":"devops/qa_prod_deployment_guide/","title":"Dhanman Deployment Setup Guide (QA and PROD)","text":"<p>This document outlines the complete step-by-step deployment process used to deploy Dhanman microservices to DigitalOcean, using GitHub Actions, environment-specific secrets, NGINX, and SSL via Certbot.</p>"},{"location":"devops/qa_prod_deployment_guide/#1-github-environment-setup","title":"1. GitHub Environment Setup","text":""},{"location":"devops/qa_prod_deployment_guide/#11-create-environments","title":"1.1 Create Environments","text":"<ul> <li>Go to your GitHub repository.</li> <li>Click on Settings &gt; Environments.</li> <li>Create two environments:</li> <li><code>qa</code></li> <li><code>prod</code></li> </ul>"},{"location":"devops/qa_prod_deployment_guide/#12-define-environment-secrets-per-environment","title":"1.2 Define Environment Secrets (per environment)","text":"<p>Go to Settings &gt; Environments &gt; qa/prod &gt; Add Secret:</p> <ul> <li><code>COMMUNITY_DB_CONNECTION</code> \u2013 Full PostgreSQL connection string</li> <li><code>PERMISSIONS_DB_CONNECTION</code> \u2013 Full PostgreSQL connection string</li> <li><code>DO_HOST</code> \u2013 Droplet IP or DNS</li> <li><code>DO_USER</code> \u2013 Droplet SSH user (<code>root</code> or other)</li> <li><code>DO_SSH_KEY</code> \u2013 Private SSH key content</li> </ul>"},{"location":"devops/qa_prod_deployment_guide/#2-github-actions-workflow","title":"2. GitHub Actions Workflow","text":""},{"location":"devops/qa_prod_deployment_guide/#21-qa-auto-deployment-triggered-on-merge-to-main","title":"2.1 QA Auto Deployment (triggered on merge to main)","text":"<p>Create the file <code>.github/workflows/deploy-qa.yml</code> with:</p> <pre><code>name: Deploy to QA\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    environment: qa\n\n    env:\n      ConnectionStrings__CommunityDb: ${{ secrets.COMMUNITY_DB_CONNECTION }}\n      ConnectionStrings__PermissionsDb: ${{ secrets.PERMISSIONS_DB_CONNECTION }}\n      DOTNET_ENVIRONMENT: qa\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n\n      - name: Set up .NET\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: '8.0.x'\n\n      - name: Publish App\n        run: |\n          dotnet publish src/Dhanman.MyHome.Api/Dhanman.MyHome.Api.csproj -c Release -r linux-x64 --self-contained false -o publish\n\n      - name: Upload to QA Droplet\n        uses: appleboy/scp-action@v0.1.4\n        with:\n          host: ${{ secrets.DO_HOST }}\n          username: ${{ secrets.DO_USER }}\n          key: ${{ secrets.DO_SSH_KEY }}\n          source: \"publish/*\"\n          target: \"/var/www/qa/dhanman-community\"\n\n      - name: Restart QA App\n        uses: appleboy/ssh-action@v0.1.10\n        with:\n          host: ${{ secrets.DO_HOST }}\n          username: ${{ secrets.DO_USER }}\n          key: ${{ secrets.DO_SSH_KEY }}\n          script: |\n            export ConnectionStrings__CommunityDb=\"${{ secrets.COMMUNITY_DB_CONNECTION }}\"\n            export ConnectionStrings__PermissionsDb=\"${{ secrets.PERMISSIONS_DB_CONNECTION }}\"\n            export DOTNET_ENVIRONMENT=qa\n            sudo systemctl restart dhanman-community-qa\n            sudo systemctl status dhanman-community-qa --no-pager\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#22-prod-manual-deployment","title":"2.2 PROD Manual Deployment","text":"<p>Create the file <code>.github/workflows/deploy-prod.yml</code> with:</p> <pre><code>name: Deploy to PROD\n\non:\n  workflow_dispatch:\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    environment: prod\n\n    env:\n      ConnectionStrings__CommunityDb: ${{ secrets.COMMUNITY_DB_CONNECTION }}\n      ConnectionStrings__PermissionsDb: ${{ secrets.PERMISSIONS_DB_CONNECTION }}\n      DOTNET_ENVIRONMENT: production\n\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n\n      - name: Set up .NET\n        uses: actions/setup-dotnet@v3\n        with:\n          dotnet-version: '8.0.x'\n\n      - name: Publish App\n        run: |\n          dotnet publish src/Dhanman.MyHome.Api/Dhanman.MyHome.Api.csproj -c Release -r linux-x64 --self-contained false -o publish\n\n      - name: Upload to PROD Droplet\n        uses: appleboy/scp-action@v0.1.4\n        with:\n          host: ${{ secrets.DO_HOST }}\n          username: ${{ secrets.DO_USER }}\n          key: ${{ secrets.DO_SSH_KEY }}\n          source: \"publish/*\"\n          target: \"/var/www/prod/dhanman-community\"\n\n      - name: Restart PROD App\n        uses: appleboy/ssh-action@v0.1.10\n        with:\n          host: ${{ secrets.DO_HOST }}\n          username: ${{ secrets.DO_USER }}\n          key: ${{ secrets.DO_SSH_KEY }}\n          script: |\n            export ConnectionStrings__CommunityDb=\"${{ secrets.COMMUNITY_DB_CONNECTION }}\"\n            export ConnectionStrings__PermissionsDb=\"${{ secrets.PERMISSIONS_DB_CONNECTION }}\"\n            export DOTNET_ENVIRONMENT=production\n            sudo systemctl restart dhanman-community-prod\n            sudo systemctl status dhanman-community-prod --no-pager\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#3-digitalocean-setup","title":"3. DigitalOcean Setup","text":""},{"location":"devops/qa_prod_deployment_guide/#31-ssh-key-generation","title":"3.1 SSH Key Generation","text":"<pre><code>ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\ncat ~/.ssh/id_rsa.pub\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#32-create-folder-structure-and-env-files","title":"\ud83d\udcc1 3.2 Create Folder Structure and .env Files","text":"<p>\u2705 Run these on your DigitalOcean droplet via SSH</p>"},{"location":"devops/qa_prod_deployment_guide/#step-1-create-qa-prod-directories","title":"Step 1: Create QA &amp; PROD Directories","text":"<pre><code>sudo mkdir -p /var/www/qa/dhanman-community\nsudo mkdir -p /var/www/prod/dhanman-community\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#step-2-add-env-files","title":"Step 2: Add <code>.env</code> Files","text":""},{"location":"devops/qa_prod_deployment_guide/#qa-linux","title":"QA (Linux):","text":"<pre><code>echo \"DOTNET_ENVIRONMENT=qa\" | sudo tee /var/www/qa/dhanman-community/.env\nsudo tee -a /var/www/qa/dhanman-community/.env &gt; /dev/null &lt;&lt;EOL\nASPNETCORE_URLS=http://127.0.0.1:5205\nConnectionStrings__CommunityDb=&lt;QA_COMMUNITY_DB_CONNECTION&gt;\nConnectionStrings__PermissionsDb=&lt;QA_PERMISSIONS_DB_CONNECTION&gt;\nEOL\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#qa-windows-powershell-equivalent","title":"QA (Windows PowerShell Equivalent):","text":"<pre><code>$envPath = \"/var/www/qa/dhanman-community/.env\"\n$qaEnv = @\"\nDOTNET_ENVIRONMENT=qa\nASPNETCORE_URLS=http://127.0.0.1:5205\nConnectionStrings__CommunityDb=&lt;QA_COMMUNITY_DB_CONNECTION&gt;\nConnectionStrings__PermissionsDb=&lt;QA_PERMISSIONS_DB_CONNECTION&gt;\n\"@\nssh root@&lt;droplet_ip&gt; \"echo '$qaEnv' &gt; $envPath\"\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#prod-linux","title":"PROD (Linux):","text":"<pre><code>echo \"DOTNET_ENVIRONMENT=production\" | sudo tee /var/www/prod/dhanman-community/.env\nsudo tee -a /var/www/prod/dhanman-community/.env &gt; /dev/null &lt;&lt;EOL\nASPNETCORE_URLS=http://127.0.0.1:5205\nConnectionStrings__CommunityDb=&lt;PROD_COMMUNITY_DB_CONNECTION&gt;\nConnectionStrings__PermissionsDb=&lt;PROD_PERMISSIONS_DB_CONNECTION&gt;\nEOL\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#prod-windows-powershell-equivalent","title":"PROD (Windows PowerShell Equivalent):","text":"<pre><code>$envPath = \"/var/www/prod/dhanman-community/.env\"\n$prodEnv = @\"\nDOTNET_ENVIRONMENT=production\nASPNETCORE_URLS=http://127.0.0.1:5205\nConnectionStrings__CommunityDb=&lt;PROD_COMMUNITY_DB_CONNECTION&gt;\nConnectionStrings__PermissionsDb=&lt;PROD_PERMISSIONS_DB_CONNECTION&gt;\n\"@\nssh root@&lt;droplet_ip&gt; \"echo '$prodEnv' &gt; $envPath\"\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#33-create-systemd-services","title":"\u2699\ufe0f 3.3 Create <code>systemd</code> Services","text":"<p>Run this on your DigitalOcean droplet via SSH</p>"},{"location":"devops/qa_prod_deployment_guide/#qa-service","title":"QA Service","text":"<pre><code>sudo nano /etc/systemd/system/dhanman-community-qa.service\n</code></pre> <p>Paste:</p> <pre><code>[Unit]\nDescription=Dhanman Community QA Service\nAfter=network.target\n\n[Service]\nWorkingDirectory=/var/www/qa/dhanman-community\nExecStart=/usr/bin/dotnet /var/www/qa/dhanman-community/Dhanman.MyHome.Api.dll\nRestart=always\nRestartSec=10\nKillSignal=SIGINT\nSyslogIdentifier=dhanman-community-qa\nUser=www-data\nEnvironmentFile=/var/www/qa/dhanman-community/.env\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#prod-service","title":"PROD Service","text":"<pre><code>sudo nano /etc/systemd/system/dhanman-community-prod.service\n</code></pre> <p>Repeat with path changes.</p>"},{"location":"devops/qa_prod_deployment_guide/#enable-start-linux","title":"Enable &amp; Start (Linux):","text":"<pre><code>sudo systemctl daemon-reload\nsudo systemctl enable dhanman-community-qa\nsudo systemctl start dhanman-community-qa\nsudo systemctl enable dhanman-community-prod\nsudo systemctl start dhanman-community-prod\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#34-nginx-reverse-proxy-setup","title":"\ud83c\udf10 3.4 NGINX Reverse Proxy Setup","text":""},{"location":"devops/qa_prod_deployment_guide/#qa-subdomain-config-linux","title":"QA Subdomain Config (Linux)","text":"<pre><code>sudo nano /etc/nginx/sites-available/qa.community.dhanman.com\n</code></pre> <p>Paste:</p> <pre><code>server {\n    listen 80;\n    server_name qa.community.dhanman.com;\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name qa.community.dhanman.com;\n\n    ssl_certificate /etc/letsencrypt/live/qa.community.dhanman.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/qa.community.dhanman.com/privkey.pem;\n    include /etc/letsencrypt/options-ssl-nginx.conf;\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;\n\n    location / {\n        proxy_pass http://127.0.0.1:5205;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection keep-alive;\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#enable-test-linux","title":"Enable &amp; Test (Linux)","text":"<pre><code>sudo ln -s /etc/nginx/sites-available/qa.community.dhanman.com /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#35-certbot-ssl","title":"\ud83d\udd10 3.5 Certbot SSL","text":""},{"location":"devops/qa_prod_deployment_guide/#install-certbot","title":"Install Certbot","text":"<pre><code>sudo apt install certbot python3-certbot-nginx\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#generate-ssl","title":"Generate SSL","text":"<pre><code>sudo certbot --nginx -d qa.community.dhanman.com\nsudo certbot --nginx -d prod.community.dhanman.com\n</code></pre> <p>You're now set up to run multiple services in both QA and PROD environments with automated and manual GitHub deployments, process supervision via systemd, reverse proxy via NGINX, and SSL via Certbot.</p>"},{"location":"devops/qa_prod_deployment_guide/#troubleshooting-commands-tips","title":"\ud83d\udd27 Troubleshooting Commands &amp; Tips","text":""},{"location":"devops/qa_prod_deployment_guide/#check-systemd-service-logs","title":"\ud83d\udd0d Check Systemd Service Logs","text":"<pre><code>sudo systemctl status dhanman-community-qa.service\nsudo journalctl -u dhanman-community-qa.service -n 50   # Last 50 logs\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#restart-or-enable-systemd-service","title":"\ud83d\ude80 Restart or Enable Systemd Service","text":"<pre><code>sudo systemctl daemon-reexec\nsudo systemctl daemon-reload\nsudo systemctl restart dhanman-community-qa.service\nsudo systemctl enable dhanman-community-qa.service\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#check-nginx-configuration-reload","title":"\ud83e\uddea Check NGINX Configuration &amp; Reload","text":"<pre><code>sudo nginx -t                       # Test config\nsudo systemctl reload nginx        # Reload after changes\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#test-app-on-localhost","title":"\ud83c\udf10 Test App on Localhost","text":"<pre><code>curl http://127.0.0.1:&lt;port&gt;       # Example: curl http://127.0.0.1:5205\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#check-environment-variables","title":"\ud83d\udd10 Check Environment Variables","text":"<pre><code>echo $ConnectionStrings__CommunityDb\ncat /proc/$(pgrep -f 'Dhanman.MyHome.Api')/environ | tr '\\0' '\\n' | grep ConnectionStrings\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#check-which-port-app-is-running-on","title":"\ud83d\udd0e Check Which Port App is Running On","text":"<pre><code>netstat -tuln | grep LISTEN\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#check-if-nginx-is-listening-to-domain","title":"\ud83d\udd01 Check If NGINX is Listening to Domain","text":"<pre><code>sudo nginx -T | grep server_name\n</code></pre>"},{"location":"devops/qa_prod_deployment_guide/#remove-duplicate-server_name-entries","title":"\ud83d\udcc1 Remove Duplicate <code>server_name</code> Entries","text":"<p>Use <code>grep</code> to find duplicates:</p> <pre><code>grep -r \"server_name\" /etc/nginx/sites-available/\n</code></pre> <p>Manually remove extras from unused or backup config files.</p>"},{"location":"devops/qa_prod_deployment_guide/#github-push-blocked-by-secrets","title":"\u274c GitHub Push Blocked by Secrets","text":"<pre><code># Remove secrets from committed files\n# OR use the GitHub UI to allow the secret push temporarily:\nhttps://github.com/&lt;org&gt;/&lt;repo&gt;/security/secret-scanning/unblock-secret/\n</code></pre> <p>Always ensure your <code>.env</code> file and secrets are not committed to GitHub!</p> <p>\u2705 With these tools and steps, you can confidently manage QA and PROD environments hosted on DigitalOcean with secure, automated workflows.</p>"},{"location":"financial_reports/accounts%20_payable_aging_report/","title":"Accounts Payable Aging Report","text":"<p>This report shows the outstanding amounts owed to vendors and how long they have been outstanding.</p> <pre><code>SELECT \n    v.name AS vendor_name,\n    coa.name AS account_name,\n    je.amount,\n    th.transaction_date + INTERVAL '30 days' AS due_date,  -- Assuming a 30-day payment term\n    CASE \n        WHEN th.transaction_date + INTERVAL '30 days' &lt;= CURRENT_DATE THEN 'Current'\n        WHEN th.transaction_date + INTERVAL '30 days' BETWEEN CURRENT_DATE - INTERVAL '30 days' AND CURRENT_DATE THEN '1-30 Days Past Due'\n        WHEN th.transaction_date + INTERVAL '30 days' BETWEEN CURRENT_DATE - INTERVAL '60 days' AND CURRENT_DATE - INTERVAL '31 days' THEN '31-60 Days Past Due'\n        ELSE 'Over 60 Days Past Due'\n    END AS aging_bucket\nFROM \n    journal_entries je\nJOIN \n    transaction_header th ON je.transaction_id = th.id\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nJOIN \n    vendors v ON th.vendor_id = v.id\nWHERE \n    coa.account_type_id = (SELECT id FROM account_types WHERE name = 'Accounts Payable')\nAND je.is_deleted = false\nORDER BY \n    v.name, th.transaction_date;\n</code></pre>"},{"location":"financial_reports/accounts_receivable_aging_report/","title":"Accounts Receivable Aging Report","text":"<p>This report shows the outstanding amounts owed by customers and how long they have been outstanding.</p> <pre><code>SELECT \n    c.name AS customer_name,\n    coa.name AS account_name,\n    je.amount,\n    th.transaction_date + INTERVAL '30 days' AS due_date,  -- Assuming a 30-day payment term\n    CASE \n        WHEN th.transaction_date + INTERVAL '30 days' &lt;= CURRENT_DATE THEN 'Current'\n        WHEN th.transaction_date + INTERVAL '30 days' BETWEEN CURRENT_DATE - INTERVAL '30 days' AND CURRENT_DATE THEN '1-30 Days Past Due'\n        WHEN th.transaction_date + INTERVAL '30 days' BETWEEN CURRENT_DATE - INTERVAL '60 days' AND CURRENT_DATE - INTERVAL '31 days' THEN '31-60 Days Past Due'\n        ELSE 'Over 60 Days Past Due'\n    END AS aging_bucket\nFROM \n    journal_entries je\nJOIN \n    transaction_header th ON je.transaction_id = th.id\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nJOIN \n    customers c ON th.customer_id = c.id\nWHERE \n    coa.account_type_id = (SELECT id FROM account_types WHERE name = 'Accounts Receivable')\nAND je.is_deleted = false\nORDER BY \n    c.name, th.transaction_date;\n</code></pre>"},{"location":"financial_reports/balance_sheet/","title":"Balance Sheet","text":"<p>The balance sheet shows the financial position of the organization, detailing assets, liabilities, and equity.</p> <pre><code>-- Assets\nSELECT \n    'Assets' AS section,\n    coa.account_number,\n    coa.name,\n    SUM(CASE WHEN je.entry_type = 'D' THEN je.amount ELSE -je.amount END) AS balance\nFROM \n    journal_entries je\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nWHERE \n    coa.account_type_id IN (1, 2)  -- Current Assets and Non-Current Assets\nAND je.is_deleted = false\nGROUP BY \n    coa.account_number, coa.name\nUNION ALL\n-- Liabilities\nSELECT \n    'Liabilities' AS section,\n    coa.account_number,\n    coa.name,\n    SUM(CASE WHEN je.entry_type = 'C' THEN je.amount ELSE -je.amount END) AS balance\nFROM \n    journal_entries je\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nWHERE \n    coa.account_type_id IN (3, 4)  -- Current Liabilities and Non-Current Liabilities\nAND je.is_deleted = false\nGROUP BY \n    coa.account_number, coa.name\nUNION ALL\n-- Equity\nSELECT \n    'Equity' AS section,\n    coa.account_number,\n    coa.name,\n    SUM(CASE WHEN je.entry_type = 'C' THEN je.amount ELSE -je.amount END) AS balance\nFROM \n    journal_entries je\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nWHERE \n    coa.account_type_id IN (5, 6)  -- Various Equity Accounts\nAND je.is_deleted = false\nGROUP BY \n    coa.account_number, coa.name\nORDER BY \n    section, account_number;\n</code></pre>"},{"location":"financial_reports/cash_flow_statement/","title":"Cash Flow Statement","text":"<p>The cash flow statement shows the inflows and outflows of cash.</p> <pre><code>SELECT \n    je.transaction_date,\n    coa.account_number,\n    coa.name,\n    SUM(CASE WHEN je.entry_type = 'D' THEN je.amount ELSE -je.amount END) AS net_cash_flow\nFROM \n    journal_entries je\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nWHERE \n    coa.account_type_id = 1  -- Current Assets, focusing on cash accounts\nAND je.is_deleted = false\nGROUP BY \n    je.transaction_date, coa.account_number, coa.name\nORDER BY \n    je.transaction_date, coa.account_number;\n</code></pre>"},{"location":"financial_reports/ledger_of_customers/","title":"Ledger of Customers","text":"<p>The customer ledger shows transactions related to customer accounts (Accounts Receivable).</p> <pre><code>SELECT \n    th.transaction_date AS transaction_date,\n    c.name AS customer_name,\n    coa.name AS account_name,\n    CASE WHEN je.entry_type = 'D' THEN je.amount ELSE 0 END AS debit,\n    CASE WHEN je.entry_type = 'C' THEN je.amount ELSE 0 END AS credit,\n    SUM(CASE WHEN je.entry_type = 'D' THEN je.amount ELSE -je.amount END) OVER (PARTITION BY c.id ORDER BY th.transaction_date) AS balance\nFROM \n    transaction_header th\nJOIN \n    journal_entries je ON th.id = je.transaction_id\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nJOIN \n    customers c ON th.customer_id = c.id\nWHERE \n    coa.account_type_id = (SELECT id FROM account_types WHERE name = 'Accounts Receivable')\nORDER BY \n    th.transaction_date, c.name;\n</code></pre>"},{"location":"financial_reports/ledger_of_vendors/","title":"Ledger of Vendors","text":"<p>The vendor ledger shows transactions related to vendor accounts (Accounts Payable).</p> <pre><code>SELECT \n    th.transaction_date AS transaction_date,\n    v.name AS vendor_name,\n    coa.name AS account_name,\n    CASE WHEN je.entry_type = 'C' THEN je.amount ELSE 0 END AS credit,\n    CASE WHEN je.entry_type = 'D' THEN je.amount ELSE 0 END AS debit,\n    SUM(CASE WHEN je.entry_type = 'C' THEN je.amount ELSE -je.amount END) OVER (PARTITION BY v.id ORDER BY th.transaction_date) AS balance\nFROM \n    transaction_header th\nJOIN \n    journal_entries je ON th.id = je.transaction_id\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nJOIN \n    vendors v ON th.vendor_id = v.id\nWHERE \n    coa.account_type_id = (SELECT id FROM account_types WHERE name = 'Accounts Payable')\nORDER BY \n    th.transaction_date, v.name;\n</code></pre>"},{"location":"financial_reports/pending_dues_report/","title":"Pending Dues Report","text":"<p>This report shows all the outstanding amounts owed by customers and vendors that are past due.</p> <pre><code>-- Pending Dues from Customers (Accounts Receivable)\nSELECT \n    'Customer' AS type,\n    c.name AS name,\n    coa.name AS account_name,\n    je.amount,\n    th.transaction_date + INTERVAL '30 days' AS due_date,  -- Assuming a 30-day payment term\n    CASE \n        WHEN th.transaction_date + INTERVAL '30 days' &lt;= CURRENT_DATE THEN 'Current'\n        WHEN th.transaction_date + INTERVAL '30 days' BETWEEN CURRENT_DATE - INTERVAL '30 days' AND CURRENT_DATE THEN '1-30 Days Past Due'\n        WHEN th.transaction_date + INTERVAL '30 days' BETWEEN CURRENT_DATE - INTERVAL '60 days' AND CURRENT_DATE - INTERVAL '31 days' THEN '31-60 Days Past Due'\n        ELSE 'Over 60 Days Past Due'\n    END AS aging_bucket\nFROM \n    journal_entries je\nJOIN \n    transaction_header th ON je.transaction_id = th.id\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nJOIN \n    customers c ON th.customer_id = c.id\nWHERE \n    coa.account_type_id = (SELECT id FROM account_types WHERE name = 'Accounts Receivable')\nAND je.is_deleted = false\nAND th.transaction_date + INTERVAL '30 days' &lt;= CURRENT_DATE\nORDER BY \n    name, due_date;\n</code></pre>"},{"location":"financial_reports/profit_and_loss_statement/","title":"Profit and Loss Statement","text":"<p>The profit and loss statement shows the organization\u2019s revenues and expenses over a period.</p> <pre><code>-- Revenue\nSELECT \n    'Revenue' AS section,\n    coa.account_number,\n    coa.name,\n    SUM(CASE WHEN je.entry_type = 'C' THEN je.amount ELSE -je.amount END) AS balance\nFROM \n    journal_entries je\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nWHERE \n    coa.account_type_id IN (7, 8)  -- Revenue Accounts\nAND je.is_deleted = false\nGROUP BY \n    coa.account_number, coa.name\nUNION ALL\n-- Expenses\nSELECT \n    'Expenses' AS section,\n    coa.account_number,\n    coa.name,\n    SUM(CASE WHEN je.entry_type = 'D' THEN je.amount ELSE -je.amount END) AS balance\nFROM \n    journal_entries je\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nWHERE \n    coa.account_type_id IN (9, 10, 11)  -- Expense Accounts\nAND je.is_deleted = false\nGROUP BY \n    coa.account_number, coa.name\nORDER BY \n    section, account_number;\n</code></pre>"},{"location":"financial_reports/trial_balance/","title":"Trial Balance","text":"<p>The trial balance is a summary of all the debits and credits in the ledger.</p> <pre><code>SELECT \n    coa.account_number,\n    coa.name,\n    SUM(CASE WHEN je.entry_type = 'D' THEN je.amount ELSE 0 END) AS total_debits,\n    SUM(CASE WHEN je.entry_type = 'C' THEN je.amount ELSE 0 END) AS total_credits\nFROM \n    journal_entries je\nJOIN \n    chart_of_accounts coa ON je.account_id = coa.id\nWHERE \n    je.is_deleted = false\nGROUP BY \n    coa.account_number, coa.name\nORDER BY \n    coa.account_number;\n</code></pre>"},{"location":"how-to/app-ui-structure/","title":"\ud83d\udcd8 App Structure Documentation","text":""},{"location":"how-to/app-ui-structure/#folder-structure","title":"\ud83d\uddc2\ufe0f Folder Structure","text":"<pre><code>src/\n\u251c\u2500\u2500 routes/                     # Routing structure\n\u2502   \u251c\u2500\u2500 index.tsx              # Root router using createBrowserRouter\n\u2502   \u251c\u2500\u2500 MainRoutes.tsx         # Consolidated module routes\n\u2502   \u251c\u2500\u2500 LoginRoutes.tsx        # Auth routes (login/callback)\n\u2502   \u251c\u2500\u2500 LandingRoutes.tsx      # Public landing pages (about, terms, etc.)\n\u2502   \u2514\u2500\u2500 modules/               # Modular routes split per domain\n\u2502       \u251c\u2500\u2500 community-routes.tsx\n\u2502       \u251c\u2500\u2500 sales-routes.tsx\n\u2502       \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 contexts/                  # Global contexts\n\u2502   \u251c\u2500\u2500 Auth0Context.tsx       # Auth0 provider with SafeAuth0Provider wrapper\n\u2502   \u251c\u2500\u2500 ErrorContext.tsx       # App-level error handling\n\u2502   \u251c\u2500\u2500 ConfigContext.tsx      # Org/Company/FinYear tracking\n\u251c\u2500\u2500 components/                # Shared components\n\u2502   \u251c\u2500\u2500 ErrorBoundary          # Global + auth error boundaries\n\u2502   \u251c\u2500\u2500 Loader.tsx, ScrollTop, Notistack, Snackbar\n\u2502   \u2514\u2500\u2500 logo/ etc.\n\u251c\u2500\u2500 pages/                     # Page screens per feature\n\u2502   \u2514\u2500\u2500 landing.tsx            # Public landing page\n\u251c\u2500\u2500 themes/                    # MUI theme setup\n\u251c\u2500\u2500 hooks/                     # Custom hooks (useAuth, useConfig, useMenuItems)\n\u2514\u2500\u2500 shared/                    # Shared utils &amp; storage helpers\n</code></pre>"},{"location":"how-to/app-ui-structure/#app-wrapping-apptsx-structure","title":"\ud83c\udfd7\ufe0f App Wrapping (App.tsx Structure)","text":"<pre><code>&lt;GlobalErrorBoundary&gt;\n  &lt;ConfigProvider&gt;\n    &lt;ThemeCustomization&gt;\n      &lt;Locales&gt;\n        &lt;ScrollTop&gt;\n          &lt;ErrorProvider&gt;\n            &lt;SafeAuth0Provider&gt;\n              &lt;Notistack&gt;\n                &lt;BackdropProvider&gt;\n                  &lt;RouterProvider router={router} /&gt;\n                  &lt;Snackbar /&gt;\n                &lt;/BackdropProvider&gt;\n              &lt;/Notistack&gt;\n            &lt;/SafeAuth0Provider&gt;\n          &lt;/ErrorProvider&gt;\n        &lt;/ScrollTop&gt;\n      &lt;/Locales&gt;\n    &lt;/ThemeCustomization&gt;\n  &lt;/ConfigProvider&gt;\n&lt;/GlobalErrorBoundary&gt;\n</code></pre> <p>Each provider layer:   - GlobalErrorBoundary: Catch any crash globally.   - ConfigProvider: Manage Organization, Company, Financial Year context.   - ThemeCustomization: Material UI theme setup.   - Locales: Language and RTL support.   - ScrollTop: Scrolls page to top on route changes.   - ErrorProvider: Manage app-wide caught errors.   - SafeAuth0Provider: Wraps Auth0Provider inside AuthErrorBoundary.   - Notistack: Snackbar system for notifications.   - BackdropProvider: Loader/spinner control.   - RouterProvider: React Router DOM routes.</p>"},{"location":"how-to/app-ui-structure/#authentication-permissions","title":"\ud83d\udd10 Authentication &amp; Permissions","text":""},{"location":"how-to/app-ui-structure/#1-login-flow","title":"1. Login Flow","text":"<ul> <li>Wrapped with <code>SafeAuth0Provider</code> \u2192 <code>Auth0Provider</code> internally.</li> <li>On login:</li> <li>Auth0 session is validated.</li> <li>User info + token fetched.</li> <li>Service token stored in <code>localStorage</code>.</li> <li>Org/Company/FinYear are restored from <code>localStorage</code> via <code>applyLastSelectedPreferences()</code>.</li> </ul>"},{"location":"how-to/app-ui-structure/#2-permission-management","title":"2. Permission Management","text":"<ul> <li>Permissions fetched using: <code>fetchUserPermissionsApi(orgId, userId)</code>.</li> <li>Stored in Redux/context + localStorage.</li> <li>Permission refreshes automatically on org change.</li> </ul> <pre><code>useEffect(() =&gt; {\n  if (organization?.organizationId &amp;&amp; state.isLoggedIn) {\n    refreshPermissions();\n  }\n}, [organization?.organizationId]);\n</code></pre>"},{"location":"how-to/app-ui-structure/#3-accessing-permissions","title":"3. Accessing Permissions","text":"<ul> <li><code>useAuth()</code> hook gives access to <code>userPermissions</code>.</li> <li>Used for conditional rendering of menus, routes, or UI elements.</li> <li>Permissions follow RBAC model with dynamic policies.</li> </ul>"},{"location":"how-to/app-ui-structure/#routes-structure","title":"\ud83d\uddc2\ufe0f Routes Structure","text":""},{"location":"how-to/app-ui-structure/#srcroutesindextsx","title":"src/routes/index.tsx","text":"<pre><code>createBrowserRouter([\n  LandingRoutes, // Public landing pages\n  LoginRoutes,   // Login / Callback\n  MainRoutes     // Protected /App Routes\n]);\n</code></pre>"},{"location":"how-to/app-ui-structure/#srcroutesmainroutestsx","title":"src/routes/MainRoutes.tsx","text":"<p>Splits into module-specific routes:</p> <pre><code>{\n  path: '/community',\n  element: &lt;MinimalLayout /&gt;,\n  errorElement: &lt;RouteErrorPage /&gt;, // Per module fallback\n  children: [...]\n}\n{\n  path: '/sales', children: [...]\n}\n{\n  path: '/purchase', children: [...]\n}\n...\n</code></pre> <p>\u2705 Each domain (<code>community</code>, <code>sales</code>, etc.) has its own file. \u2705 Every route tree uses an <code>errorElement</code> for route errors.</p>"},{"location":"how-to/app-ui-structure/#auth-permission-lifecycle","title":"\ud83d\udd10 Auth &amp; Permission Lifecycle","text":""},{"location":"how-to/app-ui-structure/#login-flow","title":"Login Flow","text":"<pre><code>- User clicks Login\n- Auth0 popup appears\n- On success:\n    1. Token stored \u2192 localStorage\n    2. User profile fetched\n    3. Restore Last Selected Org/Company/FinYear\n    4. Update ConfigContext\n    5. Fetch Permissions based on organization\n    6. Save Permissions into context + localStorage\n</code></pre>"},{"location":"how-to/app-ui-structure/#core-files","title":"Core Files","text":"<ul> <li><code>contexts/Auth0Context.tsx</code> \u2192 Handles login, token, user, permissions.</li> <li><code>hooks/useAuth.ts</code> \u2192 Custom hook to access auth.</li> <li><code>hooks/useConfig.ts</code> \u2192 Custom hook to access org/company/fin year.</li> </ul>"},{"location":"how-to/app-ui-structure/#menu-generation-and-permissions","title":"\ud83e\udde9 Menu Generation and Permissions","text":""},{"location":"how-to/app-ui-structure/#menu-is-generated-dynamically-via-usemenuitems","title":"Menu is Generated Dynamically via <code>useMenuItems</code>","text":"<pre><code>const menuItems = useMenuItems();\n</code></pre> <p>Internal working:</p> <pre><code>const getMenuItemsImpl = ({ permissions, company, user }) =&gt; {\n  if (!Array.isArray(permissions)) return [];\n  return permissions.map(p =&gt; generateMenuItemFromPermission(p));\n};\n</code></pre> <ul> <li>Menu options are based on permissions.</li> <li>No hardcoded menu.</li> <li>Hides features if permission missing.</li> </ul> <p>\u2705 Safe fallbacks if permissions are missing.</p>"},{"location":"how-to/app-ui-structure/#example","title":"Example:","text":"<p>If user has <code>Sales.Invoice.View</code>, they see <code>Invoices</code> menu. If not, it won't even render that menu item.</p>"},{"location":"how-to/app-ui-structure/#error-handling-in-the-app","title":"\ud83d\udea8 Error Handling in the App","text":"<ul> <li>GlobalErrorBoundary: Any React error at the App level.</li> <li>AuthErrorBoundary: If Auth0 provider crashes.</li> <li>RouteErrorPage: Per route crash fallback.</li> </ul> <p>Sample Route Usage:</p> <pre><code>{\n  path: '/sales',\n  element: &lt;MinimalLayout /&gt;,\n  errorElement: &lt;RouteErrorPage /&gt;,\n  children: [...]\n}\n</code></pre>"},{"location":"how-to/app-ui-structure/#menu-generation","title":"\ud83e\udded Menu Generation","text":""},{"location":"how-to/app-ui-structure/#usemenuitems","title":"<code>useMenuItems()</code>","text":"<ul> <li>Generates dynamic menus based on user permissions + current company/org.</li> <li>Reads from centralized permissions list.</li> <li>Organized in a modular structure, e.g.:</li> </ul> <pre><code>const getMenuItemsImpl = ({ permissions, company, user }) =&gt; {\n  if (!Array.isArray(permissions)) return [];\n  return permissions.map(p =&gt; generateMenuItemFromPermission(p));\n};\n</code></pre> <ul> <li>Resilient to null/undefined using fallback checks.</li> </ul>"},{"location":"how-to/app-ui-structure/#routing","title":"\ud83e\udde9 Routing","text":"<ul> <li>Each domain (community, sales, inventory, payroll, etc.) has its own file under <code>routes/modules/</code></li> <li>Combined in <code>MainRoutes.tsx</code>.</li> <li>Public routes (about, terms) in <code>LandingRoutes.tsx</code></li> <li>Error boundary per route via:</li> </ul> <pre><code>{\n  path: '/app',\n  element: &lt;MinimalLayout /&gt;,\n  errorElement: &lt;RouteErrorPage /&gt;, // dynamically catches per route\n  children: [...]\n}\n</code></pre>"},{"location":"how-to/app-ui-structure/#error-boundaries","title":"\ud83d\udea8 Error Boundaries","text":""},{"location":"how-to/app-ui-structure/#1-globalerrorboundary","title":"1. GlobalErrorBoundary","text":"<p>Wraps <code>App.tsx</code> \u2014 catches unexpected React errors.</p>"},{"location":"how-to/app-ui-structure/#2-autherrorboundary","title":"2. AuthErrorBoundary","text":"<p>Handles failures inside the auth layer.</p>"},{"location":"how-to/app-ui-structure/#3-routeerrorpage","title":"3. RouteErrorPage","text":"<p>Used in routing <code>errorElement</code>. Displays fallback UI for route crashes (e.g. failed loaders, permissions map errors).</p>"},{"location":"how-to/app-ui-structure/#full-login-preference-restoration-flow","title":"\ud83d\udd04 Full Login &amp; Preference Restoration Flow","text":"<pre><code>[Login Success]\n  \u2192 Get user via Auth0\n  \u2192 Save token to localStorage\n  \u2192 Fetch org/company/finYear from localStorage or defaults\n  \u2192 Call `applyLastSelectedPreferences`\n      \u21b3 Triggers ConfigContext update\n  \u2192 Fetch permissions\n      \u21b3 Save to context + localStorage\n  \u2192 Render components conditionally based on permissions\n</code></pre>"},{"location":"how-to/app-ui-structure/#key-learnings-best-practices","title":"\ud83e\udde0 Key Learnings / Best Practices","text":"<ul> <li>Modular route files scale better.</li> <li>SafeAuth0Provider with AuthErrorBoundary gives graceful auth fallback.</li> <li>Global error handling ensures better UX under failure.</li> <li>useConfig + localStorage drives organization/company/fin year persistence.</li> <li>Centralized permission fetch avoids redundancy and ensures proper UI visibility.</li> <li>Menu is dynamically derived and not hardcoded.</li> </ul> <p>\u2705 Refactoring completed successfully. \ud83d\udce6 Future Enhancements: - Add lazy loading + suspense fallback per route chunk - Implement role-based menu grouping - Add loader guards while permission fetch is pending</p>"},{"location":"how-to/app-ui-structure/#suggested-diagram","title":"\ud83d\udcca Suggested Diagram","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Login Page \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Auth0 Login Flow \u2502\u2500\u2500\u2500\u2500\u25b6 Save Token     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                               \u2193\n                     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                     \u2502 Restore Preferences        \u2502\n                     \u2502 - Org                      \u2502\n                     \u2502 - Company                  \u2502\n                     \u2502 - Fin Year                 \u2502\n                     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u2193\n                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                      \u2502 Fetch Permissions    \u2502\n                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                 \u2193\n                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                      \u2502 Update Auth Context    \u2502\n                      \u2502 + localStorage         \u2502\n                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                 \u2193\n                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                      \u2502 useMenuItems builds Menu  \u2502\n                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"how-to/app-ui-structure/#full-app-lifecycle-diagram","title":"\ud83d\udd04 Full App Lifecycle Diagram","text":"<pre><code>[User Lands]\n  \u2193\n[Auth0 Check Session]\n  \u2193\nIs Logged In? \n |        \nNo        Yes\n |           \u2193\nShow Login   Fetch Token\n               \u2193\n           Fetch User Profile\n               \u2193\n           Restore Org/Company/FinYear\n               \u2193\n           Fetch Permissions\n               \u2193\n           Update Auth Context\n               \u2193\n           Render Menu Items Dynamically\n</code></pre>"},{"location":"how-to/app-ui-structure/#summary","title":"\ud83d\udce6 Summary","text":"<ul> <li>App wrapping is deeply layered but clean.</li> <li>Dynamic routing with modular approach.</li> <li>Permission-driven UI visibility (RBAC).</li> <li>Error boundaries at App, Auth, and Route levels.</li> <li>Use of centralized hooks (<code>useAuth</code>, <code>useConfig</code>, <code>useMenuItems</code>).</li> <li>Minimal hardcoding \u2192 Everything reactive.</li> </ul>"},{"location":"how-to/email-templates/","title":"\ud83d\udce7 Email &amp; Template Service - CrossCuttingConcern Documentation","text":""},{"location":"how-to/email-templates/#overview","title":"Overview","text":"<p>This module provides a centralized and reusable email sending solution using: - <code>EmailService</code> for sending emails via SMTP - <code>EmailTemplateService</code> for managing DB-driven email templates - <code>TemplatedEmailService</code> as a helper that combines both</p> <p>This design keeps the configuration and transport details abstracted from consumers.</p>"},{"location":"how-to/email-templates/#folder-structure","title":"\ud83d\udce6 Folder Structure","text":"<pre><code>CrossCuttingConcern.Email/\n\u251c\u2500\u2500 Abstractions/\n\u2502   \u251c\u2500\u2500 IEmailService.cs\n\u2502   \u2514\u2500\u2500 IEmailTemplateService.cs\n\u2502\n\u251c\u2500\u2500 Entities/\n\u2502   \u251c\u2500\u2500 EmailMessage.cs\n\u2502   \u2514\u2500\u2500 ProcessedEmailTemplate.cs\n\u2502\n\u251c\u2500\u2500 Services/\n\u2502   \u251c\u2500\u2500 EmailService.cs\n\u2502   \u251c\u2500\u2500 EmailTemplateService.cs\n\u2502   \u2514\u2500\u2500 TemplatedEmailService.cs\n\u2502\n\u251c\u2500\u2500 Settings/\n\u2502   \u2514\u2500\u2500 SmtpSettings.cs\n</code></pre>"},{"location":"how-to/email-templates/#configuration","title":"\ud83d\udd27 Configuration","text":""},{"location":"how-to/email-templates/#appsettingsjson","title":"<code>appsettings.json</code>","text":"<pre><code>\"Smtp\": {\n  \"Host\": \"smtp-relay.brevo.com\",\n  \"Port\": 587,\n  \"Username\": \"your-smtp-user\",\n  \"Password\": \"your-smtp-password\",\n  \"FromEmail\": \"support@dhanman.com\"\n}\n</code></pre>"},{"location":"how-to/email-templates/#connection-string","title":"Connection String","text":"<pre><code>\"ConnectionStrings\": {\n  \"TemplateDb\": \"Host=localhost;Port=5432;Database=TemplateDb;Username=postgres;Password=password\"\n}\n</code></pre>"},{"location":"how-to/email-templates/#di-registration","title":"DI Registration","text":"<pre><code>services.Configure&lt;SmtpSettings&gt;(configuration.GetSection(\"Smtp\"));\nservices.AddSingleton&lt;IDateTime, SystemDateTime&gt;();\n\nservices.AddDbContext&lt;TemplateDbContext&gt;(options =&gt;\n    options.UseNpgsql(configuration.GetConnectionString(\"TemplateDb\")));\n\nservices.AddScoped&lt;ITemplateDbContext&gt;(provider =&gt;\n    provider.GetRequiredService&lt;TemplateDbContext&gt;());\n\nservices.AddScoped&lt;IEmailService, EmailService&gt;();\nservices.AddScoped&lt;IEmailTemplateService, EmailTemplateService&gt;();\nservices.AddScoped&lt;TemplatedEmailService&gt;();\n</code></pre>"},{"location":"how-to/email-templates/#emailservice","title":"\u2709\ufe0f EmailService","text":""},{"location":"how-to/email-templates/#usage","title":"Usage","text":"<pre><code>await _emailService.SendEmailAsync(\n    to: \"bharat.mane@gmail.com\",\n    subject: \"Manual Email\",\n    body: \"&lt;p&gt;Hello Bharat&lt;/p&gt;\",\n    isHtml: true);\n</code></pre>"},{"location":"how-to/email-templates/#emailtemplateservice","title":"\ud83e\udde9 EmailTemplateService","text":""},{"location":"how-to/email-templates/#description","title":"Description","text":"<p>Fetches email templates from DB, caches them, and replaces placeholders.</p>"},{"location":"how-to/email-templates/#example-template-in-db","title":"Example Template in DB","text":"<pre><code>Subject: Welcome to Dhanman\nBodyHtml: Hello {{CustomerName}}, click &lt;a href=\"{{LoginUrl}}\"&gt;here&lt;/a&gt; to login.\n</code></pre>"},{"location":"how-to/email-templates/#usage_1","title":"Usage","text":"<pre><code>var placeholders = new Dictionary&lt;string, string&gt;\n{\n    [\"CustomerName\"] = \"Bharat\",\n    [\"LoginUrl\"] = \"https://dhanman.com/login\"\n};\n\nvar template = await _templateService.GetProcessedTemplateAsync(101, placeholders);\n</code></pre>"},{"location":"how-to/email-templates/#templatedemailservice-helper","title":"\ud83e\udd16 TemplatedEmailService (Helper)","text":""},{"location":"how-to/email-templates/#usage_2","title":"Usage","text":"<pre><code>var placeholders = new Dictionary&lt;string, string&gt;\n{\n    [\"CustomerName\"] = order.CustomerName,\n    [\"OrderId\"] = order.Id.ToString()\n};\n\nawait _templatedEmailService.SendAsync(\n    templateId: 102,\n    recipient: order.CustomerEmail,\n    placeholders: placeholders);\n</code></pre> <p>No need to manually deal with template loading or SMTP.</p>"},{"location":"how-to/email-templates/#consumer-example-service-layer","title":"\ud83e\uddea Consumer Example (Service Layer)","text":"<pre><code>public class OrderService\n{\n    private readonly TemplatedEmailService _templatedEmailService;\n\n    public OrderService(TemplatedEmailService templatedEmailService)\n    {\n        _templatedEmailService = templatedEmailService;\n    }\n\n    public async Task SendOrderConfirmation(Order order)\n    {\n        var placeholders = new Dictionary&lt;string, string&gt;\n        {\n            [\"CustomerName\"] = order.CustomerName,\n            [\"OrderId\"] = order.Id.ToString()\n        };\n\n        await _templatedEmailService.SendAsync(102, order.CustomerEmail, placeholders);\n    }\n}\n</code></pre>"},{"location":"how-to/email-templates/#notes","title":"\ud83e\udde0 Notes","text":"<ul> <li><code>TemplatedEmailService</code> is a concrete helper, injected directly.</li> <li><code>EmailTemplateService</code> uses <code>TemplateDbContext</code> with scoped lifetime.</li> <li>SMTP settings are injected via <code>IOptions&lt;SmtpSettings&gt;</code>.</li> <li>Placeholders must exactly match what the template expects (e.g. <code>{{CustomerName}}</code>).</li> </ul>"},{"location":"how-to/email-templates/#summary","title":"\u2705 Summary","text":"<p>With this module, any service can send emails via a template-driven system without worrying about HTML formatting or SMTP details.</p> <p>Use <code>TemplatedEmailService</code> to send branded, consistent emails with ease.</p>"},{"location":"payroll/sample_templates/","title":"Sample Templates","text":""},{"location":"payroll/sample_templates/#template-1-standard-salary-structure-percentage-based","title":"Template 1: Standard Salary Structure (Percentage-Based)","text":"Component Percentage of CTC Description Tax Treatment Basic Salary 40% Core component of the salary. Fully taxable Dearness Allowance (DA) 10% Allowance to counteract the effects of inflation. Fully taxable House Rent Allowance (HRA) 20% Allowance to cover the cost of renting a house. Partially exempt under Section 10(13A) of the Income Tax Act, based on certain conditions Conveyance Allowance 5% Allowance to cover transportation expenses. Tax-exempt up to INR 1,600 per month Special Allowance 10% Flexible component used to balance the salary structure. Fully taxable Leave Travel Allowance (LTA) 5% Allowance to cover travel expenses for employees on leave. Tax-exempt under Section 10(5) of the Income Tax Act, subject to certain conditions Medical Reimbursement 5% Reimbursement for medical expenses. Tax-exempt up to INR 15,000 per annum Professional Tax Fixed Amount Statutory deduction levied by the state government. Amount varies by state. Fully taxable Provident Fund (PF) 12% of Basic Salary Both employer and employee contribute 12% of the basic salary to the Provident Fund. Employee contributions are eligible for tax deduction under Section 80C of the Income Tax Act Gratuity 4.81% of Basic Salary Statutory benefit paid to employees who have completed five years of service. Exempt up to a certain limit under Section 10(10) of the Income Tax Act"},{"location":"payroll/sample_templates/#template-2-enhanced-salary-structure-percentage-based","title":"Template 2: Enhanced Salary Structure (Percentage-Based)","text":"Component Percentage of CTC Description Tax Treatment Basic Salary 50% Core component of the salary. Fully taxable Dearness Allowance (DA) 5% Allowance to counteract the effects of inflation. Fully taxable House Rent Allowance (HRA) 20% Allowance to cover the cost of renting a house. Partially exempt under Section 10(13A) of the Income Tax Act, based on certain conditions Conveyance Allowance 4% Allowance to cover transportation expenses. Tax-exempt up to INR 1,600 per month Special Allowance 8% Flexible component used to balance the salary structure. Fully taxable Leave Travel Allowance (LTA) 5% Allowance to cover travel expenses for employees on leave. Tax-exempt under Section 10(5) of the Income Tax Act, subject to certain conditions Medical Reimbursement 3% Reimbursement for medical expenses. Tax-exempt up to INR 15,000 per annum Professional Tax Fixed Amount Statutory deduction levied by the state government. Amount varies by state. Fully taxable Provident Fund (PF) 12% of Basic Salary Both employer and employee contribute 12% of the basic salary to the Provident Fund. Employee contributions are eligible for tax deduction under Section 80C of the Income Tax Act Gratuity 4.81% of Basic Salary Statutory benefit paid to employees who have completed five years of service. Exempt up to a certain limit under Section 10(10) of the Income Tax Act"},{"location":"permissions/common/","title":"Common Permissions","text":""},{"location":"permissions/common/#accounts-permissions","title":"Accounts Permissions","text":"<ul> <li>Accounts.Read</li> <li><code>Accounts.Read.AccountGroups</code></li> <li><code>Accounts.Read.AccountCategories</code></li> <li><code>Accounts.Read.SalesAccounts</code></li> <li><code>Accounts.Read.PurchaseAccounts</code></li> <li><code>Accounts.Read.BankAccounts</code></li> <li><code>Accounts.Read.CashAccounts</code></li> <li><code>Accounts.Read.BankAndCashAccounts</code></li> <li><code>Accounts.Read.ChartOfAccounts</code></li> <li><code>Accounts.Read.ChildAccounts</code></li> <li>Accounts.Write</li> <li><code>Accounts.Write.AccountGroups</code></li> <li><code>Accounts.Write.AccountCategories</code></li> <li><code>Accounts.Write.ChartOfAccounts</code></li> </ul>"},{"location":"permissions/common/#address-permissions","title":"Address Permissions","text":"<ul> <li>Address.Read</li> <li><code>Address.Read.Countries</code></li> <li><code>Address.Read.States</code></li> <li><code>Address.Read.Cities</code></li> <li><code>Address.Read.Addresses</code></li> </ul>"},{"location":"permissions/common/#company-permissions","title":"Company Permissions","text":"<ul> <li>Company.Read</li> <li><code>Company.Read.Companies</code></li> <li><code>Company.Read.CompanyNames</code></li> <li><code>Company.Read.Company</code></li> <li><code>Company.Read.CompaniesByOrganization</code></li> <li><code>Company.Read.DefaultCompanyByUser</code></li> <li>Company.Write</li> <li><code>Company.Write.Companies</code></li> </ul>"},{"location":"permissions/common/#company-preferences-permissions","title":"Company Preferences Permissions","text":"<ul> <li>CompanyPreferences.Read</li> <li><code>CompanyPreferences.Read.CompanyPreferences</code></li> <li>CompanyPreferences.Write</li> <li><code>CompanyPreferences.Write.CompanyPreferences</code></li> </ul>"},{"location":"permissions/common/#currency-permissions","title":"Currency Permissions","text":"<ul> <li>Currency.Read</li> <li><code>Currency.Read.Currencies</code></li> </ul>"},{"location":"permissions/common/#customers-permissions","title":"Customers Permissions","text":"<ul> <li>Customers.Write</li> <li><code>Customers.Write.Customers</code></li> </ul>"},{"location":"permissions/common/#general-ledgers-permissions","title":"General Ledgers Permissions","text":"<ul> <li>GeneralLedgers.Read</li> <li><code>GeneralLedgers.Read.GeneralLedgers</code></li> <li>GeneralLedgers.Write</li> <li><code>GeneralLedgers.Write.GeneralLedgers</code></li> </ul>"},{"location":"permissions/common/#journal-voucher-permissions","title":"Journal Voucher Permissions","text":"<ul> <li>JournalVoucher.Write</li> <li><code>JournalVoucher.Write.JournalVouchers</code></li> </ul>"},{"location":"permissions/common/#notification-permissions","title":"Notification Permissions","text":"<ul> <li>Notification.Read</li> <li><code>Notification.Read.Notifications</code></li> <li>Notification.Write</li> <li><code>Notification.Write.Notifications</code></li> </ul>"},{"location":"permissions/common/#organization-permissions","title":"Organization Permissions","text":"<ul> <li>Organization.Read</li> <li><code>Organization.Read.OrganizationAccounts</code></li> <li><code>Organization.Read.OrganizationAccountsByCompany</code></li> </ul>"},{"location":"permissions/common/#payments-permissions","title":"Payments Permissions","text":"<ul> <li>Payments.Write</li> <li><code>Payments.Write.Payments</code></li> </ul>"},{"location":"permissions/common/#permissions-management","title":"Permissions Management","text":"<ul> <li>Permissions.Read</li> <li><code>Permissions.Read.Permissions</code></li> </ul>"},{"location":"permissions/common/#public-user-permissions","title":"Public User Permissions","text":"<ul> <li>PublicUser.Read</li> <li><code>PublicUser.Read.PublicUsers</code></li> </ul>"},{"location":"permissions/common/#roles-permissions","title":"Roles Permissions","text":"<ul> <li>Roles.Read</li> <li><code>Roles.Read.Roles</code></li> </ul>"},{"location":"permissions/common/#transaction-permissions","title":"Transaction Permissions","text":"<ul> <li>Transaction.Write</li> <li><code>Transaction.Write.Transactions</code></li> </ul>"},{"location":"permissions/common/#users-permissions","title":"Users Permissions","text":"<ul> <li>Users.Read</li> <li><code>Users.Read.Users</code></li> <li><code>Users.Read.UserNames</code></li> <li>Users.Write</li> <li><code>Users.Write.Users</code></li> </ul>"},{"location":"permissions/common/#vendors-permissions","title":"Vendors Permissions","text":"<ul> <li>Vendors.Write</li> <li><code>Vendors.Write.Vendors</code></li> </ul>"},{"location":"permissions/common/#warehouse-permissions","title":"Warehouse Permissions","text":"<ul> <li>Warehouse.Read</li> <li><code>Warehouse.Read.Warehouses</code></li> <li><code>Warehouse.Read.WarehouseNames</code></li> <li>Warehouse.Write</li> <li><code>Warehouse.Write.Warehouses</code></li> </ul>"},{"location":"permissions/common/#permissions-hierarchy","title":"Permissions Hierarchy","text":""},{"location":"permissions/common/#commonadmin","title":"Common.Admin","text":"<ul> <li>**Permissions.Admin<ul> <li>Permissions.Read</li> <li><code>Permissions.Read.Permissions</code></li> </ul> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> </ul>"},{"location":"permissions/common/#accountsadmin","title":"Accounts.Admin","text":"<ul> <li>Accounts.Read<ul> <li><code>Accounts.Read.AccountGroups</code></li> <li><code>Accounts.Read.AccountCategories</code></li> <li><code>Accounts.Read.SalesAccounts</code></li> <li><code>Accounts.Read.PurchaseAccounts</code></li> <li><code>Accounts.Read.BankAccounts</code></li> <li><code>Accounts.Read.CashAccounts</code></li> <li><code>Accounts.Read.BankAndCashAccounts</code></li> <li><code>Accounts.Read.ChartOfAccounts</code></li> <li><code>Accounts.Read.ChildAccounts</code></li> </ul> </li> <li>Accounts.Write<ul> <li><code>Accounts.Write.AccountGroups</code></li> <li><code>Accounts.Write.AccountCategories</code></li> <li><code>Accounts.Write.ChartOfAccounts</code></li> </ul> </li> </ul>"},{"location":"permissions/common/#addressadmin","title":"Address.Admin","text":"<ul> <li>Address.Read<ul> <li><code>Address.Read.Countries</code></li> <li><code>Address.Read.States</code></li> <li><code>Address.Read.Cities</code></li> <li><code>Address.Read.Addresses</code></li> </ul> </li> </ul>"},{"location":"permissions/common/#companyadmin","title":"Company.Admin","text":"<ul> <li>Company.Read</li> <li><code>Company.Read.Companies</code></li> <li><code>Company.Read.CompanyNames</code></li> <li><code>Company.Read.Company</code></li> <li><code>Company.Read.CompaniesByOrganization</code></li> <li><code>Company.Read.DefaultCompanyByUser</code></li> <li>Company.Write</li> <li><code>Company.Write.Companies</code></li> </ul>"},{"location":"permissions/common/#companypreferencesadmin","title":"CompanyPreferences.Admin","text":"<ul> <li>CompanyPreferences.Read</li> <li><code>CompanyPreferences.Read.CompanyPreferences</code></li> <li>CompanyPreferences.Write</li> <li><code>CompanyPreferences.Write.CompanyPreferences</code></li> </ul>"},{"location":"permissions/common/#currencyadmin","title":"Currency.Admin","text":"<ul> <li>Currency.Read</li> <li><code>Currency.Read.Currencies</code></li> </ul>"},{"location":"permissions/common/#customersadmin","title":"Customers.Admin","text":"<ul> <li>Customers.Write</li> <li><code>Customers.Write.Customers</code></li> </ul>"},{"location":"permissions/common/#generalledgersadmin","title":"GeneralLedgers.Admin","text":"<ul> <li>GeneralLedgers.Read</li> <li><code>GeneralLedgers.Read.GeneralLedgers</code></li> <li>GeneralLedgers.Write</li> <li><code>GeneralLedgers.Write.GeneralLedgers</code></li> </ul>"},{"location":"permissions/common/#journalvoucheradmin","title":"JournalVoucher.Admin","text":"<ul> <li>JournalVoucher.Write</li> <li><code>JournalVoucher.Write.JournalVouchers</code></li> </ul>"},{"location":"permissions/common/#notificationadmin","title":"Notification.Admin","text":"<ul> <li>Notification.Read</li> <li><code>Notification.Read.Notifications</code></li> <li>Notification.Write</li> <li><code>Notification.Write.Notifications</code></li> </ul>"},{"location":"permissions/common/#organizationadmin","title":"Organization.Admin**","text":"<ul> <li>Organization.Read</li> <li><code>Organization.Read.OrganizationAccounts</code></li> <li><code>Organization.Read.OrganizationAccountsByCompany</code></li> </ul>"},{"location":"permissions/common/#paymentsadmin","title":"Payments.Admin","text":"<ul> <li>Payments.Write</li> <li><code>Payments.Write.Payments</code></li> </ul>"},{"location":"permissions/common/#publicuseradmin","title":"PublicUser.Admin","text":"<ul> <li>PublicUser.Read</li> <li><code>PublicUser.Read.PublicUsers</code></li> </ul>"},{"location":"permissions/common/#rolesadmin","title":"Roles.Admin","text":"<ul> <li>Roles.Read</li> <li><code>Roles.Read.Roles</code></li> </ul>"},{"location":"permissions/common/#transactionadmin","title":"Transaction.Admin","text":"<ul> <li>Transaction.Write</li> <li><code>Transaction.Write.Transactions</code></li> </ul>"},{"location":"permissions/common/#usersadmin","title":"Users.Admin","text":"<ul> <li>Users.Read</li> <li><code>Users.Read.Users</code></li> <li><code>Users.Read.UserNames</code></li> <li>Users.Write</li> <li><code>Users.Write.Users</code></li> </ul>"},{"location":"permissions/common/#vendorsadmin","title":"Vendors.Admin","text":"<ul> <li>Vendors.Write</li> <li><code>Vendors.Write.Vendors</code></li> </ul>"},{"location":"permissions/common/#warehouseadmin","title":"Warehouse.Admin","text":"<ul> <li>Warehouse.Read</li> <li><code>Warehouse.Read.Warehouses</code></li> <li><code>Warehouse.Read.WarehouseNames</code></li> </ul>"},{"location":"permissions/common/#warehousewrite","title":"Warehouse.Write","text":"<ul> <li><code>Warehouse.Write.Warehouses</code></li> </ul>"},{"location":"permissions/permissions-naming-guidelines/","title":"\ud83d\udcdc Dhanman Permission Naming Guidelines","text":"<p>This document defines the standard naming convention for all permissions used across the Dhanman platform. Consistent naming improves readability, manageability, and security of permission-driven access control.</p>"},{"location":"permissions/permissions-naming-guidelines/#naming-structure","title":"\ud83e\udde9 Naming Structure","text":"<p>Use the following pattern for every permission:</p> <pre><code>Dhanman.{Module}.{Entity}.{Action}[.SubAction]\n</code></pre>"},{"location":"permissions/permissions-naming-guidelines/#components","title":"\ud83d\udd39 Components","text":"Part Description Example <code>Module</code> The bounded context or domain (e.g., <code>Sales</code>, <code>Purchase</code>) <code>Sales</code>, <code>Payroll</code> <code>Entity</code> The target resource (always in singular form) <code>Invoice</code>, <code>Bill</code>, <code>Customer</code> <code>Action</code> The operation allowed on the entity (verb, in PascalCase) <code>Read</code>, <code>Write</code>, <code>Delete</code> <code>SubAction</code> (Optional) for workflow-specific variations <code>Approve.Level1</code>, <code>SendForApproval</code>"},{"location":"permissions/permissions-naming-guidelines/#examples","title":"\u2705 Examples","text":"Good Permission Name Meaning <code>Dhanman.Sales.Invoice.Read</code> Can view a single or multiple invoices <code>Dhanman.Purchase.Bill.Delete</code> Can delete one or more bills <code>Dhanman.Payroll.Employee.Write</code> Can create or update employee records <code>Dhanman.Sales.Invoice.Approve.Level2</code> Can approve an invoice at Level 2 <code>Dhanman.MyHome.ResidentRequest.Approve</code> Can approve resident requests in MyHome module"},{"location":"permissions/permissions-naming-guidelines/#what-to-avoid","title":"\ud83d\udeab What to Avoid","text":"Bad Permission Name Why it's bad Suggested Fix <code>Dhanman.Approve</code> Missing context \u2014 approve what? <code>Dhanman.Sales.Invoice.Approve</code> <code>Dhanman.Write</code> Too broad and ambiguous <code>Dhanman.Payroll.Employee.Write</code> <code>Dhanman.Sales.Approve</code> Vague \u2014 what in sales is being approved? <code>Dhanman.Sales.Invoice.Approve</code> <code>Dhanman.MyHome.Approve</code> Too generic \u2014 unclear which entity <code>Dhanman.MyHome.ResidentRequest.Approve</code> <code>Dhanman.Invoices.Delete</code> Entity should be singular <code>Dhanman.Sales.Invoice.Delete</code>"},{"location":"permissions/permissions-naming-guidelines/#global-permissions","title":"\ud83d\udd10 Global Permissions","text":"<p>Global permissions grant access across all modules and entities for a specific action. These should be clearly distinguished using the following pattern:</p> <pre><code>Dhanman.Global.{Action}\n</code></pre>"},{"location":"permissions/permissions-naming-guidelines/#examples_1","title":"\u2705 Examples","text":"Global Permission Meaning <code>Dhanman.Global.Read</code> Can read/view everything <code>Dhanman.Global.Write</code> Can write/update across all modules/entities <code>Dhanman.Global.Delete</code> Can delete any entity <code>Dhanman.Global.Approve</code> Can approve anything (across modules/workflows) <p>Use these only for superusers or system administrators.</p>"},{"location":"permissions/permissions-naming-guidelines/#best-practices","title":"\ud83d\udccc Best Practices","text":"<ul> <li>\u2705 Use singular nouns for entities</li> <li>\u2705 Use PascalCase for each component</li> <li>\u2705 Prefer specific, scoped permissions over vague/global ones</li> <li>\u2705 Use <code>SubAction</code> only for meaningful variants like approval levels</li> <li>\u2705 Use <code>Dhanman.Global.{Action}</code> for cross-module admin powers</li> <li>\u2705 Enforce consistent entity names using a controlled ResourceType list</li> </ul>"},{"location":"permissions/permissions-naming-guidelines/#canonical-resourcetypes","title":"\ud83e\uddfe Canonical ResourceTypes","text":"<p>To maintain consistency, use only the following singular-form resource types:</p>"},{"location":"permissions/permissions-naming-guidelines/#common","title":"Common","text":"<ul> <li>Company</li> <li>CompanyWarehouse</li> <li>CompanyPreference</li> <li>User</li> <li>Permission</li> <li>Organization</li> <li>Vendor</li> <li>Customer</li> <li>Ledger</li> <li>COA</li> </ul>"},{"location":"permissions/permissions-naming-guidelines/#purchase","title":"Purchase","text":"<ul> <li>Bill</li> <li>Payment</li> <li>Note</li> <li>VendorWarehouse</li> </ul>"},{"location":"permissions/permissions-naming-guidelines/#sales","title":"Sales","text":"<ul> <li>Invoice</li> <li>Payment</li> <li>Note</li> <li>MyHomeInvoice</li> </ul>"},{"location":"permissions/permissions-naming-guidelines/#myhome","title":"MyHome","text":"<ul> <li>Resident</li> <li>ResidentRequest</li> <li>Visitor</li> <li>Event</li> <li>ServiceProvider</li> <li>Building</li> <li>Unit</li> <li>Floor</li> <li>Gate</li> <li>Delivery</li> <li>Apartment</li> </ul>"},{"location":"permissions/permissions-naming-guidelines/#inventory","title":"Inventory","text":"<ul> <li>Product</li> </ul>"},{"location":"permissions/permissions-naming-guidelines/#payroll","title":"Payroll","text":"<ul> <li>Employee</li> <li>Leave</li> <li>Holiday</li> <li>Task</li> <li>Project</li> <li>PayrollComponent</li> <li>Payroll</li> </ul>"},{"location":"permissions/permissions-naming-guidelines/#developer","title":"Developer","text":"<ul> <li>Token</li> <li>Id</li> </ul>"},{"location":"permissions/permissions-naming-guidelines/#appendix","title":"\ud83d\udcce Appendix","text":""},{"location":"permissions/permissions-naming-guidelines/#common-actions","title":"Common Actions","text":"Action Description <code>Read</code> View resource(s) <code>Write</code> Create or update resource <code>Delete</code> Remove resource <code>Approve</code> Approve workflow item <code>Reject</code> Reject workflow item <code>SendForApproval</code> Submit for approval <code>Copy</code> Clone an item <code>Pay</code> Mark as paid <code>Cancel</code> Cancel action or item <p>Keep your permissions clean, contextual, consistent, and scalable.</p>"},{"location":"permissions/sales/","title":"Permissions Structure","text":""},{"location":"permissions/sales/#address-permissions","title":"Address Permissions","text":""},{"location":"permissions/sales/#addressread","title":"Address.Read","text":"<ul> <li><code>Address.Read.Countries</code></li> <li><code>Address.Read.States</code></li> <li><code>Address.Read.Cities</code></li> </ul>"},{"location":"permissions/sales/#customer-note-permissions","title":"Customer Note Permissions","text":""},{"location":"permissions/sales/#customernoteread","title":"CustomerNote.Read","text":"<ul> <li><code>CustomerNote.Read.CustomerNotes</code></li> </ul>"},{"location":"permissions/sales/#customernotewrite","title":"CustomerNote.Write","text":"<ul> <li><code>CustomerNote.Write.CustomerNote</code></li> <li><code>CustomerNote.Write.CustomerNoteNextStatus</code></li> <li><code>CustomerNote.Write.CustomerNotePreviousStatus</code></li> </ul>"},{"location":"permissions/sales/#customers-permissions","title":"Customers Permissions","text":""},{"location":"permissions/sales/#customersread","title":"Customers.Read","text":"<ul> <li><code>Customers.Read.CustomerNames</code></li> <li><code>Customers.Read.Customers</code></li> <li><code>Customers.Read.Customer</code></li> <li><code>Customers.Read.AddressByCustomerId</code></li> </ul>"},{"location":"permissions/sales/#customerswrite","title":"Customers.Write","text":"<ul> <li><code>Customers.Write.Customer</code></li> <li><code>Customers.Write.Customer</code></li> </ul>"},{"location":"permissions/sales/#git-permissions","title":"Git Permissions","text":""},{"location":"permissions/sales/#gitread","title":"Git.Read","text":"<ul> <li><code>Git.Read.GetAllPRs</code></li> </ul>"},{"location":"permissions/sales/#invoices-permissions","title":"Invoices Permissions","text":""},{"location":"permissions/sales/#invoicesread","title":"Invoices.Read","text":"<ul> <li><code>Invoices.Read.Invoice</code></li> <li><code>Invoices.Read.Invoices</code></li> <li><code>Invoices.Read.InvoiceStatus</code></li> <li><code>Invoices.Read.InvoiceDetail</code></li> <li><code>Invoices.Read.InvoiceHeaders</code></li> <li><code>Invoices.Read.InvoiceHeader</code></li> <li><code>Invoices.Read.InvoiceHeaderByCustomerId</code></li> <li><code>Invoices.Read.PaidInvoiceSummary</code></li> <li><code>Invoices.Read.UnpaidInvoiceSummary</code></li> <li><code>Invoices.Read.OverdueInvoiceSummary</code></li> <li><code>Invoices.Read.TotalAmount</code></li> <li><code>Invoices.Read.InvoiceTotalAmount</code></li> <li><code>Invoices.Read.InvoiceStatusesByCompany</code></li> <li><code>Invoices.Read.InvoiceDefaultStatus</code></li> <li><code>Invoices.Read.InvoiceHeaderIds</code></li> <li><code>Invoices.Read.InvoiceHeaderId</code></li> </ul>"},{"location":"permissions/sales/#invoiceswrite","title":"Invoices.Write","text":"<ul> <li><code>Invoices.Write.Invoice</code></li> <li><code>Invoices.Write.Invoice</code></li> <li><code>Invoices.Write.InvoiceNextStatuses</code></li> <li><code>Invoices.Write.InvoicePreviousStatuses</code></li> <li><code>Invoices.Write.InvoiceHeaderIds</code></li> <li><code>Invoices.Write.InvoiceHeaderId</code></li> </ul>"},{"location":"permissions/sales/#ledger-permissions","title":"Ledger Permissions","text":""},{"location":"permissions/sales/#ledgerread","title":"Ledger.Read","text":"<ul> <li><code>Ledger.Read.CustomerLedger</code></li> </ul>"},{"location":"permissions/sales/#myhome-permissions","title":"MyHome Permissions","text":""},{"location":"permissions/sales/#myhomeread","title":"MyHome.Read","text":"<ul> <li><code>MyHome.Read.MyHomeBatchedInvoices</code></li> <li><code>MyHome.Read.MyHomeBatchedInvoice</code></li> </ul>"},{"location":"permissions/sales/#myhomewrite","title":"MyHome.Write","text":"<ul> <li><code>MyHome.Write.MyHomeInvoice</code></li> <li><code>MyHome.Write.MyHomeBatchedInvoices</code></li> </ul>"},{"location":"permissions/sales/#payments-permissions","title":"Payments Permissions","text":""},{"location":"permissions/sales/#paymentsread","title":"Payments.Read","text":"<ul> <li><code>Payments.Read.InvoicePayments</code></li> </ul>"},{"location":"permissions/sales/#paymentswrite","title":"Payments.Write","text":"<ul> <li><code>Payments.Write.PayInvoices</code></li> </ul>"},{"location":"permissions/sales/#warehouse-permissions","title":"WareHouse Permissions","text":""},{"location":"permissions/sales/#warehouseread","title":"WareHouse.Read","text":"<ul> <li><code>WareHouse.Read.WareHouses</code></li> <li><code>WareHouse.Read.WareHouseNames</code></li> </ul>"},{"location":"permissions/sales/#warehousewrite","title":"WareHouse.Write","text":"<ul> <li><code>WareHouse.Write.WareHouse</code></li> <li><code>WareHouse.Write.WareHouse</code></li> </ul>"},{"location":"permissions/sales/#permissions-hierarchy","title":"Permissions Hierarchy","text":""},{"location":"permissions/sales/#salesadmin","title":"Sales.Admin","text":""},{"location":"permissions/sales/#addressadmin","title":"Address.Admin","text":"<ul> <li>Address.Read<ul> <li><code>Address.Read.Countries</code></li> <li><code>Address.Read.States</code></li> <li><code>Address.Read.Cities</code></li> </ul> </li> </ul>"},{"location":"permissions/sales/#customernoteadmin","title":"CustomerNote.Admin","text":"<ul> <li>CustomerNote.Read<ul> <li><code>CustomerNote.Read.CustomerNotes</code></li> </ul> </li> <li>CustomerNote.Write<ul> <li><code>CustomerNote.Write.CustomerNote</code></li> <li><code>CustomerNote.Write.CustomerNoteNextStatus</code></li> <li><code>CustomerNote.Write.CustomerNotePreviousStatus</code></li> </ul> </li> </ul>"},{"location":"permissions/sales/#customersadmin","title":"Customers.Admin","text":"<ul> <li>Customers.Read<ul> <li><code>Customers.Read.CustomerNames</code></li> <li><code>Customers.Read.Customers</code></li> <li><code>Customers.Read.Customer</code></li> <li><code>Customers.Read.AddressByCustomerId</code></li> </ul> </li> <li>Customers.Write<ul> <li><code>Customers.Write.Customer</code></li> <li><code>Customers.Write.Customer</code></li> </ul> </li> </ul>"},{"location":"permissions/sales/#gitadmin","title":"Git.Admin","text":"<ul> <li>Git.Read<ul> <li><code>Git.Read.GetAllPRs</code></li> </ul> </li> </ul>"},{"location":"permissions/sales/#invoicesadmin","title":"Invoices.Admin","text":"<ul> <li>Invoices.Read<ul> <li><code>Invoices.Read.Invoice</code></li> <li><code>Invoices.Read.Invoices</code></li> <li><code>Invoices.Read.InvoiceStatus</code></li> <li><code>Invoices.Read.InvoiceDetail</code></li> <li><code>Invoices.Read.InvoiceHeaders</code></li> <li><code>Invoices.Read.InvoiceHeader</code></li> <li><code>Invoices.Read.InvoiceHeaderByCustomerId</code></li> <li><code>Invoices.Read.PaidInvoiceSummary</code></li> <li><code>Invoices.Read.UnpaidInvoiceSummary</code></li> <li><code>Invoices.Read.OverdueInvoiceSummary</code></li> <li><code>Invoices.Read.TotalAmount</code></li> <li><code>Invoices.Read.InvoiceTotalAmount</code></li> <li><code>Invoices.Read.InvoiceStatusesByCompany</code></li> <li><code>Invoices.Read.InvoiceDefaultStatus</code></li> <li><code>Invoices.Read.InvoiceHeaderIds</code></li> <li><code>Invoices.Read.InvoiceHeaderId</code></li> </ul> </li> <li>Invoices.Write<ul> <li><code>Invoices.Write.Invoice</code></li> <li><code>Invoices.Write.Invoice</code></li> <li><code>Invoices.Write.InvoiceNextStatuses</code></li> <li><code>Invoices.Write.InvoicePreviousStatuses</code></li> <li><code>Invoices.Write.InvoiceHeaderIds</code></li> <li><code>Invoices.Write.InvoiceHeaderId</code></li> </ul> </li> </ul>"},{"location":"permissions/sales/#ledgeradmin","title":"Ledger.Admin","text":"<ul> <li>Ledger.Read<ul> <li><code>Ledger.Read.CustomerLedger</code></li> </ul> </li> </ul>"},{"location":"permissions/sales/#myhomeadmin","title":"MyHome.Admin","text":"<ul> <li>MyHome.Read<ul> <li><code>MyHome.Read.MyHomeBatchedInvoices</code></li> <li><code>MyHome.Read.MyHomeBatchedInvoice</code></li> </ul> </li> <li>MyHome.Write<ul> <li><code>MyHome.Write.MyHomeInvoice</code></li> <li><code>MyHome.Write.MyHomeBatchedInvoices</code></li> </ul> </li> </ul>"},{"location":"permissions/sales/#paymentsadmin","title":"Payments.Admin","text":"<ul> <li>Payments.Read<ul> <li><code>Payments.Read.InvoicePayments</code></li> </ul> </li> <li>Payments.Write<ul> <li><code>Payments.Write.PayInvoices</code></li> </ul> </li> </ul>"},{"location":"permissions/sales/#warehouseadmin","title":"WareHouse.Admin","text":"<ul> <li>WareHouse.Read<ul> <li><code>WareHouse.Read.WareHouses</code></li> <li><code>WareHouse.Read.WareHouseNames</code></li> </ul> </li> <li>WareHouse.Write<ul> <li><code>WareHouse.Write.WareHouse</code></li> <li><code>WareHouse.Write.WareHouse</code></li> </ul> </li> </ul>"},{"location":"policies/office_etiquette_policy/","title":"Office Etiquette Policy","text":""},{"location":"policies/office_etiquette_policy/#1-introduction","title":"1. Introduction","text":"<ul> <li>Purpose: To establish guidelines for professional behavior and interactions within the workplace.</li> <li>Scope: Applies to all employees, contractors, and visitors within the company premises.</li> </ul>"},{"location":"policies/office_etiquette_policy/#2-general-conduct","title":"2. General Conduct","text":"<ul> <li>Professionalism: Maintain a professional demeanor at all times.</li> <li>Respect: Treat all colleagues, clients, and visitors with respect and courtesy.</li> <li>Inclusivity: Promote a culture of inclusivity and diversity. Avoid language or actions that could be discriminatory or offensive.</li> </ul>"},{"location":"policies/office_etiquette_policy/#3-dress-code","title":"3. Dress Code","text":"<ul> <li>Attire: Dress appropriately for your role and the company\u2019s culture. Business casual is generally expected unless specified otherwise.</li> <li>Hygiene: Maintain personal hygiene and presentability.</li> </ul>"},{"location":"policies/office_etiquette_policy/#4-workstation-etiquette","title":"4. Workstation Etiquette","text":"<ul> <li>Cleanliness: Keep your workstation tidy and organized.</li> <li>Personal Items: Limit personal items at your desk to ensure a professional appearance.</li> </ul>"},{"location":"policies/office_etiquette_policy/#5-communication","title":"5. Communication","text":"<ul> <li>Email and Messaging: Use professional language in all written communications. Avoid using slang or overly casual language.</li> <li>Meetings: Be punctual for all meetings. Actively participate and respect the meeting agenda.</li> <li>Phone Calls: Keep phone conversations brief and to the point. Use a low volume to avoid disturbing others.</li> </ul>"},{"location":"policies/office_etiquette_policy/#6-interaction-with-colleagues","title":"6. Interaction with Colleagues","text":"<ul> <li>Collaboration: Work collaboratively and support your team members.</li> <li>Conflict Resolution: Address conflicts professionally and seek assistance from HR if necessary.</li> <li>Privacy: Respect the privacy and personal space of others.</li> </ul>"},{"location":"policies/office_etiquette_policy/#7-work-hours-and-breaks","title":"7. Work Hours and Breaks","text":"<ul> <li>Punctuality: Adhere to the company\u2019s working hours and inform your supervisor if you will be late or absent.</li> <li>Breaks: Take breaks as scheduled and return to work promptly.</li> </ul>"},{"location":"policies/office_etiquette_policy/#8-use-of-company-resources","title":"8. Use of Company Resources","text":"<ul> <li>Equipment: Use company equipment responsibly and report any issues or damages immediately.</li> <li>Internet and Email: Use the internet and email for work-related purposes only. Avoid accessing inappropriate websites or sending personal emails during work hours.</li> </ul>"},{"location":"policies/office_etiquette_policy/#9-health-and-safety","title":"9. Health and Safety","text":"<ul> <li>Workplace Safety: Follow all safety guidelines and report any hazards or accidents to HR immediately.</li> <li>Wellness: Promote a healthy work-life balance and seek support if experiencing stress or burnout.</li> </ul>"},{"location":"policies/office_etiquette_policy/#10-remote-work-etiquette","title":"10. Remote Work Etiquette","text":"<ul> <li>Availability: Be available during working hours and respond to communications promptly.</li> <li>Virtual Meetings: Follow the same etiquette as in-person meetings. Ensure a professional background and minimize distractions.</li> </ul>"},{"location":"policies/office_etiquette_policy/#11-compliance-and-enforcement","title":"11. Compliance and Enforcement","text":"<ul> <li>Policy Adherence: All employees are expected to adhere to this policy.</li> <li>Violations: Non-compliance with this policy may result in disciplinary action, up to and including termination.</li> </ul>"},{"location":"policies/office_etiquette_policy/#12-acknowledgment","title":"12. Acknowledgment","text":"<ul> <li>Employee Confirmation: All employees must sign an acknowledgment form confirming they have read, understood, and will comply with this policy.</li> </ul>"},{"location":"policies/office_etiquette_policy/#acknowledgment-form","title":"Acknowledgment Form","text":"<p>I, _________, acknowledge that I have read and understood the Office Etiquette Policy of [Company Name]. I agree to comply with the guidelines set forth in this policy.</p> <p>Signature: _____ Date: _______</p>"},{"location":"policies/office_etiquette_policy/#13-use-of-mobile-devices-and-media-consumption","title":"13. Use of Mobile Devices and Media Consumption","text":""},{"location":"policies/office_etiquette_policy/#131-general-guidelines","title":"13.1 General Guidelines","text":"<ul> <li>Discretion: Use mobile devices for personal activities discreetly and ensure it does not interfere with your work or distract others.</li> <li>Volume Control: Keep the volume of mobile devices on silent or use headphones to avoid disturbing colleagues.</li> <li>Breaks: Limit personal mobile device usage and media consumption to break times or designated areas.</li> </ul>"},{"location":"policies/office_etiquette_policy/#132-social-media-and-personal-activities","title":"13.2 Social Media and Personal Activities","text":"<ul> <li>Social Media: Use social media for personal purposes during break times. Avoid using social media during working hours (9-6).</li> <li>Personal Calls and Messages: Keep personal calls and messages brief and handle them during breaks whenever possible.</li> </ul>"},{"location":"policies/office_etiquette_policy/#133-watching-videos-and-media-content","title":"13.3 Watching Videos and Media Content","text":"<ul> <li>Work Relevance: Watching videos and other media content should be related to work during working hours. Personal videos should be watched during breaks and with headphones.</li> <li>Avoiding Distractions: Ensure that watching videos does not distract colleagues or impact the overall work environment.</li> </ul>"},{"location":"policies/office_etiquette_policy/#134-designated-areas","title":"13.4 Designated Areas","text":"<ul> <li>Common Areas: Use common areas like break rooms or lounges for watching videos or engaging in personal activities to minimize disruption to others.</li> <li>Quiet Zones: Respect designated quiet zones and avoid using mobile devices or watching videos in these areas.</li> </ul>"},{"location":"policies/office_etiquette_policy/#135-use-of-company-infrastructure","title":"13.5 Use of Company Infrastructure","text":"<ul> <li>Work Hours: From 9 AM to 6 PM, prioritize using company infrastructure (computers, internet, etc.) for work-related tasks. Personal use of company resources should be limited to break times.</li> <li>After Hours: Personal use of company infrastructure is allowed after 6 PM, provided it does not interfere with the work environment or violate company policies.</li> </ul>"},{"location":"policies/office_etiquette_policy/#136-impact-on-productivity","title":"13.6 Impact on Productivity","text":"<ul> <li>Productivity: Ensure that personal mobile device usage and media consumption do not negatively impact your productivity or the productivity of others.</li> <li>Performance: Frequent or excessive use of mobile devices for personal activities that impacts performance may be addressed by supervisors.</li> </ul>"},{"location":"policies/office_etiquette_policy/#137-monitoring-and-compliance","title":"13.7 Monitoring and Compliance","text":"<ul> <li>Monitoring: The company reserves the right to monitor mobile device and company infrastructure usage to ensure compliance with this policy.</li> <li>Compliance: Non-compliance with these guidelines may result in a discussion with your supervisor or, if necessary, further disciplinary action.</li> </ul>"},{"location":"system_overview/MinIO/","title":"Dhanman MinIO Production + QA Setup Documentation","text":"<p>This document provides the complete setup process for running dual MinIO instances (Production + QA) on a single VPS server for Dhanman.</p>"},{"location":"system_overview/MinIO/#prerequisites","title":"\u2705 Prerequisites","text":"<ul> <li>Ubuntu 22.04 VPS (OVH or similar)</li> <li>Domain names: <code>files.dhanman.com</code>, <code>qa.files.dhanman.com</code></li> <li>Public server IP: <code>51.79.156.217</code></li> <li>Ubuntu user with <code>sudo</code> rights</li> </ul>"},{"location":"system_overview/MinIO/#step-1-prepare-folders","title":"\u2705 Step 1: Prepare folders","text":"<pre><code>sudo mkdir -p /opt/minio\nsudo mkdir -p /opt/minio-data-prod\nsudo mkdir -p /opt/minio-data-qa\nsudo chown -R ubuntu:ubuntu /opt/minio-data-prod\nsudo chown -R ubuntu:ubuntu /opt/minio-data-qa\n</code></pre>"},{"location":"system_overview/MinIO/#step-2-download-minio","title":"\u2705 Step 2: Download MinIO","text":"<pre><code>cd /opt/minio\nwget https://dl.min.io/server/minio/release/linux-amd64/minio\nchmod +x minio\n</code></pre>"},{"location":"system_overview/MinIO/#step-3-create-minio-systemd-services","title":"\u2705 Step 3: Create MinIO systemd services","text":""},{"location":"system_overview/MinIO/#minio-prodservice","title":"\ud83c\udfaf minio-prod.service","text":"<pre><code>sudo nano /etc/systemd/system/minio-prod.service\n</code></pre> <p>Content:</p> <pre><code>[Unit]\nDescription=MinIO Production Instance\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nExecStart=/opt/minio/minio server /opt/minio-data-prod --console-address \":9001\"\nEnvironment=\"MINIO_ROOT_USER=prodadmin\"\nEnvironment=\"MINIO_ROOT_PASSWORD=YourProdStrongPassword\"\nUser=ubuntu\nGroup=ubuntu\nRestart=always\nLimitNOFILE=65536\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"system_overview/MinIO/#minio-qaservice","title":"\ud83c\udfaf minio-qa.service","text":"<pre><code>sudo nano /etc/systemd/system/minio-qa.service\n</code></pre> <p>Content:</p> <pre><code>[Unit]\nDescription=MinIO QA Instance\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nExecStart=/opt/minio/minio server /opt/minio-data-qa --console-address \":9003\"\nEnvironment=\"MINIO_ROOT_USER=qaadmin\"\nEnvironment=\"MINIO_ROOT_PASSWORD=YourQaStrongPassword\"\nUser=ubuntu\nGroup=ubuntu\nRestart=always\nLimitNOFILE=65536\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"system_overview/MinIO/#step-4-enable-and-start-services","title":"\u2705 Step 4: Enable and start services","text":"<pre><code>sudo systemctl daemon-reload\nsudo systemctl enable minio-prod\nsudo systemctl enable minio-qa\nsudo systemctl start minio-prod\nsudo systemctl start minio-qa\n</code></pre> <p>Check:</p> <pre><code>sudo systemctl status minio-prod\nsudo systemctl status minio-qa\n</code></pre>"},{"location":"system_overview/MinIO/#step-5-setup-dns","title":"\u2705 Step 5: Setup DNS","text":"<p>In DNS panel:</p> <pre><code>A record \u2192 files.dhanman.com \u2192 51.79.156.217\nA record \u2192 qa.files.dhanman.com \u2192 51.79.156.217\n</code></pre>"},{"location":"system_overview/MinIO/#step-6-install-nginx-certbot","title":"\u2705 Step 6: Install NGINX + Certbot","text":"<pre><code>sudo apt update\nsudo apt install nginx certbot python3-certbot-nginx -y\n</code></pre>"},{"location":"system_overview/MinIO/#step-7-nginx-reverse-proxy-configuration","title":"\u2705 Step 7: NGINX reverse proxy configuration","text":""},{"location":"system_overview/MinIO/#production","title":"\ud83c\udfaf Production","text":"<pre><code>sudo nano /etc/nginx/sites-available/files.dhanman.com\n</code></pre> <pre><code>server {\n    listen 80;\n    server_name files.dhanman.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:9001;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        client_max_body_size 100M;\n    }\n}\n</code></pre> <pre><code>sudo ln -s /etc/nginx/sites-available/files.dhanman.com /etc/nginx/sites-enabled/\n</code></pre>"},{"location":"system_overview/MinIO/#qa","title":"\ud83c\udfaf QA","text":"<pre><code>sudo nano /etc/nginx/sites-available/qa.files.dhanman.com\n</code></pre> <pre><code>server {\n    listen 80;\n    server_name qa.files.dhanman.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:9003;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        client_max_body_size 100M;\n    }\n}\n</code></pre> <pre><code>sudo ln -s /etc/nginx/sites-available/qa.files.dhanman.com /etc/nginx/sites-enabled/\n</code></pre> <p>Reload NGINX:</p> <pre><code>sudo nginx -t\nsudo systemctl reload nginx\n</code></pre>"},{"location":"system_overview/MinIO/#step-8-ssl-certificates","title":"\u2705 Step 8: SSL Certificates","text":"<pre><code>sudo certbot --nginx -d files.dhanman.com -d qa.files.dhanman.com\n</code></pre> <p>Check auto-renewal:</p> <pre><code>sudo systemctl status certbot.timer\n</code></pre>"},{"location":"system_overview/MinIO/#final-result","title":"\u2705 Final Result","text":"Subdomain Port Instance files.dhanman.com 9001 Production MinIO qa.files.dhanman.com 9003 QA MinIO <p>This completes the full MinIO dual-instance infrastructure for Dhanman.</p>"},{"location":"system_overview/architecture/","title":"DhanMan Architecture","text":""},{"location":"system_overview/budgeting_system/","title":"Budgeting System Overview","text":"<p>The budgeting system is designed to enable organizations and their constituent companies to plan, monitor, and analyze their financial resources effectively. It leverages a hierarchical Chart of Accounts maintained at the organization level while supporting granular budget entries and financial tracking at the company level.</p>"},{"location":"system_overview/budgeting_system/#key-features","title":"Key Features","text":"<ul> <li> <p>Company-Level Budgeting:   Budgets are created and managed for individual companies, enabling detailed financial planning aligned with actual business units.</p> </li> <li> <p>Hierarchical Account Structure:   The system uses the organization's Chart of Accounts, supporting multiple levels of accounts. Budget entries are made at the leaf account level, while parent accounts provide aggregated summaries.</p> </li> <li> <p>Flexible Planning Interface:   Users can plan budgets by either entering absolute amounts or specifying percentage changes based on prior period actuals. This flexibility speeds up the budgeting process and enhances usability.</p> </li> <li> <p>Dynamic Roll-ups and Reporting:   Parent account budgets and financial reports are generated by aggregating child account data. The system provides comprehensive variance analysis, showing differences between budgeted and actual amounts in both absolute and percentage terms.</p> </li> <li> <p>Multi-Level Reporting:   Financial reports such as Trial Balance, Balance Sheet, and Budget Variance are available at both company and organization levels, supporting both granular and consolidated views.</p> </li> </ul> <p>This budgeting system integrates with transactional data, ensuring accuracy and consistency in financial management, and supports workflows for drafting, submitting, and approving budgets.</p> <p></p>"},{"location":"system_overview/budgeting_system/#1-proposed-database-tables","title":"1. Proposed Database Tables","text":"<pre><code>-- Budget header: one per organization + financial year + status etc.\nCREATE TABLE public.budgets (\n  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,\n  organization_id uuid NOT NULL,\n  company_id uuid NOT NULL REFERENCES companies(id);\n  finance_year_id int4 NOT NULL,\n  name text NOT NULL,\n  status text NOT NULL DEFAULT 'Draft', -- Draft, Submitted, Approved\n  created_by uuid NOT NULL,\n  created_on_utc timestamp NOT NULL DEFAULT now(),\n  modified_by uuid NULL,\n  modified_on_utc timestamp NULL\n);\n\n-- Budget line: one per leaf account per period\nCREATE TABLE public.budget_lines (\n  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,\n  budget_id uuid NOT NULL REFERENCES budgets(id) ON DELETE CASCADE,\n  account_id uuid NOT NULL REFERENCES chart_of_accounts(id),\n  period_start date NOT NULL,\n  period_end date NOT NULL,\n  amount numeric(15,2) NOT NULL,\n  created_on_utc timestamp NOT NULL DEFAULT now(),\n  modified_on_utc timestamp NULL\n);\n\n-- (Optional) To define account hierarchy levels if not precomputed\nCREATE TABLE public.chart_of_account_levels (\n  account_id uuid PRIMARY KEY REFERENCES chart_of_accounts(id),\n  level int4 NOT NULL -- 1=root, 2=next level, etc.\n);\n</code></pre>"},{"location":"system_overview/budgeting_system/#2-key-data-handling-logic","title":"2. Key Data Handling Logic","text":"<ul> <li>Users enter budgets in <code>budget_lines</code> for leaf accounts (e.g., accounts at level 3 or lowest level shown).</li> <li>Parent account budgets are not entered; they are calculated by summing child leaf budgets when querying or reporting.</li> <li>You can filter accounts by <code>level</code> in the UI to show only relevant accounts for entry.</li> <li>Budget amount is the source of truth stored in the database.</li> </ul>"},{"location":"system_overview/budgeting_system/#3-planning-ui-wireframe-editable-change-or-budget-amount","title":"3. Planning UI Wireframe (Editable % Change or Budget Amount)","text":"<pre><code>+----------------------------------------------------------+\n| Budget: \"FY 2025 Budget\"                                  |\n| Organization: [Org Name]   Year: [2025]                   |\n| Filter: Account Type [Expenses \u25bc]  Account Level [3 \u25bc]    |\n+----------------------------------------------------------+\n\n| Account Number | Account Name           | Last Year Actual | % Change (editable) | Budget Amount (editable) |\n|---------------|------------------------|------------------|---------------------|--------------------------|\n| 6001          | Electricity            | 120,000          | [ +5.0%    ]        | [ 126,000 ]              |\n| 6002          | Water                  | 80,000           | [ -3.0%    ]        | [ 77,600  ]              |\n| 7001          | Cleaning               | 40,000           | [  0.0%    ]        | [ 40,000  ]              |\n+----------------------------------------------------------+\n\n[Save Draft]   [Submit for Approval]   [Export Excel]  [Cancel]\n</code></pre> <ul> <li>Users can edit either % Change or Budget Amount, and the other field updates dynamically.</li> <li><code>Last Year Actual</code> is fetched dynamically from prior data.</li> <li>Budget amount is saved in DB.</li> </ul>"},{"location":"system_overview/budgeting_system/#4-reporting-variance-ui-wireframe","title":"4. Reporting / Variance UI Wireframe","text":"<pre><code>+-------------------------------------------------------------+\n| Budget vs Actuals Dashboard                                  |\n| Organization: [Org Name]   Year: [2025]                      |\n| Filter: Account Type [Expenses \u25bc]  Period: [Monthly \u25bc]       |\n+-------------------------------------------------------------+\n\n| Account Number | Account Name           | Budget | Actual | Variance (Amount) | Variance (%) |\n|---------------|------------------------|--------|--------|-------------------|--------------|\n| 6000          | Utilities              | 400K   | 420K   | -20K              | -5.0%        |\n|   6001        | Electricity            | 150K   | 160K   | -10K              | -6.7%        |\n|   6002        | Water                  | 250K   | 260K   | -10K              | -4.0%        |\n| 7000          | Maintenance            | 300K   | 280K   | +20K              | +7.1%        |\n|   7001        | Cleaning               | 120K   | 130K   | -10K              | -8.3%        |\n|   7002        | Repairs                | 180K   | 150K   | +30K              | +20.0%       |\n+-------------------------------------------------------------+\n\n[Export PDF]   [Drilldown Details]   [Filter Options]\n</code></pre> <ul> <li>Variance is shown both as an absolute amount and percentage for clear analysis.</li> </ul>"},{"location":"system_overview/budgeting_system/#5-data-aggregation-for-parent-accounts","title":"5. Data Aggregation for Parent Accounts","text":"<ul> <li>Parent accounts budgets and actuals are calculated by summing child leaf accounts.</li> <li>Leaf accounts are where budget amounts are entered.</li> </ul>"},{"location":"system_overview/budgeting_system/#summary","title":"Summary","text":"Aspect Details Budget Entries Only on leaf accounts (lowest visible level) Parent Budgets Calculated by summing all child leaf accounts\u2019 budgets Filtering By account level and account type UI Editable % Change or Budget Amount in planning; read-only budget in reporting Reporting Shows budget, actual, variance (amount and %) at all hierarchy levels"},{"location":"system_overview/budgeting_system/#1-fetch-budget-lines-for-a-company-financial-year","title":"1. Fetch Budget Lines for a Company &amp; Financial Year","text":"<pre><code>SELECT\n  bl.id,\n  bl.account_id,\n  coa.account_number,\n  coa.name AS account_name,\n  bl.period_start,\n  bl.period_end,\n  bl.amount AS budget_amount\nFROM public.budget_lines bl\nJOIN public.budgets b ON bl.budget_id = b.id\nJOIN public.chart_of_accounts coa ON bl.account_id = coa.id\nWHERE b.company_id = :company_id\n  AND b.finance_year_id = :finance_year_id\nORDER BY coa.account_number, bl.period_start;\n</code></pre>"},{"location":"system_overview/budgeting_system/#2-get-last-year-actuals-per-account-for-a-company-period","title":"2. Get Last Year Actuals per Account for a Company &amp; Period","text":"<pre><code>SELECT\n  je.account_id,\n  SUM(je.amount) AS actual_amount\nFROM public.journal_entries je\nJOIN public.transaction_headers th ON je.transaction_id = th.id\nWHERE th.company_id = :company_id\n  AND je.transaction_date BETWEEN :period_start AND :period_end\nGROUP BY je.account_id;\n</code></pre>"},{"location":"system_overview/budgeting_system/#3-aggregate-budget-and-actuals-for-company-by-account","title":"3. Aggregate Budget and Actuals for Company by Account","text":"<pre><code>WITH budget_data AS (\n  SELECT\n    bl.account_id,\n    SUM(bl.amount) AS total_budget\n  FROM public.budget_lines bl\n  JOIN public.budgets b ON bl.budget_id = b.id\n  WHERE b.company_id = :company_id\n    AND b.finance_year_id = :finance_year_id\n  GROUP BY bl.account_id\n),\nactual_data AS (\n  SELECT\n    je.account_id,\n    SUM(je.amount) AS total_actual\n  FROM public.journal_entries je\n  JOIN public.transaction_headers th ON je.transaction_id = th.id\n  WHERE th.company_id = :company_id\n    AND je.transaction_date BETWEEN :period_start AND :period_end\n  GROUP BY je.account_id\n)\n\nSELECT\n  coa.account_number,\n  coa.name,\n  bd.total_budget,\n  ad.total_actual,\n  (bd.total_budget - COALESCE(ad.total_actual, 0)) AS variance_amount,\n  CASE WHEN bd.total_budget = 0 THEN NULL\n       ELSE ROUND(((bd.total_budget - COALESCE(ad.total_actual, 0)) / bd.total_budget) * 100, 2)\n  END AS variance_percentage\nFROM budget_data bd\nLEFT JOIN actual_data ad ON bd.account_id = ad.account_id\nJOIN public.chart_of_accounts coa ON bd.account_id = coa.id\nORDER BY coa.account_number;\n</code></pre>"},{"location":"system_overview/budgeting_system/#4-consolidated-budget-and-actuals-across-all-companies-in-an-organization","title":"4. Consolidated Budget and Actuals Across All Companies in an Organization","text":"<pre><code>WITH budget_data AS (\n  SELECT\n    bl.account_id,\n    SUM(bl.amount) AS total_budget\n  FROM public.budget_lines bl\n  JOIN public.budgets b ON bl.budget_id = b.id\n  JOIN public.companies c ON b.company_id = c.id\n  WHERE c.organization_id = :organization_id\n    AND b.finance_year_id = :finance_year_id\n  GROUP BY bl.account_id\n),\nactual_data AS (\n  SELECT\n    je.account_id,\n    SUM(je.amount) AS total_actual\n  FROM public.journal_entries je\n  JOIN public.transaction_headers th ON je.transaction_id = th.id\n  JOIN public.companies c ON th.company_id = c.id\n  WHERE c.organization_id = :organization_id\n    AND je.transaction_date BETWEEN :period_start AND :period_end\n  GROUP BY je.account_id\n)\n\nSELECT\n  coa.account_number,\n  coa.name,\n  bd.total_budget,\n  ad.total_actual,\n  (bd.total_budget - COALESCE(ad.total_actual, 0)) AS variance_amount,\n  CASE WHEN bd.total_budget = 0 THEN NULL\n       ELSE ROUND(((bd.total_budget - COALESCE(ad.total_actual, 0)) / bd.total_budget) * 100, 2)\n  END AS variance_percentage\nFROM budget_data bd\nLEFT JOIN actual_data ad ON bd.account_id = ad.account_id\nJOIN public.chart_of_accounts coa ON bd.account_id = coa.id\nORDER BY coa.account_number;\n</code></pre>"},{"location":"system_overview/budgeting_system/#5-roll-up-budget-summary-at-parent-account-level-recursive-query-example","title":"5. Roll-Up Budget Summary at Parent Account Level (Recursive Query Example)","text":"<pre><code>WITH RECURSIVE coa_tree AS (\n  SELECT\n    id,\n    parent_account_id,\n    account_number,\n    name\n  FROM public.chart_of_accounts\n  WHERE parent_account_id IS NULL -- root level accounts\n\n  UNION ALL\n\n  SELECT\n    c.id,\n    c.parent_account_id,\n    c.account_number,\n    c.name\n  FROM public.chart_of_accounts c\n  INNER JOIN coa_tree ct ON c.parent_account_id = ct.id\n),\nbudget_sums AS (\n  SELECT\n    bl.account_id,\n    SUM(bl.amount) AS total_budget\n  FROM public.budget_lines bl\n  JOIN public.budgets b ON bl.budget_id = b.id\n  WHERE b.company_id = :company_id\n    AND b.finance_year_id = :finance_year_id\n  GROUP BY bl.account_id\n)\nSELECT\n  ct.id AS account_id,\n  ct.account_number,\n  ct.name,\n  COALESCE(SUM(bs.total_budget), 0) AS budget_amount\nFROM coa_tree ct\nLEFT JOIN budget_sums bs ON bs.account_id = ct.id\nGROUP BY ct.id, ct.account_number, ct.name\nORDER BY ct.account_number;\n</code></pre>"},{"location":"system_overview/commands/","title":"Commands","text":"<p>sudo systemctl restart dhanman-common-qa.service sudo systemctl restart dhanman-payroll-qa.service</p> <p>login to server  ssh root@ sudo -u postgres psql"},{"location":"system_overview/design/","title":"\ud83c\udfe0 Dhanman OVH VPS Infrastructure \u2013 Full Deployment Documentation","text":""},{"location":"system_overview/design/#1-tech-stack-overview","title":"\ud83d\udcc6 1. Tech Stack Overview","text":"Layer Technology Used Backend APIs .NET 9 Frontend React 18 (Vite) Database PostgreSQL 17 Auth Auth0 (QA + PROD tenants) Logging Serilog \u2192 Promtail \u2192 Loki Monitoring Grafana, Prometheus, Node/PG Exporter, Uptime Kuma Email Zoho Mail (MX), Brevo SMTP Code Quality SonarQube (Community) Automation Ansible CI/CD GitHub Actions Reverse Proxy NGINX + Certbot"},{"location":"system_overview/design/#2-repositories-overview","title":"\ud83e\uddf0 2. Repositories Overview","text":"Repository Purpose <code>dhanman-common</code> Shared organization-level API logic <code>dhanman-community</code> Housing/residents management <code>dhanman-inventory</code> Stock and warehouse management <code>dhanman-payroll</code> Salary and employee management <code>dhanman-purchase</code> Vendor, PO, GRN, Bills <code>dhanman-sales</code> Customer billing, invoices <code>dhanman-react</code> Frontend App <code>b2a-crosscutting</code> Shared EF Core logic \u2514\ufe0f <code>b2a-permissions</code> Permission handling module \u2514\ufe0f <code>b2a-emailtemplate</code> Email templating module"},{"location":"system_overview/design/#3-database-layout-postgresql-17","title":"\ud83d\uddc3\ufe0f 3. Database Layout (PostgreSQL 17)","text":""},{"location":"system_overview/design/#production","title":"\u2705 Production","text":"<ul> <li><code>prod-dhanman-common</code></li> <li><code>prod-dhanman-community</code></li> <li><code>prod-dhanman-inventory</code></li> <li><code>prod-dhanman-payroll</code></li> <li><code>prod-dhanman-purchase</code></li> <li><code>prod-dhanman-sales</code></li> </ul>"},{"location":"system_overview/design/#qa","title":"\u2705 QA","text":"<ul> <li><code>qa-dhanman-common</code></li> <li><code>qa-dhanman-community</code></li> <li><code>qa-dhanman-inventory</code></li> <li><code>qa-dhanman-payroll</code></li> <li><code>qa-dhanman-purchase</code></li> <li><code>qa-dhanman-sales</code></li> </ul>"},{"location":"system_overview/design/#4-deployment-architecture","title":"\u2699\ufe0f 4. Deployment Architecture","text":""},{"location":"system_overview/design/#folder-structure-on-ovh","title":"\ud83d\udd39 Folder Structure (on OVH)","text":"<pre><code>/var/www/\n\u251c\u2500\u2500 prod/\n\u2502   \u251c\u2500\u2500 dhanman-common/\n\u2502   \u2502   \u251c\u2500\u2500 .env\n\u2502   \u2502   \u2514\u2500\u2500 logs/dhanman-common-YYYYMMDD.log\n\u2502   \u251c\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 logs/\n\u251c\u2500\u2500 qa/\n\u2502   \u251c\u2500\u2500 dhanman-common/\n\u2502   \u2502   \u251c\u2500\u2500 .env\n\u2502   \u2502   \u2514\u2500\u2500 logs/dhanman-common-YYYYMMDD.log\n\u2502   \u251c\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 logs/\n</code></pre>"},{"location":"system_overview/design/#ports","title":"\ud83d\udd39 Ports","text":"Env Service Port QA dhanman-common 5101 QA dhanman-community 5102 QA dhanman-inventory 5103 QA dhanman-payroll 5104 QA dhanman-purchase 5105 QA dhanman-sales 5106 PROD dhanman-common 5001 PROD dhanman-community 5002 PROD dhanman-inventory 5003 PROD dhanman-payroll 5004 PROD dhanman-purchase 5005 PROD dhanman-sales 5006"},{"location":"system_overview/design/#env-example-per-service","title":"\ud83d\udd39 .env Example (Per Service)","text":"<pre><code>ASPNETCORE_ENVIRONMENT=Production\nConnectionStrings__MainDb=Host=...;Database=prod-dhanman-common;...\nConnectionStrings__PermissionsDb=...;\nBrevo__ApiKey=...;\nLogging__Path=/var/www/prod/logs/\n</code></pre> <ul> <li>Injected dynamically from GitHub Secrets during deployment.</li> <li>Ensures clean separation of environments.</li> </ul>"},{"location":"system_overview/design/#5-cicd-github-actions","title":"\ud83d\ude80 5. CI/CD: GitHub Actions","text":""},{"location":"system_overview/design/#qa-deployment","title":"\u2705 QA Deployment","text":"<ul> <li>Triggered on merge to <code>main</code>.</li> <li>Auto deploys to OVH:</li> <li>SSH</li> <li>Rsync binaries</li> <li>Generate <code>.env</code></li> <li>Restart systemd service</li> </ul>"},{"location":"system_overview/design/#prod-deployment","title":"\u2705 PROD Deployment","text":"<ul> <li>Manual via <code>workflow_dispatch</code>.</li> <li>Uses same logic but run intentionally.</li> </ul>"},{"location":"system_overview/design/#secrets-management","title":"\u2705 Secrets Management","text":"Secret Name Purpose <code>DO_HOST</code> OVH IP address <code>DO_USER</code> SSH user <code>DO_SSH_KEY</code> SSH private key <code>CONNECTIONSTRINGS__PURCHASEDB_QA</code> QA DB conn string <code>CONNECTIONSTRINGS__PURCHASEDB_PROD</code> PROD DB conn string <code>CONNECTIONSTRINGS__PERMISSIONSDB_QA</code> Permissions DB <code>CONNECTIONSTRINGS__PERMISSIONSDB_PROD</code> Permissions DB <code>SONAR_TOKEN</code> SonarCloud token"},{"location":"system_overview/design/#6-authentication-with-auth0","title":"\ud83d\udd10 6. Authentication with Auth0","text":"<ul> <li>Two tenants: <code>qa-auth0</code>, <code>prod-auth0</code></li> <li>Custom Actions:</li> <li>Inject <code>customer_id</code>, <code>org_id</code> in access tokens</li> <li>Used in both frontend and backend</li> </ul>"},{"location":"system_overview/design/#7-logging-architecture","title":"\ud83d\udcc4 7. Logging Architecture","text":"<ul> <li>Serilog (JSON logs)</li> <li>Logs written to:</li> <li><code>/var/www/prod/logs/*.log</code></li> <li><code>/var/www/qa/logs/*.log</code></li> <li>Filename format: <code>service-name-YYYYMMDD.log</code></li> <li>Promtail regex extracts service/environment</li> <li>Loki aggregates logs</li> <li>Grafana dashboards include:</li> <li>Error logs</li> <li>Recent events</li> <li>SQL queries via EF</li> </ul>"},{"location":"system_overview/design/#8-monitoring-metrics","title":"\ud83d\udcca 8. Monitoring &amp; Metrics","text":"<ul> <li>Uptime Kuma: HTTP-based health monitoring</li> <li>Prometheus:</li> <li>Node Exporter: CPU, RAM, disk</li> <li>PostgreSQL Exporter: query times, active connections</li> <li>Grafana Dashboards:</li> <li>Live stats</li> <li>Alerts (future enhancement)</li> </ul>"},{"location":"system_overview/design/#9-email-setup","title":"\ud83d\udce7 9. Email Setup","text":"<ul> <li>Zoho Mail:</li> <li>Mailboxes like <code>info@dhanman.com</code></li> <li> <p>SPF, DKIM, DMARC configured</p> </li> <li> <p>Brevo SMTP:</p> </li> <li>Used in email template service</li> <li>Injected via <code>.env</code></li> </ul>"},{"location":"system_overview/design/#10-code-quality","title":"\ud83d\udd22 10. Code Quality","text":"<ul> <li>SonarQube (Community):</li> <li><code>.NET</code> and <code>React</code> projects</li> <li>Scans run in pipeline</li> <li>Token stored in <code>SONAR_TOKEN</code></li> </ul>"},{"location":"system_overview/design/#11-future-improvements","title":"\ud83d\udd27 11. Future Improvements","text":"<ul> <li>[ ] PgBouncer setup for DB pooling</li> <li>[ ] Auto backup of PostgreSQL</li> <li>[ ] Log archival + rotation</li> <li>[ ] Grafana alerts for anomalies</li> <li>[ ] Audit logging for user actions</li> </ul>"},{"location":"system_overview/design/#summary-table","title":"\u2705 Summary Table","text":"Area Status APIs 6 PROD + 6 QA Frontend React 18 SPA Authentication Auth0 (multi-tenant) CI/CD GitHub Actions Logging Serilog + Loki Monitoring Prometheus + Kuma Email Zoho + Brevo SMTP Code Quality SonarQube CI Deployment Ansible + GitHub"},{"location":"system_overview/dhanman_sales/","title":"DhanMan Sales Service Architecture","text":"<p>This diagram represents the internal layered architecture of the <code>Dhanman.Sales</code> service using the C4 model principles.</p> <p></p>"},{"location":"system_overview/dhanman_sales/#layered-structure","title":"\ud83e\uddf1 Layered Structure","text":""},{"location":"system_overview/dhanman_sales/#salesapi-presentation-layer","title":"\ud83d\udd39 Sales.Api (<code>Presentation Layer</code>)","text":"<ul> <li>Controllers: Handle HTTP requests (e.g., <code>/api/invoices</code>)</li> <li>Middleware: Applies cross-cutting logic (logging, exceptions, auth)</li> <li>Services: Contains reusable components like:</li> <li><code>UserContextService</code></li> <li><code>TokenService</code></li> </ul>"},{"location":"system_overview/dhanman_sales/#salesapplication-use-case-layer","title":"\ud83d\udd39 Sales.Application (<code>Use Case Layer</code>)","text":"<ul> <li>Commands / Queries: Define use-case entry points (CQRS)</li> <li>Handlers: Execute business logic for each command/query</li> <li>Features: Modular folders like <code>Invoice</code>, <code>Customer</code>, <code>Company</code></li> <li>Contracts: DTOs for API \u2192 Application \u2192 Domain flow</li> <li>Abstractions: Interfaces for dependency inversion</li> <li>Behaviors: Common logic like:</li> <li>Validation</li> <li>Caching</li> <li>Logging</li> </ul>"},{"location":"system_overview/dhanman_sales/#salesdomain-business-logic-layer","title":"\ud83d\udd39 Sales.Domain (<code>Business Logic Layer</code>)","text":"<ul> <li>Entities: Core business models (e.g., <code>Invoice</code>, <code>Customer</code>)</li> <li>Authorization: Domain permission logic</li> <li>Abstractions: Domain-level interfaces to enforce business rules</li> </ul>"},{"location":"system_overview/dhanman_sales/#salespersistence-infrastructure-layer","title":"\ud83d\udd39 Sales.Persistence (<code>Infrastructure Layer</code>)","text":"<ul> <li>Repositories: Concrete data access implementations (e.g., <code>InvoiceRepository</code>)</li> <li>ApplicationDbContext: EF Core context for DB operations</li> <li>Migrations: EF migration history and schema definitions</li> <li>PostgreSQL: The underlying database for persistence</li> </ul>"},{"location":"system_overview/dhanman_sales/#crosscuttingconcerns-shared-services","title":"\ud83d\udd38 CrossCuttingConcerns (Shared Services)","text":"<ul> <li>Logging: Powered by Serilog</li> <li>Messaging: Event-based communication using RabbitMQ</li> <li>Monitoring: Exposed via Prometheus metrics</li> <li>Authentication: Handled externally via Auth0</li> </ul>"},{"location":"system_overview/dhanman_sales/#request-response-flow","title":"\ud83d\udd01 Request-Response Flow","text":"<pre><code>HTTP Request\n   \u2193\n[Controller]\n   \u2193\n[Command / Query Interface]\n   \u2193\n[Handler]\n   \u2193\n[Repository]\n   \u2193\n[DbContext]\n   \u2193\n[PostgreSQL]\n</code></pre>"},{"location":"system_overview/dhanman_sales/#supporting-flows","title":"\ud83d\udd17 Supporting Flows","text":"<ul> <li> <p><code>Middleware</code> wraps all requests \u2192 handles exceptions, auth, and logging.</p> </li> <li> <p><code>Handlers</code> may:</p> </li> <li>Emit messages \u2192 via RabbitMQ</li> <li>Log events \u2192 via Serilog</li> <li> <p>Update metrics \u2192 via Prometheus</p> </li> <li> <p><code>Services</code> provide reusable user/session context logic to Controllers.</p> </li> </ul>"},{"location":"system_overview/dhanman_sales/#key-benefits","title":"\u2705 Key Benefits","text":"<ul> <li>Separation of concerns between API, use-case, domain, and infra  </li> <li>Testable business logic (independent of DB/web)  </li> <li>Modular features allow scalability  </li> <li>Centralized monitoring, logging, and authentication  </li> </ul> <p>This architecture aligns with DhanMan\u2019s broader microservices strategy and adheres to clean architecture principles.</p>"},{"location":"system_overview/messging_design/","title":"Dhanman Microservices RabbitMQ Messaging Developer Guide","text":""},{"location":"system_overview/messging_design/#1-introduction-to-messaging-architecture","title":"1. Introduction to Messaging Architecture","text":"<p>We use RabbitMQ as our message broker to enable asynchronous, loosely coupled communication between microservices via messages. This event-driven architecture helps build scalable and responsive systems.</p>"},{"location":"system_overview/messging_design/#key-concepts","title":"Key Concepts","text":"<ul> <li>Exchange: Entry point for messages in RabbitMQ. Routes messages to queues based on exchange type and routing keys.</li> <li>Queue: Holds messages until they are consumed.</li> <li>Routing Key: Used by direct exchanges to route messages to appropriate queues.</li> <li>Publisher: Sends messages to exchanges.</li> <li>Consumer: Receives messages from queues.</li> </ul>"},{"location":"system_overview/messging_design/#2-our-exchanges","title":"2. Our Exchanges","text":"<p>We have two main exchanges configured:</p> Exchange Name Type Purpose dhanman.events Fanout Broadcast event messages to all subscribed queues dhanman.commands Direct Route commands to specific service queues based on routing keys"},{"location":"system_overview/messging_design/#3-queues","title":"3. Queues","text":"<p>Each microservice has dedicated queues to consume commands and events:</p> Microservice Command Queue Event Queue Sales sales.commands sales.events Purchase purchase.commands purchase.events Common common.commands common.events Community community.commands community.events Payroll payroll.commands payroll.events Inventory inventory.commands inventory.events"},{"location":"system_overview/messging_design/#4-types-of-messages","title":"4. Types of Messages","text":"<ul> <li> <p>Events:   Represent something that has happened (e.g., <code>UserCreatedEvent</code>, <code>InvoiceCreatedEvent</code>). Published typically with fanout exchange to notify all interested services.</p> </li> <li> <p>Commands:   Represent instructions for something to be done (e.g., <code>CreateInvoiceCommand</code>). Routed with direct exchange using routing keys targeting specific service queues.</p> </li> </ul>"},{"location":"system_overview/messging_design/#5-publishers-consumers","title":"5. Publishers &amp; Consumers","text":""},{"location":"system_overview/messging_design/#publishers","title":"Publishers","text":"<ul> <li> <p><code>IEventPublisher</code> (in B2aTech.CrossCuttingConcern):   Publishes events to <code>dhanman.events</code> fanout exchange using contracts from Dhanman.Shared.Contracts.</p> </li> <li> <p><code>ICommandPublisher</code> (in B2aTech.CrossCuttingConcern):   Publishes commands to <code>dhanman.commands</code> direct exchange with routing keys.</p> </li> </ul>"},{"location":"system_overview/messging_design/#consumers","title":"Consumers","text":"<ul> <li> <p><code>IEventConsumer</code> (in B2aTech.CrossCuttingConcern):   Consumes from event queues subscribed to the fanout exchange.</p> </li> <li> <p><code>ICommandConsumer</code> (in B2aTech.CrossCuttingConcern):   Consumes from command queues directly routed by the command exchange.</p> </li> </ul>"},{"location":"system_overview/messging_design/#6-common-service-role","title":"6. Common Service Role","text":"<p>The Common microservice primarily consumes events like:</p> <ul> <li><code>InvoiceCreatedEvent</code> </li> <li><code>PaymentMadeEvent</code> </li> <li><code>PaymentReceivedEvent</code> </li> <li><code>BillCreatedEvent</code> </li> <li><code>SalaryPostedEvent</code> </li> <li><code>SalaryCreatedEvent</code> </li> </ul> <p>which originate in Sales, Purchase, Payroll, etc. Common processes these to update ledger entries and maintain core accounting records.</p>"},{"location":"system_overview/messging_design/#7-what-has-been-done","title":"7. What Has Been Done","text":"<ul> <li>RabbitMQ instances deployed with Docker for QA and Production.</li> <li>Exchanges and queues declared programmatically at startup for idempotency.</li> <li>Messaging infrastructure abstracted in B2aTech.CrossCuttingConcern reusable package.</li> <li>Shared contracts for events and commands defined in Dhanman.Shared.Contracts.</li> <li>Each microservice (Sales, Purchase, Common, etc.) has a background hosted service that listens to its respective queues.</li> <li>Basic event and command handlers implemented (e.g., <code>UserCreatedEventHandler</code>).</li> <li>Dependency injection and service registration set up for messaging components.</li> </ul>"},{"location":"system_overview/messging_design/#8-developer-responsibilities-going-forward","title":"8. Developer Responsibilities Going Forward","text":""},{"location":"system_overview/messging_design/#defining-new-eventscommands","title":"Defining New Events/Commands","text":"<ul> <li>Add DTOs to Dhanman.Shared.Contracts for new messages.</li> </ul>"},{"location":"system_overview/messging_design/#publishing-messages","title":"Publishing Messages","text":"<ul> <li>Use <code>IEventPublisher</code> or <code>ICommandPublisher</code> in your microservice (e.g., Sales) to publish messages upon domain events or actions.</li> </ul>"},{"location":"system_overview/messging_design/#consuming-messages","title":"Consuming Messages","text":"<ul> <li>Implement <code>IMessageHandler&lt;T&gt;</code> for relevant events/commands in consuming microservices (e.g., Common listens to Sales events).</li> </ul>"},{"location":"system_overview/messging_design/#queue-exchange-management","title":"Queue &amp; Exchange Management","text":"<ul> <li>Declare any new queues or bindings in <code>RabbitMqInitializer</code> or ensure they are declared via consumers\u2019 startup code.</li> </ul>"},{"location":"system_overview/messging_design/#hosted-service-registration","title":"Hosted Service Registration","text":"<ul> <li>Register <code>RabbitMqListenerHostedService</code> in your microservice\u2019s <code>Program.cs</code> to start consuming messages.</li> </ul>"},{"location":"system_overview/messging_design/#handle-idempotency","title":"Handle Idempotency","text":"<ul> <li>Make your handlers resilient to repeated or duplicate messages.</li> </ul>"},{"location":"system_overview/messging_design/#9-useful-rabbitmq-management-tips","title":"9. Useful RabbitMQ Management Tips","text":"<ul> <li>Use the RabbitMQ Management UI (rabbitmq.dhanman.com) to monitor queues, exchanges, message rates.</li> <li>View ready/unacknowledged message counts to monitor health.</li> <li>Inspect logs and dead-letter queues for errors.</li> </ul>"},{"location":"system_overview/messging_design/#summary","title":"Summary","text":"<p>This messaging architecture, built on B2aTech.CrossCuttingConcern and Dhanman.Shared.Contracts, establishes a consistent, scalable foundation for inter-service communication across the Dhanman ecosystem. Developers extending any microservice should align with these patterns to ensure reliability and maintainability.</p>"},{"location":"system_overview/messging_design/#architecture-diagram","title":"Architecture Diagram","text":""},{"location":"system_overview/mkdocs/","title":"MkDocs Deployment Guide","text":""},{"location":"system_overview/mkdocs/#1-install-mkdocs-and-build-your-site","title":"1. Install MkDocs and Build Your Site","text":"<p>pip install mkdocs</p> <p>Navigate to your MkDocs project folder (with mkdocs.yml), then build the static site:</p> <p>mkdocs build</p> <p>The static site files will be generated in the site/ directory.</p>"},{"location":"system_overview/mkdocs/#2-deploy-mkdocs-site","title":"2. Deploy MkDocs Site","text":"<p>You can deploy the static site/ folder on any static hosting platform.</p>"},{"location":"system_overview/mkdocs/#option-a-deploy-to-github-pages","title":"Option A: Deploy to GitHub Pages","text":"<ol> <li>Initialize git repo (if not already done):</li> </ol> <p>git init git add . git commit -m \"Initial commit\"</p> <ol> <li> <p>Push to a GitHub repository.</p> </li> <li> <p>Deploy using the built-in command:</p> </li> </ol> <p>mkdocs gh-deploy</p> <p>This builds and publishes to the gh-pages branch. Access your site at: https://.github.io//"},{"location":"system_overview/mkdocs/#option-b-deploy-on-your-own-web-server","title":"Option B: Deploy on Your Own Web Server","text":"<ol> <li>Build the static site:</li> </ol> <p>mkdocs build</p> <ol> <li> <p>Upload the contents of the site/ directory to your web server root (e.g., /var/www/html).</p> </li> <li> <p>Configure your web server (Apache, Nginx, etc.) to serve the files.</p> </li> </ol>"},{"location":"system_overview/mkdocs/#option-c-deploy-on-netlify-or-vercel","title":"Option C: Deploy on Netlify or Vercel","text":"<ol> <li> <p>Push your MkDocs project to a Git repo (GitHub, GitLab, Bitbucket).</p> </li> <li> <p>Connect the repo to Netlify or Vercel.</p> </li> <li> <p>Set build command to:</p> </li> </ol> <p>mkdocs build</p> <ol> <li>Set the publish directory to:</li> </ol> <p>site</p> <ol> <li>Deploy the site.</li> </ol>"},{"location":"system_overview/mkdocs/#3-optional-customize-mkdocsyml","title":"3. Optional: Customize mkdocs.yml","text":"<p>Make sure your mkdocs.yml has the correct site_url for your deployment.</p>"},{"location":"system_overview/mkdocs/#4-useful-commands-summary","title":"4. Useful Commands Summary","text":"<p>pip install mkdocs           # Install MkDocs mkdocs build                 # Build static site into site/ folder mkdocs serve                 # Preview site locally at http://127.0.0.1:8000/ mkdocs gh-deploy             # Deploy to GitHub Pages automatically</p> <p>Keep this guide handy for quick reference when deploying MkDocs!</p>"},{"location":"system_overview/postgres/","title":"\ud83d\udcc4 PostgreSQL User Access Management (DhanMan on OVH)","text":""},{"location":"system_overview/postgres/#overview","title":"\ud83e\uddfe Overview","text":"<p>This document defines: - Which users (<code>dhanmanqa</code>, <code>dhanmanprod</code>) have access to which databases. - How to check, grant, and revoke access using DBeaver or <code>psql</code>. - How to restrict access using PostgreSQL configurations.</p>"},{"location":"system_overview/postgres/#user-access-matrix","title":"\ud83d\udc64 User Access Matrix","text":"Database dhanmanqa dhanmanprod qa-dhanman-common \u2705 Full \u274c None qa-dhanman-community \u2705 Full \u274c None qa-dhanman-inventory \u2705 Full \u274c None qa-dhanman-payroll \u2705 Full \u274c None qa-dhanman-purchase \u2705 Full \u274c None qa-dhanman-sales \u2705 Full \u274c None prod-dhanman-common \u274c None \u2705 Full prod-dhanman-community \u274c None \u2705 Full prod-dhanman-inventory \u274c None \u2705 Full prod-dhanman-payroll \u274c None \u2705 Full prod-dhanman-purchase \u274c None \u2705 Full prod-dhanman-sales \u274c None \u2705 Full"},{"location":"system_overview/postgres/#diagnostic-check-access-in-any-database","title":"\ud83d\udd0d Diagnostic: Check Access in Any Database","text":"<p>Replace <code>'dhanmanqa'</code> with the target username:</p> <pre><code>WITH target_user AS (\n  SELECT 'dhanmanqa'::text AS username\n)\n\n-- 1. Schema usage\nSELECT 'Schema Usage' AS check_type, n.nspname AS object_name,\n       CASE WHEN has_schema_privilege(t.username, n.nspname, 'USAGE') THEN '\u2705 USAGE'\n            ELSE '\u274c NO USAGE' END AS status\nFROM pg_namespace n CROSS JOIN target_user t\nWHERE n.nspname = 'public'\n\nUNION ALL\n\n-- 2. Table access\nSELECT 'Table Access', t1.table_name,\n       CASE WHEN t2.table_name IS NOT NULL THEN '\u2705 OK'\n            ELSE '\u274c MISSING' END\nFROM information_schema.tables t1 CROSS JOIN target_user t\nLEFT JOIN (\n  SELECT DISTINCT table_name\n  FROM information_schema.role_table_grants\n  WHERE grantee = (SELECT username FROM target_user)\n    AND table_schema = 'public'\n) t2 ON t1.table_name = t2.table_name\nWHERE t1.table_schema = 'public'\n\nUNION ALL\n\n-- 3. Sequence access\nSELECT 'Sequence Access', s.relname,\n       CASE\n         WHEN has_sequence_privilege(t.username, s.oid, 'USAGE') AND\n              has_sequence_privilege(t.username, s.oid, 'SELECT') AND\n              has_sequence_privilege(t.username, s.oid, 'UPDATE')\n         THEN '\u2705 OK' ELSE '\u274c MISSING'\n       END\nFROM pg_class s\nJOIN pg_namespace n ON s.relnamespace = n.oid\nCROSS JOIN target_user t\nWHERE s.relkind = 'S' AND n.nspname = 'public';\n</code></pre>"},{"location":"system_overview/postgres/#grant-full-access-to-a-user-on-a-database","title":"\u2795 Grant Full Access to a User on a Database","text":"<p>Run inside the target QA database:</p> <pre><code>-- Schema usage\nGRANT USAGE, CREATE ON SCHEMA public TO dhanmanqa;\n\n-- Table access\nGRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO dhanmanqa;\nALTER DEFAULT PRIVILEGES IN SCHEMA public\nGRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO dhanmanqa;\n\n-- Sequence access\nGRANT USAGE, SELECT, UPDATE ON ALL SEQUENCES IN SCHEMA public TO dhanmanqa;\nALTER DEFAULT PRIVILEGES IN SCHEMA public\nGRANT USAGE, SELECT, UPDATE ON SEQUENCES TO dhanmanqa;\n</code></pre>"},{"location":"system_overview/postgres/#revoke-all-access-from-a-user-on-a-database","title":"\u2796 Revoke All Access from a User on a Database","text":"<p>Run inside each prod database to revoke <code>dhanmanqa</code> access:</p> <pre><code>REVOKE CONNECT ON DATABASE \"prod-dhanman-common\" FROM dhanmanqa;\nREVOKE ALL PRIVILEGES ON SCHEMA public FROM dhanmanqa;\nREVOKE ALL PRIVILEGES ON ALL TABLES IN SCHEMA public FROM dhanmanqa;\nREVOKE ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public FROM dhanmanqa;\n</code></pre> <p>Repeat for all <code>prod-dhanman-*</code> databases.</p>"},{"location":"system_overview/postgres/#restrict-access-with-pg_hbaconf","title":"\ud83d\udd12 Restrict Access with <code>pg_hba.conf</code>","text":"<ol> <li>Edit the config:</li> </ol> <pre><code>sudo nano /etc/postgresql/&lt;version&gt;/main/pg_hba.conf\n</code></pre> <ol> <li>Add entries:</li> </ol> <pre><code># Block dhanmanqa from PROD\nhost    prod-dhanman-common     dhanmanqa   0.0.0.0/0   reject\nhost    prod-dhanman-community  dhanmanqa   0.0.0.0/0   reject\nhost    prod-dhanman-inventory  dhanmanqa   0.0.0.0/0   reject\nhost    prod-dhanman-payroll    dhanmanqa   0.0.0.0/0   reject\nhost    prod-dhanman-purchase   dhanmanqa   0.0.0.0/0   reject\nhost    prod-dhanman-sales      dhanmanqa   0.0.0.0/0   reject\n\n# Allow dhanmanqa for QA\nhost    qa-dhanman-common       dhanmanqa   0.0.0.0/0   md5\n</code></pre> <ol> <li>Reload PostgreSQL:</li> </ol> <pre><code>sudo systemctl reload postgresql\n</code></pre>"},{"location":"system_overview/postgres/#test-connection-via-cli","title":"\ud83e\uddea Test Connection via CLI","text":"<pre><code>psql -U dhanmanqa -d qa-dhanman-common -h &lt;host&gt; -W\n</code></pre> <p>Or use DBeaver to test login with credentials.</p> <p>ubuntu@vps-0e227e4b:~$ which psql /usr/bin/psql</p>"},{"location":"system_overview/rabbitmq_setup/","title":"Dhanman RabbitMQ Setup (Prod + QA)","text":""},{"location":"system_overview/rabbitmq_setup/#1-prerequisites","title":"1. Prerequisites","text":"<ul> <li>Ubuntu 21.10 / 22.04 VPS on OVH</li> <li>Docker and Docker Compose installed</li> <li>NGINX already running for other services</li> <li>Domain: dhanman.com</li> </ul>"},{"location":"system_overview/rabbitmq_setup/#2-docker-rabbitmq-containers-setup","title":"2. Docker RabbitMQ Containers Setup","text":""},{"location":"system_overview/rabbitmq_setup/#21-production-rabbitmq","title":"2.1. Production RabbitMQ","text":"<pre><code>docker run -d --hostname dhanman-rabbit-prod --name rabbitmq-prod \\\n  -p 5672:5672 -p 15672:15672 \\\n  rabbitmq:3-management\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#22-qa-rabbitmq","title":"2.2. QA RabbitMQ","text":"<pre><code>docker run -d --hostname dhanman-rabbit-qa --name rabbitmq-qa \\\n  -p 5673:5672 -p 15673:15672 \\\n  rabbitmq:3-management\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#3-create-users","title":"3. Create Users","text":""},{"location":"system_overview/rabbitmq_setup/#31-production-user","title":"3.1. Production User","text":"<pre><code>docker exec rabbitmq-prod rabbitmqctl add_user dhanman 'ProdStrongPassword'\ndocker exec rabbitmq-prod rabbitmqctl set_user_tags dhanman administrator\ndocker exec rabbitmq-prod rabbitmqctl set_permissions -p / dhanman \".*\" \".*\" \".*\"\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#32-qa-user","title":"3.2. QA User","text":"<pre><code>docker exec rabbitmq-qa rabbitmqctl add_user dhanman_qa 'QaStrongPassword'\ndocker exec rabbitmq-qa rabbitmqctl set_user_tags dhanman_qa administrator\ndocker exec rabbitmq-qa rabbitmqctl set_permissions -p / dhanman_qa \".*\" \".*\" \".*\"\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#4-dns-setup","title":"4. DNS Setup","text":"Host Type Value rabbitmq.dhanman.com A 51.79.156.217 qa.rabbitmq.dhanman.com A 51.79.156.217"},{"location":"system_overview/rabbitmq_setup/#5-nginx-reverse-proxy-setup","title":"5. NGINX Reverse Proxy Setup","text":""},{"location":"system_overview/rabbitmq_setup/#51-production-nginx-config","title":"5.1. Production NGINX Config","text":"<p>File: <code>/etc/nginx/sites-available/rabbitmq-prod.conf</code></p> <pre><code>server {\n    server_name rabbitmq.dhanman.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:15672/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#52-qa-nginx-config","title":"5.2. QA NGINX Config","text":"<p>File: <code>/etc/nginx/sites-available/rabbitmq-qa.conf</code></p> <pre><code>server {\n    server_name qa.rabbitmq.dhanman.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:15673/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#53-enable-sites","title":"5.3. Enable Sites","text":"<pre><code>sudo ln -s /etc/nginx/sites-available/rabbitmq-prod.conf /etc/nginx/sites-enabled/\nsudo ln -s /etc/nginx/sites-available/rabbitmq-qa.conf /etc/nginx/sites-enabled/\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#54-test-reload-nginx","title":"5.4. Test &amp; Reload NGINX","text":"<pre><code>sudo nginx -t\nsudo systemctl reload nginx\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#6-ssl-setup-with-certbot","title":"6. SSL Setup with Certbot","text":"<pre><code>sudo apt install certbot python3-certbot-nginx -y\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#61-production-ssl","title":"6.1. Production SSL","text":"<pre><code>sudo certbot --nginx -d rabbitmq.dhanman.com\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#62-qa-ssl","title":"6.2. QA SSL","text":"<pre><code>sudo certbot --nginx -d qa.rabbitmq.dhanman.com\n</code></pre>"},{"location":"system_overview/rabbitmq_setup/#7-final-result","title":"7. Final Result","text":"URL Environment Ports https://rabbitmq.dhanman.com Production 5672 AMQP + 443 HTTPS (Mgmt UI) https://qa.rabbitmq.dhanman.com QA 5673 AMQP + 443 HTTPS (Mgmt UI)"},{"location":"system_overview/rabbitmq_setup/#8-optional-security-enhancements","title":"8. Optional Security Enhancements","text":"<ul> <li>Run <code>sudo ufw allow 'Nginx Full'</code></li> <li>Add IP restrictions or basic auth for QA endpoint</li> <li>Add RabbitMQ Prometheus exporter for Grafana dashboards</li> </ul>"},{"location":"system_overview/services_commands/","title":"Dhanman OVH Server Service Management","text":""},{"location":"system_overview/services_commands/#summary-checklist-of-useful-commands","title":"\ud83d\udcdd Summary checklist of useful commands","text":"Action Command Example Check status <code>sudo systemctl status &lt;service&gt;</code> Start <code>sudo systemctl start &lt;service&gt;</code> Stop <code>sudo systemctl stop &lt;service&gt;</code> Restart <code>sudo systemctl restart &lt;service&gt;</code> Enable at boot <code>sudo systemctl enable &lt;service&gt;</code> Disable at boot <code>sudo systemctl disable &lt;service&gt;</code> View logs (follow) <code>sudo journalctl -u &lt;service&gt; -f</code> List active <code>systemctl list-units --type=service \\| grep dhanman</code> List all <code>systemctl list-unit-files --type=service \\| grep dhanman</code>"},{"location":"system_overview/services_commands/#service-names","title":"\ud83d\udd39 Service Names","text":""},{"location":"system_overview/services_commands/#prod-services","title":"Prod Services","text":"<ul> <li><code>dhanman-common-prod.service</code></li> <li><code>dhanman-community-prod.service</code></li> <li><code>dhanman-document-prod.service</code></li> <li><code>dhanman-inventory-prod.service</code></li> <li><code>dhanman-payroll-prod.service</code></li> <li><code>dhanman-purchase-prod.service</code></li> <li><code>dhanman-sales-prod.service</code></li> </ul>"},{"location":"system_overview/services_commands/#qa-services","title":"QA Services","text":"<ul> <li><code>dhanman-common-qa.service</code></li> <li><code>dhanman-community-qa.service</code></li> <li><code>dhanman-document-qa.service</code></li> <li><code>dhanman-inventory-qa.service</code></li> <li><code>dhanman-payroll-qa.service</code></li> <li><code>dhanman-purchase-qa.service</code></li> <li><code>dhanman-sales-qa.service</code></li> </ul>"},{"location":"system_overview/services_commands/#test-services","title":"Test Services","text":"<ul> <li><code>dhanman-common-test.service</code></li> <li><code>dhanman-community-test.service</code></li> <li><code>dhanman-document-test.service</code></li> <li><code>dhanman-inventory-test.service</code></li> <li><code>dhanman-payroll-test.service</code></li> <li><code>dhanman-purchase-test.service</code></li> <li><code>dhanman-sales-test.service</code></li> </ul>"},{"location":"system_overview/services_commands/#manage-all-services","title":"\ud83d\udd39 Manage all services","text":""},{"location":"system_overview/services_commands/#list-all-services-matching-dhanman","title":"\u2705 List all services matching \"dhanman\"","text":"<p>Copy:</p> <pre><code>systemctl list-units --type=service | grep dhanman\n</code></pre>"},{"location":"system_overview/services_commands/#list-all-services-including-inactive","title":"\u2705 List all services including inactive","text":"<p>Copy:</p> <pre><code>systemctl list-unit-files --type=service | grep dhanman\n</code></pre>"},{"location":"system_overview/services_commands/#check-status","title":"\ud83d\udd0d Check status","text":""},{"location":"system_overview/services_commands/#check-status-all-qa-services","title":"\ud83d\udd0d Check status all QA services","text":"<p>Copy:</p> <pre><code>sudo systemctl status dhanman-common-qa.service\nsudo systemctl status dhanman-community-qa.service\nsudo systemctl status dhanman-document-qa.service\nsudo systemctl status dhanman-inventory-qa.service\nsudo systemctl status dhanman-payroll-qa.service\nsudo systemctl status dhanman-purchase-qa.service\nsudo systemctl status dhanman-sales-qa.service\n</code></pre>"},{"location":"system_overview/services_commands/#check-status-all-prod-services","title":"\ud83d\udd0d Check status all PROD services","text":"<p>Copy:</p> <pre><code>sudo systemctl status dhanman-common-prod.service\nsudo systemctl status dhanman-community-prod.service\nsudo systemctl status dhanman-document-prod.service\nsudo systemctl status dhanman-inventory-prod.service\nsudo systemctl status dhanman-payroll-prod.service\nsudo systemctl status dhanman-purchase-prod.service\nsudo systemctl status dhanman-sales-prod.service\n</code></pre>"},{"location":"system_overview/services_commands/#check-status-all-test-services","title":"\ud83d\udd0d Check status all TEST services","text":"<p>Copy:</p> <pre><code>sudo systemctl status dhanman-common-test.service\nsudo systemctl status dhanman-community-test.service\nsudo systemctl status dhanman-document-test.service\nsudo systemctl status dhanman-inventory-test.service\nsudo systemctl status dhanman-payroll-test.service\nsudo systemctl status dhanman-purchase-test.service\nsudo systemctl status dhanman-sales-test.service\n</code></pre>"},{"location":"system_overview/services_commands/#start-services","title":"\u25b6\ufe0f Start services","text":""},{"location":"system_overview/services_commands/#start-all-qa-services","title":"\u25b6\ufe0f Start all QA services","text":"<p>Copy:</p> <pre><code>sudo systemctl start dhanman-common-qa.service\nsudo systemctl start dhanman-community-qa.service\nsudo systemctl start dhanman-document-qa.service\nsudo systemctl start dhanman-inventory-qa.service\nsudo systemctl start dhanman-payroll-qa.service\nsudo systemctl start dhanman-purchase-qa.service\nsudo systemctl start dhanman-sales-qa.service\n</code></pre>"},{"location":"system_overview/services_commands/#start-all-prod-services","title":"\u25b6\ufe0f Start all PROD services","text":"<p>Copy:</p> <pre><code>sudo systemctl start dhanman-common-prod.service\nsudo systemctl start dhanman-community-prod.service\nsudo systemctl start dhanman-document-prod.service\nsudo systemctl start dhanman-inventory-prod.service\nsudo systemctl start dhanman-payroll-prod.service\nsudo systemctl start dhanman-purchase-prod.service\nsudo systemctl start dhanman-sales-prod.service\n</code></pre>"},{"location":"system_overview/services_commands/#start-all-test-services","title":"\u25b6\ufe0f Start all TEST services","text":"<p>Copy:</p> <pre><code>sudo systemctl start dhanman-common-test.service\nsudo systemctl start dhanman-community-test.service\nsudo systemctl start dhanman-document-test.service\nsudo systemctl start dhanman-inventory-test.service\nsudo systemctl start dhanman-payroll-test.service\nsudo systemctl start dhanman-purchase-test.service\nsudo systemctl start dhanman-sales-test.service\n</code></pre>"},{"location":"system_overview/services_commands/#stop-services","title":"\ud83d\udd34 Stop services","text":""},{"location":"system_overview/services_commands/#stop-all-qa-services","title":"\ud83d\udd34 Stop all QA services","text":"<p>Copy:</p> <pre><code>sudo systemctl stop dhanman-common-qa.service\nsudo systemctl stop dhanman-community-qa.service\nsudo systemctl stop dhanman-document-qa.service\nsudo systemctl stop dhanman-inventory-qa.service\nsudo systemctl stop dhanman-payroll-qa.service\nsudo systemctl stop dhanman-purchase-qa.service\nsudo systemctl stop dhanman-sales-qa.service\n</code></pre>"},{"location":"system_overview/services_commands/#stop-all-prod-services","title":"\ud83d\udd34 Stop all PROD services","text":"<p>Copy:</p> <pre><code>sudo systemctl stop dhanman-common-prod.service\nsudo systemctl stop dhanman-community-prod.service\nsudo systemctl stop dhanman-document-prod.service\nsudo systemctl stop dhanman-inventory-prod.service\nsudo systemctl stop dhanman-payroll-prod.service\nsudo systemctl stop dhanman-purchase-prod.service\nsudo systemctl stop dhanman-sales-prod.service\n</code></pre>"},{"location":"system_overview/services_commands/#stop-all-test-services","title":"\ud83d\udd34 Stop all TEST services","text":"<p>Copy:</p> <pre><code>sudo systemctl stop dhanman-common-test.service\nsudo systemctl stop dhanman-community-test.service\nsudo systemctl stop dhanman-document-test.service\nsudo systemctl stop dhanman-inventory-test.service\nsudo systemctl stop dhanman-payroll-test.service\nsudo systemctl stop dhanman-purchase-test.service\nsudo systemctl stop dhanman-sales-test.service\n</code></pre>"},{"location":"system_overview/services_commands/#restart-services","title":"\ud83d\udd04 Restart services","text":""},{"location":"system_overview/services_commands/#restart-all-qa-services","title":"\ud83d\udd04 Restart all QA services","text":"<p>Copy:</p> <pre><code>sudo systemctl restart dhanman-common-qa.service\nsudo systemctl restart dhanman-community-qa.service\nsudo systemctl restart dhanman-document-qa.service\nsudo systemctl restart dhanman-inventory-qa.service\nsudo systemctl restart dhanman-payroll-qa.service\nsudo systemctl restart dhanman-purchase-qa.service\nsudo systemctl restart dhanman-sales-qa.service\n</code></pre>"},{"location":"system_overview/services_commands/#restart-all-prod-services","title":"\ud83d\udd04 Restart all PROD services","text":"<p>Copy:</p> <pre><code>sudo systemctl restart dhanman-common-prod.service\nsudo systemctl restart dhanman-community-prod.service\nsudo systemctl restart dhanman-document-prod.service\nsudo systemctl restart dhanman-inventory-prod.service\nsudo systemctl restart dhanman-payroll-prod.service\nsudo systemctl restart dhanman-purchase-prod.service\nsudo systemctl restart dhanman-sales-prod.service\n</code></pre>"},{"location":"system_overview/services_commands/#restart-all-test-services","title":"\ud83d\udd04 Restart all TEST services","text":"<p>Copy:</p> <pre><code>sudo systemctl restart dhanman-common-test.service\nsudo systemctl restart dhanman-community-test.service\nsudo systemctl restart dhanman-document-test.service\nsudo systemctl restart dhanman-inventory-test.service\nsudo systemctl restart dhanman-payroll-test.service\nsudo systemctl restart dhanman-purchase-test.service\nsudo systemctl restart dhanman-sales-test.service\n</code></pre>"},{"location":"system_overview/services_commands/#enable-services-at-boot","title":"\u2699\ufe0f Enable services at boot","text":""},{"location":"system_overview/services_commands/#enable-all-qa-services","title":"\u2699\ufe0f Enable all QA services","text":"<p>Copy:</p> <pre><code>sudo systemctl enable dhanman-common-qa.service\nsudo systemctl enable dhanman-community-qa.service\nsudo systemctl enable dhanman-document-qa.service\nsudo systemctl enable dhanman-inventory-qa.service\nsudo systemctl enable dhanman-payroll-qa.service\nsudo systemctl enable dhanman-purchase-qa.service\nsudo systemctl enable dhanman-sales-qa.service\n</code></pre>"},{"location":"system_overview/services_commands/#enable-all-prod-services","title":"\u2699\ufe0f Enable all PROD services","text":"<p>Copy:</p> <pre><code>sudo systemctl enable dhanman-common-prod.service\nsudo systemctl enable dhanman-community-prod.service\nsudo systemctl enable dhanman-document-prod.service\nsudo systemctl enable dhanman-inventory-prod.service\nsudo systemctl enable dhanman-payroll-prod.service\nsudo systemctl enable dhanman-purchase-prod.service\nsudo systemctl enable dhanman-sales-prod.service\n</code></pre>"},{"location":"system_overview/services_commands/#enable-all-test-services","title":"\u2699\ufe0f Enable all TEST services","text":"<p>Copy:</p> <pre><code>sudo systemctl enable dhanman-common-test.service\nsudo systemctl enable dhanman-community-test.service\nsudo systemctl enable dhanman-document-test.service\nsudo systemctl enable dhanman-inventory-test.service\nsudo systemctl enable dhanman-payroll-test.service\nsudo systemctl enable dhanman-purchase-test.service\nsudo systemctl enable dhanman-sales-test.service\n</code></pre>"},{"location":"system_overview/services_commands/#disable-services-at-boot","title":"\ud83d\udd12 Disable services at boot","text":""},{"location":"system_overview/services_commands/#disable-all-qa-services","title":"\ud83d\udd12 Disable all QA services","text":"<p>Copy:</p> <pre><code>sudo systemctl disable dhanman-common-qa.service\nsudo systemctl disable dhanman-community-qa.service\nsudo systemctl disable dhanman-document-qa.service\nsudo systemctl disable dhanman-inventory-qa.service\nsudo systemctl disable dhanman-payroll-qa.service\nsudo systemctl disable dhanman-purchase-qa.service\nsudo systemctl disable dhanman-sales-qa.service\n</code></pre>"},{"location":"system_overview/services_commands/#disable-all-prod-services","title":"\ud83d\udd12 Disable all PROD services","text":"<p>Copy:</p> <pre><code>sudo systemctl disable dhanman-common-prod.service\nsudo systemctl disable dhanman-community-prod.service\nsudo systemctl disable dhanman-document-prod.service\nsudo systemctl disable dhanman-inventory-prod.service\nsudo systemctl disable dhanman-payroll-prod.service\nsudo systemctl disable dhanman-purchase-prod.service\nsudo systemctl disable dhanman-sales-prod.service\n</code></pre>"},{"location":"system_overview/services_commands/#disable-all-test-services","title":"\ud83d\udd12 Disable all TEST services","text":"<p>Copy:</p> <pre><code>sudo systemctl disable dhanman-common-test.service\nsudo systemctl disable dhanman-community-test.service\nsudo systemctl disable dhanman-document-test.service\nsudo systemctl disable dhanman-inventory-test.service\nsudo systemctl disable dhanman-payroll-test.service\nsudo systemctl disable dhanman-purchase-test.service\nsudo systemctl disable dhanman-sales-test.service\n</code></pre>"},{"location":"system_overview/services_commands/#view-logs","title":"\ud83d\udcdc View logs","text":""},{"location":"system_overview/services_commands/#view-logs-all-qa-services","title":"\ud83d\udcdc View logs all QA services","text":"<p>Copy:</p> <pre><code>sudo journalctl -u dhanman-common-qa.service -f\nsudo journalctl -u dhanman-community-qa.service -f\nsudo journalctl -u dhanman-document-qa.service -f\nsudo journalctl -u dhanman-inventory-qa.service -f\nsudo journalctl -u dhanman-payroll-qa.service -f\nsudo journalctl -u dhanman-purchase-qa.service -f\nsudo journalctl -u dhanman-sales-qa.service -f\n</code></pre>"},{"location":"system_overview/services_commands/#view-logs-all-prod-services","title":"\ud83d\udcdc View logs all PROD services","text":"<p>Copy:</p> <pre><code>sudo journalctl -u dhanman-common-prod.service -f\nsudo journalctl -u dhanman-community-prod.service -f\nsudo journalctl -u dhanman-document-prod.service -f\nsudo journalctl -u dhanman-inventory-prod.service -f\nsudo journalctl -u dhanman-payroll-prod.service -f\nsudo journalctl -u dhanman-purchase-prod.service -f\nsudo journalctl -u dhanman-sales-prod.service -f\n</code></pre>"},{"location":"system_overview/services_commands/#view-logs-all-test-services","title":"\ud83d\udcdc View logs all TEST services","text":"<p>Copy:</p> <pre><code>sudo journalctl -u dhanman-common-test.service -f\nsudo journalctl -u dhanman-community-test.service -f\nsudo journalctl -u dhanman-document-test.service -f\nsudo journalctl -u dhanman-inventory-test.service -f\nsudo journalctl -u dhanman-payroll-test.service -f\nsudo journalctl -u dhanman-purchase-test.service -f\nsudo journalctl -u dhanman-sales-test.service -f\n</code></pre>"},{"location":"system_overview/water_tanker/","title":"Water Tanker Delivery Tracking Feature","text":""},{"location":"system_overview/water_tanker/#summary","title":"Summary","text":"<p>Many societies rely on external water tankers to supply water intermittently. To enable accurate billing and consumption tracking, this feature allows society managers to record each tanker delivery with essential details such as vendor, date, time, tanker capacity, and actual water received.</p> <p>This system enables:</p> <ul> <li>Detailed tracking of tanker deliveries (multiple per day if needed).</li> <li>Calculation of total water received per period for billing.</li> <li>Reporting on tanker usage trends and vendor performance.</li> </ul>"},{"location":"system_overview/water_tanker/#functional-requirements","title":"Functional Requirements","text":"<ul> <li>Capture vendor details linked to each tanker delivery.</li> <li>Record date and time of each tanker delivery.</li> <li>Log tanker capacity (expected liters) and actual liters received.</li> <li>Support multiple tanker entries in a single form submission.</li> <li>Provide monthly or custom period reports on number of tankers and total liters delivered.</li> <li>Validate actual liters \u2264 tanker capacity.</li> <li>Allow editing and deletion of tanker delivery records.</li> </ul>"},{"location":"system_overview/water_tanker/#database-design","title":"Database Design","text":""},{"location":"system_overview/water_tanker/#table-water_tanker_deliveries","title":"Table: <code>water_tanker_deliveries</code>","text":"Column Type Description <code>id</code> SERIAL PRIMARY KEY Unique record identifier <code>company_id</code> UUID NOT NULL Society/organization identifier <code>vendor_id</code> UUID NOT NULL Vendor providing the tanker <code>delivery_date</code> DATE NOT NULL Date of tanker delivery <code>delivery_time</code> TIME NOT NULL Time of tanker delivery <code>tanker_capacity_liters</code> INTEGER NOT NULL Expected tanker capacity (liters) <code>actual_received_liters</code> INTEGER NOT NULL Actual water received (liters) <code>created_by</code> UUID NOT NULL User who created the record <code>created_on_utc</code> TIMESTAMP WITH TIME ZONE DEFAULT now() Record creation timestamp <code>modified_by</code> UUID Last modifier user <code>modified_on_utc</code> TIMESTAMP WITH TIME ZONE Last modification timestamp <ul> <li><code>company_id</code> links tanker delivery to the society.</li> <li><code>vendor_id</code> refers to existing vendor records.</li> <li>Date and time fields capture when the delivery occurred.</li> <li>Capacity vs actual liters allow tracking variances.</li> </ul>"},{"location":"system_overview/water_tanker/#ui-wireframe-concept","title":"UI Wireframe Concept","text":"<pre><code>--------------------------------------------------------------\n| Water Tanker Delivery Entry                                 |\n--------------------------------------------------------------\n| Vendor: [Dropdown with search/select]                      |\n|                                                            |\n| ---------------------------------------------------------  |\n| | Tanker Deliveries:                                   [+] |  &lt;-- Add new row button\n| ---------------------------------------------------------  |\n|  #  | Date       | Time      | Capacity (liters) | Actual Received (liters) | [x] |\n| ---------------------------------------------------------  |\n|  1  | [DatePicker] | [TimePicker] | [number input]   | [number input]           |    |\n|  2  | [DatePicker] | [TimePicker] | [number input]   | [number input]           |    |\n|  3  | [DatePicker] | [TimePicker] | [number input]   | [number input]           |    |\n|  ...                                                      |\n|                                                          |\n| [ Save ]                                   [ Cancel ]    |\n--------------------------------------------------------------\n</code></pre>"},{"location":"system_overview/water_tanker/#ui-notes","title":"UI Notes","text":"<ul> <li>Vendor selected once per form (assumed one vendor per submission).</li> <li>Each delivery entry has its own date, time, capacity, and actual liters.</li> <li>Users can add multiple deliveries by clicking the [ + ] button.</li> <li>Rows can be removed via the delete [ x ] button.</li> <li>Validation enforces actual liters \u2264 capacity.</li> <li>After filling, the Save button submits all deliveries together.</li> </ul>"},{"location":"system_overview/water_tanker/#reporting-billing-integration","title":"Reporting &amp; Billing Integration","text":"<ul> <li>Provide reports showing tanker deliveries over a date range.</li> <li>Calculate total number of tankers and total liters received for billing cycles.</li> <li>Filter reports by vendor or date range.</li> <li>Enable export of tanker delivery data for accounting.</li> </ul>"},{"location":"system_overview/water_tanker/#important-sql-queries","title":"Important SQL Queries","text":""},{"location":"system_overview/water_tanker/#1-create-table","title":"1. Create table","text":"<pre><code>CREATE TABLE water_tanker_deliveries (\n    id SERIAL PRIMARY KEY,\n    company_id UUID NOT NULL,\n    vendor_id UUID NOT NULL,\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    tanker_capacity_liters INTEGER NOT NULL,\n    actual_received_liters INTEGER NOT NULL,\n    created_by UUID NOT NULL,\n    created_on_utc TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    modified_by UUID,\n    modified_on_utc TIMESTAMP WITH TIME ZONE\n);\n</code></pre>"},{"location":"system_overview/water_tanker/#2-insert-multiple-deliveries-example","title":"2. Insert multiple deliveries (example)","text":"<pre><code>INSERT INTO water_tanker_deliveries\n(company_id, vendor_id, delivery_date, delivery_time, tanker_capacity_liters, actual_received_liters, created_by)\nVALUES\n('company-uuid-1', 'vendor-uuid-1', '2025-05-20', '08:30:00', 15000, 14000, 'user-uuid-1'),\n('company-uuid-1', 'vendor-uuid-1', '2025-05-20', '15:45:00', 5000, 5000, 'user-uuid-1');\n</code></pre>"},{"location":"system_overview/water_tanker/#3-query-total-tankers-and-liters-for-a-month-per-company","title":"3. Query total tankers and liters for a month per company","text":"<pre><code>SELECT\n    COUNT(*) AS total_tankers,\n    SUM(actual_received_liters) AS total_liters\nFROM water_tanker_deliveries\nWHERE company_id = 'company-uuid-1'\n  AND delivery_date BETWEEN '2025-05-01' AND '2025-05-31';\n</code></pre>"},{"location":"system_overview/water_tanker/#4-query-deliveries-by-vendor-and-date-range","title":"4. Query deliveries by vendor and date range","text":"<pre><code>SELECT delivery_date, delivery_time, tanker_capacity_liters, actual_received_liters\nFROM water_tanker_deliveries\nWHERE company_id = 'company-uuid-1'\n  AND vendor_id = 'vendor-uuid-1'\n  AND delivery_date BETWEEN '2025-05-01' AND '2025-05-31'\nORDER BY delivery_date, delivery_time;\n</code></pre>"},{"location":"system_overview/water_tanker/#additional-considerations","title":"Additional Considerations","text":"<ul> <li>Allow editing and deleting tanker delivery records.</li> <li>Optionally capture notes or attach delivery receipts/photos.</li> <li>Support bulk import for societies that track deliveries on paper.</li> <li>Implement notifications/reminders for entering tanker data periodically.</li> </ul>"},{"location":"system_overview/water_tanker/#next-steps","title":"Next Steps","text":"<ul> <li>Implement database migration script for <code>water_tanker_deliveries</code> table.</li> <li>Build API endpoints to create, update, list, and delete tanker delivery records.</li> <li>Develop React form component based on the wireframe with Formik and validation.</li> <li>Create reporting UI/dashboard for tanker deliveries and billing summary.</li> </ul>"},{"location":"system_overview/water_tanker/#water-tanker-delivery-apis-summary","title":"Water Tanker Delivery APIs - Summary","text":"Action HTTP Method URL Create multiple tanker deliveries POST <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries</code> List tanker deliveries (vendor scoped) GET <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries</code> List tanker deliveries (company scoped, all vendors) GET <code>/api/v1/companies/{companyId}/water-tanker-deliveries</code> Get tanker delivery by ID GET <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries/{deliveryId}</code> Update tanker delivery PUT <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries/{deliveryId}</code> Delete tanker delivery DELETE <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries/{deliveryId}</code> Monthly summary report GET <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries/summary?year=2025&amp;month=5</code>"},{"location":"system_overview/water_tanker/#5-api-specification-dhanman-style-urls","title":"5. API Specification (Dhanman-Style URLs)","text":"Action HTTP Method URL Create multiple tanker deliveries POST <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries</code> List tanker deliveries (vendor scoped) GET <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries</code> List tanker deliveries (company scoped, all vendors) GET <code>/api/v1/companies/{companyId}/water-tanker-deliveries</code> Get tanker delivery by ID GET <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries/{deliveryId}</code> Update tanker delivery PUT <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries/{deliveryId}</code> Delete tanker delivery DELETE <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries/{deliveryId}</code> Monthly summary report GET <code>/api/v1/companies/{companyId}/vendors/{vendorId}/water-tanker-deliveries/summary?year=2025&amp;month=5</code>"},{"location":"system_overview/water_tanker/#6-important-sql-queries","title":"6. Important SQL Queries","text":""},{"location":"system_overview/water_tanker/#create-table","title":"Create table","text":"<pre><code>CREATE TABLE water_tanker_deliveries (\n    id SERIAL PRIMARY KEY,\n    company_id UUID NOT NULL,\n    vendor_id UUID NOT NULL,\n    delivery_date DATE NOT NULL,\n    delivery_time TIME NOT NULL,\n    tanker_capacity_liters INTEGER NOT NULL,\n    actual_received_liters INTEGER NOT NULL,\n    created_by UUID NOT NULL,\n    created_on_utc TIMESTAMP WITH TIME ZONE DEFAULT now(),\n    modified_by UUID,\n    modified_on_utc TIMESTAMP WITH TIME ZONE\n);\n</code></pre>"},{"location":"system_overview/water_tanker/#insert-example-multiple-deliveries","title":"Insert example (multiple deliveries)","text":"<pre><code>INSERT INTO water_tanker_deliveries\n(company_id, vendor_id, delivery_date, delivery_time, tanker_capacity_liters, actual_received_liters, created_by)\nVALUES\n('company-uuid-1', 'vendor-uuid-1', '2025-05-20', '08:30:00', 15000, 14000, 'user-uuid-1'),\n('company-uuid-1', 'vendor-uuid-1', '2025-05-20', '15:45:00', 5000, 5000, 'user-uuid-1');\n</code></pre>"},{"location":"system_overview/water_tanker/#query-total-tankers-and-liters-for-a-month-per-company","title":"Query total tankers and liters for a month per company","text":"<pre><code>SELECT\n    COUNT(*) AS total_tankers,\n    SUM(actual_received_liters) AS total_liters\nFROM water_tanker_deliveries\nWHERE company_id = 'company-uuid-1'\n  AND delivery_date BETWEEN '2025-05-01' AND '2025-05-31';\n</code></pre>"},{"location":"system_overview/water_tanker/#query-deliveries-by-vendor-and-date-range","title":"Query deliveries by vendor and date range","text":"<pre><code>SELECT delivery_date, delivery_time, tanker_capacity_liters, actual_received_liters\nFROM water_tanker_deliveries\nWHERE company_id = 'company-uuid-1'\n  AND vendor_id = 'vendor-uuid-1'\n  AND delivery_date BETWEEN '2025-05-01' AND '2025-05-31'\nORDER BY delivery_date, delivery_time;\n</code></pre>"},{"location":"system_overview/water_tanker/#7-validation-business-rules","title":"7. Validation &amp; Business Rules","text":"<ul> <li>Actual liters received must be \u2264 tanker capacity.</li> <li>Delivery date cannot be in the future.</li> <li>Vendor and company IDs must be valid and authorized.</li> <li>Required fields: vendorId, deliveryDate, deliveryTime, tankerCapacityLiters, actualReceivedLiters.</li> <li>Prevent duplicate entries for the same vendor/date/time if needed.</li> </ul>"},{"location":"system_overview/water_tanker/#8-security-permissions","title":"8. Security &amp; Permissions","text":"<ul> <li>Only authorized users of the company can create/edit/delete tanker deliveries.</li> <li>Role-based access control to restrict sensitive operations.</li> <li>Audit trails (createdBy, modifiedBy) for accountability.</li> </ul>"},{"location":"system_overview/water_tanker/#9-testing-considerations","title":"9. Testing Considerations","text":"<ul> <li>Unit tests for API endpoints (create, update, delete, list).</li> <li>UI tests for form validations and multiple entry handling.</li> <li>Edge case tests: invalid liters, missing fields, unauthorized access.</li> <li>Performance tests for listing large data sets.</li> </ul>"},{"location":"system_overview/water_tanker/#10-deployment-migration","title":"10. Deployment &amp; Migration","text":"<ul> <li>Include DB migration script for creating the <code>water_tanker_deliveries</code> table.</li> <li>Version APIs appropriately.</li> <li>Prepare rollback scripts for DB changes if necessary.</li> </ul>"},{"location":"system_overview/water_tanker/#11-examples-sample-data","title":"11. Examples &amp; Sample Data","text":"<ul> <li>Provide sample API requests and responses.</li> <li>Use dummy data in UI for demonstration.</li> </ul>"},{"location":"system_overview/water_tanker/#12-faqs-troubleshooting","title":"12. FAQs &amp; Troubleshooting","text":"<ul> <li> <p>Q: How to handle partial deliveries?   A: Record actual liters received, which can be less than capacity.</p> </li> <li> <p>Q: Can vendors be added dynamically?   A: Vendor management is handled separately; ensure vendors exist before assigning.</p> </li> <li> <p>Q: How to report total water usage?   A: Use the summary report API filtered by company and month.</p> </li> </ul>"},{"location":"system_overview/water_tanker/#13-next-steps","title":"13. Next Steps","text":"<ul> <li>Develop DB migration and seed scripts.</li> <li>Implement REST APIs following the above spec.</li> <li>Build React form UI using the wireframe.</li> <li>Create reporting dashboards for management.</li> <li>Integrate billing system with delivery data.</li> </ul>"}]}